Search.setIndex({docnames:["index","pyspark","pyspark.ml","pyspark.mllib","pyspark.resource","pyspark.sql","pyspark.streaming","source/reference/api/pyspark.Accumulator","source/reference/api/pyspark.Accumulator.add","source/reference/api/pyspark.Accumulator.value","source/reference/api/pyspark.BarrierTaskContext","source/reference/api/pyspark.BarrierTaskContext.allGather","source/reference/api/pyspark.BarrierTaskContext.attemptNumber","source/reference/api/pyspark.BarrierTaskContext.barrier","source/reference/api/pyspark.BarrierTaskContext.get","source/reference/api/pyspark.BarrierTaskContext.getLocalProperty","source/reference/api/pyspark.BarrierTaskContext.getTaskInfos","source/reference/api/pyspark.BarrierTaskContext.partitionId","source/reference/api/pyspark.BarrierTaskContext.resources","source/reference/api/pyspark.BarrierTaskContext.stageId","source/reference/api/pyspark.BarrierTaskContext.taskAttemptId","source/reference/api/pyspark.BarrierTaskInfo","source/reference/api/pyspark.Broadcast","source/reference/api/pyspark.Broadcast.destroy","source/reference/api/pyspark.Broadcast.dump","source/reference/api/pyspark.Broadcast.load","source/reference/api/pyspark.Broadcast.load_from_path","source/reference/api/pyspark.Broadcast.unpersist","source/reference/api/pyspark.Broadcast.value","source/reference/api/pyspark.RDD","source/reference/api/pyspark.RDD.aggregate","source/reference/api/pyspark.RDD.aggregateByKey","source/reference/api/pyspark.RDD.barrier","source/reference/api/pyspark.RDD.cache","source/reference/api/pyspark.RDD.cartesian","source/reference/api/pyspark.RDD.checkpoint","source/reference/api/pyspark.RDD.coalesce","source/reference/api/pyspark.RDD.cogroup","source/reference/api/pyspark.RDD.collect","source/reference/api/pyspark.RDD.collectAsMap","source/reference/api/pyspark.RDD.collectWithJobGroup","source/reference/api/pyspark.RDD.combineByKey","source/reference/api/pyspark.RDD.context","source/reference/api/pyspark.RDD.count","source/reference/api/pyspark.RDD.countApprox","source/reference/api/pyspark.RDD.countApproxDistinct","source/reference/api/pyspark.RDD.countByKey","source/reference/api/pyspark.RDD.countByValue","source/reference/api/pyspark.RDD.distinct","source/reference/api/pyspark.RDD.filter","source/reference/api/pyspark.RDD.first","source/reference/api/pyspark.RDD.flatMap","source/reference/api/pyspark.RDD.flatMapValues","source/reference/api/pyspark.RDD.fold","source/reference/api/pyspark.RDD.foldByKey","source/reference/api/pyspark.RDD.foreach","source/reference/api/pyspark.RDD.foreachPartition","source/reference/api/pyspark.RDD.fullOuterJoin","source/reference/api/pyspark.RDD.getCheckpointFile","source/reference/api/pyspark.RDD.getNumPartitions","source/reference/api/pyspark.RDD.getResourceProfile","source/reference/api/pyspark.RDD.getStorageLevel","source/reference/api/pyspark.RDD.glom","source/reference/api/pyspark.RDD.groupBy","source/reference/api/pyspark.RDD.groupByKey","source/reference/api/pyspark.RDD.groupWith","source/reference/api/pyspark.RDD.histogram","source/reference/api/pyspark.RDD.id","source/reference/api/pyspark.RDD.intersection","source/reference/api/pyspark.RDD.isCheckpointed","source/reference/api/pyspark.RDD.isEmpty","source/reference/api/pyspark.RDD.isLocallyCheckpointed","source/reference/api/pyspark.RDD.join","source/reference/api/pyspark.RDD.keyBy","source/reference/api/pyspark.RDD.keys","source/reference/api/pyspark.RDD.leftOuterJoin","source/reference/api/pyspark.RDD.localCheckpoint","source/reference/api/pyspark.RDD.lookup","source/reference/api/pyspark.RDD.map","source/reference/api/pyspark.RDD.mapPartitions","source/reference/api/pyspark.RDD.mapPartitionsWithIndex","source/reference/api/pyspark.RDD.mapPartitionsWithSplit","source/reference/api/pyspark.RDD.mapValues","source/reference/api/pyspark.RDD.max","source/reference/api/pyspark.RDD.mean","source/reference/api/pyspark.RDD.meanApprox","source/reference/api/pyspark.RDD.min","source/reference/api/pyspark.RDD.name","source/reference/api/pyspark.RDD.partitionBy","source/reference/api/pyspark.RDD.persist","source/reference/api/pyspark.RDD.pipe","source/reference/api/pyspark.RDD.randomSplit","source/reference/api/pyspark.RDD.reduce","source/reference/api/pyspark.RDD.reduceByKey","source/reference/api/pyspark.RDD.reduceByKeyLocally","source/reference/api/pyspark.RDD.repartition","source/reference/api/pyspark.RDD.repartitionAndSortWithinPartitions","source/reference/api/pyspark.RDD.rightOuterJoin","source/reference/api/pyspark.RDD.sample","source/reference/api/pyspark.RDD.sampleByKey","source/reference/api/pyspark.RDD.sampleStdev","source/reference/api/pyspark.RDD.sampleVariance","source/reference/api/pyspark.RDD.saveAsHadoopDataset","source/reference/api/pyspark.RDD.saveAsHadoopFile","source/reference/api/pyspark.RDD.saveAsNewAPIHadoopDataset","source/reference/api/pyspark.RDD.saveAsNewAPIHadoopFile","source/reference/api/pyspark.RDD.saveAsPickleFile","source/reference/api/pyspark.RDD.saveAsSequenceFile","source/reference/api/pyspark.RDD.saveAsTextFile","source/reference/api/pyspark.RDD.setName","source/reference/api/pyspark.RDD.sortBy","source/reference/api/pyspark.RDD.sortByKey","source/reference/api/pyspark.RDD.stats","source/reference/api/pyspark.RDD.stdev","source/reference/api/pyspark.RDD.subtract","source/reference/api/pyspark.RDD.subtractByKey","source/reference/api/pyspark.RDD.sum","source/reference/api/pyspark.RDD.sumApprox","source/reference/api/pyspark.RDD.take","source/reference/api/pyspark.RDD.takeOrdered","source/reference/api/pyspark.RDD.takeSample","source/reference/api/pyspark.RDD.toDebugString","source/reference/api/pyspark.RDD.toLocalIterator","source/reference/api/pyspark.RDD.top","source/reference/api/pyspark.RDD.treeAggregate","source/reference/api/pyspark.RDD.treeReduce","source/reference/api/pyspark.RDD.union","source/reference/api/pyspark.RDD.unpersist","source/reference/api/pyspark.RDD.values","source/reference/api/pyspark.RDD.variance","source/reference/api/pyspark.RDD.withResources","source/reference/api/pyspark.RDD.zip","source/reference/api/pyspark.RDD.zipWithIndex","source/reference/api/pyspark.RDD.zipWithUniqueId","source/reference/api/pyspark.RDDBarrier","source/reference/api/pyspark.RDDBarrier.mapPartitions","source/reference/api/pyspark.RDDBarrier.mapPartitionsWithIndex","source/reference/api/pyspark.SparkConf","source/reference/api/pyspark.SparkConf.contains","source/reference/api/pyspark.SparkConf.get","source/reference/api/pyspark.SparkConf.getAll","source/reference/api/pyspark.SparkConf.set","source/reference/api/pyspark.SparkConf.setAll","source/reference/api/pyspark.SparkConf.setAppName","source/reference/api/pyspark.SparkConf.setExecutorEnv","source/reference/api/pyspark.SparkConf.setIfMissing","source/reference/api/pyspark.SparkConf.setMaster","source/reference/api/pyspark.SparkConf.setSparkHome","source/reference/api/pyspark.SparkConf.toDebugString","source/reference/api/pyspark.SparkContext","source/reference/api/pyspark.SparkContext.PACKAGE_EXTENSIONS","source/reference/api/pyspark.SparkContext.accumulator","source/reference/api/pyspark.SparkContext.addFile","source/reference/api/pyspark.SparkContext.addPyFile","source/reference/api/pyspark.SparkContext.applicationId","source/reference/api/pyspark.SparkContext.binaryFiles","source/reference/api/pyspark.SparkContext.binaryRecords","source/reference/api/pyspark.SparkContext.broadcast","source/reference/api/pyspark.SparkContext.cancelAllJobs","source/reference/api/pyspark.SparkContext.cancelJobGroup","source/reference/api/pyspark.SparkContext.defaultMinPartitions","source/reference/api/pyspark.SparkContext.defaultParallelism","source/reference/api/pyspark.SparkContext.dump_profiles","source/reference/api/pyspark.SparkContext.emptyRDD","source/reference/api/pyspark.SparkContext.getConf","source/reference/api/pyspark.SparkContext.getLocalProperty","source/reference/api/pyspark.SparkContext.getOrCreate","source/reference/api/pyspark.SparkContext.hadoopFile","source/reference/api/pyspark.SparkContext.hadoopRDD","source/reference/api/pyspark.SparkContext.newAPIHadoopFile","source/reference/api/pyspark.SparkContext.newAPIHadoopRDD","source/reference/api/pyspark.SparkContext.parallelize","source/reference/api/pyspark.SparkContext.pickleFile","source/reference/api/pyspark.SparkContext.range","source/reference/api/pyspark.SparkContext.resources","source/reference/api/pyspark.SparkContext.runJob","source/reference/api/pyspark.SparkContext.sequenceFile","source/reference/api/pyspark.SparkContext.setCheckpointDir","source/reference/api/pyspark.SparkContext.setJobDescription","source/reference/api/pyspark.SparkContext.setJobGroup","source/reference/api/pyspark.SparkContext.setLocalProperty","source/reference/api/pyspark.SparkContext.setLogLevel","source/reference/api/pyspark.SparkContext.setSystemProperty","source/reference/api/pyspark.SparkContext.show_profiles","source/reference/api/pyspark.SparkContext.sparkUser","source/reference/api/pyspark.SparkContext.startTime","source/reference/api/pyspark.SparkContext.statusTracker","source/reference/api/pyspark.SparkContext.stop","source/reference/api/pyspark.SparkContext.textFile","source/reference/api/pyspark.SparkContext.uiWebUrl","source/reference/api/pyspark.SparkContext.union","source/reference/api/pyspark.SparkContext.version","source/reference/api/pyspark.SparkContext.wholeTextFiles","source/reference/api/pyspark.SparkFiles","source/reference/api/pyspark.SparkFiles.get","source/reference/api/pyspark.SparkFiles.getRootDirectory","source/reference/api/pyspark.StorageLevel","source/reference/api/pyspark.StorageLevel.DISK_ONLY","source/reference/api/pyspark.StorageLevel.DISK_ONLY_2","source/reference/api/pyspark.StorageLevel.DISK_ONLY_3","source/reference/api/pyspark.StorageLevel.MEMORY_AND_DISK","source/reference/api/pyspark.StorageLevel.MEMORY_AND_DISK_2","source/reference/api/pyspark.StorageLevel.MEMORY_ONLY","source/reference/api/pyspark.StorageLevel.MEMORY_ONLY_2","source/reference/api/pyspark.StorageLevel.OFF_HEAP","source/reference/api/pyspark.TaskContext","source/reference/api/pyspark.TaskContext.attemptNumber","source/reference/api/pyspark.TaskContext.get","source/reference/api/pyspark.TaskContext.getLocalProperty","source/reference/api/pyspark.TaskContext.partitionId","source/reference/api/pyspark.TaskContext.resources","source/reference/api/pyspark.TaskContext.stageId","source/reference/api/pyspark.TaskContext.taskAttemptId","source/reference/api/pyspark.ml.Estimator","source/reference/api/pyspark.ml.Model","source/reference/api/pyspark.ml.Pipeline","source/reference/api/pyspark.ml.PipelineModel","source/reference/api/pyspark.ml.PredictionModel","source/reference/api/pyspark.ml.Predictor","source/reference/api/pyspark.ml.Transformer","source/reference/api/pyspark.ml.UnaryTransformer","source/reference/api/pyspark.ml.classification.BinaryLogisticRegressionSummary","source/reference/api/pyspark.ml.classification.BinaryLogisticRegressionTrainingSummary","source/reference/api/pyspark.ml.classification.BinaryRandomForestClassificationSummary","source/reference/api/pyspark.ml.classification.BinaryRandomForestClassificationTrainingSummary","source/reference/api/pyspark.ml.classification.DecisionTreeClassificationModel","source/reference/api/pyspark.ml.classification.DecisionTreeClassifier","source/reference/api/pyspark.ml.classification.FMClassificationModel","source/reference/api/pyspark.ml.classification.FMClassificationSummary","source/reference/api/pyspark.ml.classification.FMClassificationTrainingSummary","source/reference/api/pyspark.ml.classification.FMClassifier","source/reference/api/pyspark.ml.classification.GBTClassificationModel","source/reference/api/pyspark.ml.classification.GBTClassifier","source/reference/api/pyspark.ml.classification.LinearSVC","source/reference/api/pyspark.ml.classification.LinearSVCModel","source/reference/api/pyspark.ml.classification.LinearSVCSummary","source/reference/api/pyspark.ml.classification.LinearSVCTrainingSummary","source/reference/api/pyspark.ml.classification.LogisticRegression","source/reference/api/pyspark.ml.classification.LogisticRegressionModel","source/reference/api/pyspark.ml.classification.LogisticRegressionSummary","source/reference/api/pyspark.ml.classification.LogisticRegressionTrainingSummary","source/reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationModel","source/reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationSummary","source/reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationTrainingSummary","source/reference/api/pyspark.ml.classification.MultilayerPerceptronClassifier","source/reference/api/pyspark.ml.classification.NaiveBayes","source/reference/api/pyspark.ml.classification.NaiveBayesModel","source/reference/api/pyspark.ml.classification.OneVsRest","source/reference/api/pyspark.ml.classification.OneVsRestModel","source/reference/api/pyspark.ml.classification.RandomForestClassificationModel","source/reference/api/pyspark.ml.classification.RandomForestClassificationSummary","source/reference/api/pyspark.ml.classification.RandomForestClassificationTrainingSummary","source/reference/api/pyspark.ml.classification.RandomForestClassifier","source/reference/api/pyspark.ml.clustering.BisectingKMeans","source/reference/api/pyspark.ml.clustering.BisectingKMeansModel","source/reference/api/pyspark.ml.clustering.BisectingKMeansSummary","source/reference/api/pyspark.ml.clustering.DistributedLDAModel","source/reference/api/pyspark.ml.clustering.GaussianMixture","source/reference/api/pyspark.ml.clustering.GaussianMixtureModel","source/reference/api/pyspark.ml.clustering.GaussianMixtureSummary","source/reference/api/pyspark.ml.clustering.KMeans","source/reference/api/pyspark.ml.clustering.KMeansModel","source/reference/api/pyspark.ml.clustering.LDA","source/reference/api/pyspark.ml.clustering.LDAModel","source/reference/api/pyspark.ml.clustering.LocalLDAModel","source/reference/api/pyspark.ml.clustering.PowerIterationClustering","source/reference/api/pyspark.ml.evaluation.BinaryClassificationEvaluator","source/reference/api/pyspark.ml.evaluation.ClusteringEvaluator","source/reference/api/pyspark.ml.evaluation.Evaluator","source/reference/api/pyspark.ml.evaluation.MulticlassClassificationEvaluator","source/reference/api/pyspark.ml.evaluation.MultilabelClassificationEvaluator","source/reference/api/pyspark.ml.evaluation.RankingEvaluator","source/reference/api/pyspark.ml.evaluation.RegressionEvaluator","source/reference/api/pyspark.ml.feature.ANOVASelector","source/reference/api/pyspark.ml.feature.ANOVASelectorModel","source/reference/api/pyspark.ml.feature.Binarizer","source/reference/api/pyspark.ml.feature.BucketedRandomProjectionLSH","source/reference/api/pyspark.ml.feature.BucketedRandomProjectionLSHModel","source/reference/api/pyspark.ml.feature.Bucketizer","source/reference/api/pyspark.ml.feature.ChiSqSelector","source/reference/api/pyspark.ml.feature.ChiSqSelectorModel","source/reference/api/pyspark.ml.feature.CountVectorizer","source/reference/api/pyspark.ml.feature.CountVectorizerModel","source/reference/api/pyspark.ml.feature.DCT","source/reference/api/pyspark.ml.feature.ElementwiseProduct","source/reference/api/pyspark.ml.feature.FValueSelector","source/reference/api/pyspark.ml.feature.FValueSelectorModel","source/reference/api/pyspark.ml.feature.FeatureHasher","source/reference/api/pyspark.ml.feature.HashingTF","source/reference/api/pyspark.ml.feature.IDF","source/reference/api/pyspark.ml.feature.IDFModel","source/reference/api/pyspark.ml.feature.Imputer","source/reference/api/pyspark.ml.feature.ImputerModel","source/reference/api/pyspark.ml.feature.IndexToString","source/reference/api/pyspark.ml.feature.Interaction","source/reference/api/pyspark.ml.feature.MaxAbsScaler","source/reference/api/pyspark.ml.feature.MaxAbsScalerModel","source/reference/api/pyspark.ml.feature.MinHashLSH","source/reference/api/pyspark.ml.feature.MinHashLSHModel","source/reference/api/pyspark.ml.feature.MinMaxScaler","source/reference/api/pyspark.ml.feature.MinMaxScalerModel","source/reference/api/pyspark.ml.feature.NGram","source/reference/api/pyspark.ml.feature.Normalizer","source/reference/api/pyspark.ml.feature.OneHotEncoder","source/reference/api/pyspark.ml.feature.OneHotEncoderModel","source/reference/api/pyspark.ml.feature.PCA","source/reference/api/pyspark.ml.feature.PCAModel","source/reference/api/pyspark.ml.feature.PolynomialExpansion","source/reference/api/pyspark.ml.feature.QuantileDiscretizer","source/reference/api/pyspark.ml.feature.RFormula","source/reference/api/pyspark.ml.feature.RFormulaModel","source/reference/api/pyspark.ml.feature.RegexTokenizer","source/reference/api/pyspark.ml.feature.RobustScaler","source/reference/api/pyspark.ml.feature.RobustScalerModel","source/reference/api/pyspark.ml.feature.SQLTransformer","source/reference/api/pyspark.ml.feature.StandardScaler","source/reference/api/pyspark.ml.feature.StandardScalerModel","source/reference/api/pyspark.ml.feature.StopWordsRemover","source/reference/api/pyspark.ml.feature.StringIndexer","source/reference/api/pyspark.ml.feature.StringIndexerModel","source/reference/api/pyspark.ml.feature.Tokenizer","source/reference/api/pyspark.ml.feature.VarianceThresholdSelector","source/reference/api/pyspark.ml.feature.VarianceThresholdSelectorModel","source/reference/api/pyspark.ml.feature.VectorAssembler","source/reference/api/pyspark.ml.feature.VectorIndexer","source/reference/api/pyspark.ml.feature.VectorIndexerModel","source/reference/api/pyspark.ml.feature.VectorSizeHint","source/reference/api/pyspark.ml.feature.VectorSlicer","source/reference/api/pyspark.ml.feature.Word2Vec","source/reference/api/pyspark.ml.feature.Word2VecModel","source/reference/api/pyspark.ml.fpm.FPGrowth","source/reference/api/pyspark.ml.fpm.FPGrowthModel","source/reference/api/pyspark.ml.fpm.PrefixSpan","source/reference/api/pyspark.ml.functions.vector_to_array","source/reference/api/pyspark.ml.image.ImageSchema","source/reference/api/pyspark.ml.image._ImageSchema","source/reference/api/pyspark.ml.linalg.DenseMatrix","source/reference/api/pyspark.ml.linalg.DenseVector","source/reference/api/pyspark.ml.linalg.Matrices","source/reference/api/pyspark.ml.linalg.Matrix","source/reference/api/pyspark.ml.linalg.SparseMatrix","source/reference/api/pyspark.ml.linalg.SparseVector","source/reference/api/pyspark.ml.linalg.Vector","source/reference/api/pyspark.ml.linalg.Vectors","source/reference/api/pyspark.ml.param.Param","source/reference/api/pyspark.ml.param.Params","source/reference/api/pyspark.ml.param.TypeConverters","source/reference/api/pyspark.ml.recommendation.ALS","source/reference/api/pyspark.ml.recommendation.ALSModel","source/reference/api/pyspark.ml.regression.AFTSurvivalRegression","source/reference/api/pyspark.ml.regression.AFTSurvivalRegressionModel","source/reference/api/pyspark.ml.regression.DecisionTreeRegressionModel","source/reference/api/pyspark.ml.regression.DecisionTreeRegressor","source/reference/api/pyspark.ml.regression.FMRegressionModel","source/reference/api/pyspark.ml.regression.FMRegressor","source/reference/api/pyspark.ml.regression.GBTRegressionModel","source/reference/api/pyspark.ml.regression.GBTRegressor","source/reference/api/pyspark.ml.regression.GeneralizedLinearRegression","source/reference/api/pyspark.ml.regression.GeneralizedLinearRegressionModel","source/reference/api/pyspark.ml.regression.GeneralizedLinearRegressionSummary","source/reference/api/pyspark.ml.regression.GeneralizedLinearRegressionTrainingSummary","source/reference/api/pyspark.ml.regression.IsotonicRegression","source/reference/api/pyspark.ml.regression.IsotonicRegressionModel","source/reference/api/pyspark.ml.regression.LinearRegression","source/reference/api/pyspark.ml.regression.LinearRegressionModel","source/reference/api/pyspark.ml.regression.LinearRegressionSummary","source/reference/api/pyspark.ml.regression.LinearRegressionTrainingSummary","source/reference/api/pyspark.ml.regression.RandomForestRegressionModel","source/reference/api/pyspark.ml.regression.RandomForestRegressor","source/reference/api/pyspark.ml.stat.ANOVATest","source/reference/api/pyspark.ml.stat.ChiSquareTest","source/reference/api/pyspark.ml.stat.Correlation","source/reference/api/pyspark.ml.stat.FValueTest","source/reference/api/pyspark.ml.stat.KolmogorovSmirnovTest","source/reference/api/pyspark.ml.stat.MultivariateGaussian","source/reference/api/pyspark.ml.stat.Summarizer","source/reference/api/pyspark.ml.stat.SummaryBuilder","source/reference/api/pyspark.ml.tuning.CrossValidator","source/reference/api/pyspark.ml.tuning.CrossValidatorModel","source/reference/api/pyspark.ml.tuning.ParamGridBuilder","source/reference/api/pyspark.ml.tuning.TrainValidationSplit","source/reference/api/pyspark.ml.tuning.TrainValidationSplitModel","source/reference/api/pyspark.ml.util.BaseReadWrite","source/reference/api/pyspark.ml.util.DefaultParamsReadable","source/reference/api/pyspark.ml.util.DefaultParamsReader","source/reference/api/pyspark.ml.util.DefaultParamsWritable","source/reference/api/pyspark.ml.util.DefaultParamsWriter","source/reference/api/pyspark.ml.util.GeneralMLWriter","source/reference/api/pyspark.ml.util.HasTrainingSummary","source/reference/api/pyspark.ml.util.Identifiable","source/reference/api/pyspark.ml.util.MLReadable","source/reference/api/pyspark.ml.util.MLReader","source/reference/api/pyspark.ml.util.MLWritable","source/reference/api/pyspark.ml.util.MLWriter","source/reference/api/pyspark.mllib.classification.LogisticRegressionModel","source/reference/api/pyspark.mllib.classification.LogisticRegressionWithLBFGS","source/reference/api/pyspark.mllib.classification.LogisticRegressionWithSGD","source/reference/api/pyspark.mllib.classification.NaiveBayes","source/reference/api/pyspark.mllib.classification.NaiveBayesModel","source/reference/api/pyspark.mllib.classification.SVMModel","source/reference/api/pyspark.mllib.classification.SVMWithSGD","source/reference/api/pyspark.mllib.classification.StreamingLogisticRegressionWithSGD","source/reference/api/pyspark.mllib.clustering.BisectingKMeans","source/reference/api/pyspark.mllib.clustering.BisectingKMeansModel","source/reference/api/pyspark.mllib.clustering.GaussianMixture","source/reference/api/pyspark.mllib.clustering.GaussianMixtureModel","source/reference/api/pyspark.mllib.clustering.KMeans","source/reference/api/pyspark.mllib.clustering.KMeansModel","source/reference/api/pyspark.mllib.clustering.LDA","source/reference/api/pyspark.mllib.clustering.LDAModel","source/reference/api/pyspark.mllib.clustering.PowerIterationClustering","source/reference/api/pyspark.mllib.clustering.PowerIterationClusteringModel","source/reference/api/pyspark.mllib.clustering.StreamingKMeans","source/reference/api/pyspark.mllib.clustering.StreamingKMeansModel","source/reference/api/pyspark.mllib.evaluation.BinaryClassificationMetrics","source/reference/api/pyspark.mllib.evaluation.MulticlassMetrics","source/reference/api/pyspark.mllib.evaluation.RankingMetrics","source/reference/api/pyspark.mllib.evaluation.RegressionMetrics","source/reference/api/pyspark.mllib.feature.ChiSqSelector","source/reference/api/pyspark.mllib.feature.ChiSqSelectorModel","source/reference/api/pyspark.mllib.feature.ElementwiseProduct","source/reference/api/pyspark.mllib.feature.HashingTF","source/reference/api/pyspark.mllib.feature.IDF","source/reference/api/pyspark.mllib.feature.IDFModel","source/reference/api/pyspark.mllib.feature.Normalizer","source/reference/api/pyspark.mllib.feature.StandardScaler","source/reference/api/pyspark.mllib.feature.StandardScalerModel","source/reference/api/pyspark.mllib.feature.Word2Vec","source/reference/api/pyspark.mllib.feature.Word2VecModel","source/reference/api/pyspark.mllib.fpm.FPGrowth","source/reference/api/pyspark.mllib.fpm.FPGrowthModel","source/reference/api/pyspark.mllib.fpm.PrefixSpan","source/reference/api/pyspark.mllib.fpm.PrefixSpanModel","source/reference/api/pyspark.mllib.linalg.DenseMatrix","source/reference/api/pyspark.mllib.linalg.DenseVector","source/reference/api/pyspark.mllib.linalg.Matrices","source/reference/api/pyspark.mllib.linalg.Matrix","source/reference/api/pyspark.mllib.linalg.QRDecomposition","source/reference/api/pyspark.mllib.linalg.SparseMatrix","source/reference/api/pyspark.mllib.linalg.SparseVector","source/reference/api/pyspark.mllib.linalg.Vector","source/reference/api/pyspark.mllib.linalg.Vectors","source/reference/api/pyspark.mllib.linalg.distributed.BlockMatrix","source/reference/api/pyspark.mllib.linalg.distributed.CoordinateMatrix","source/reference/api/pyspark.mllib.linalg.distributed.DistributedMatrix","source/reference/api/pyspark.mllib.linalg.distributed.IndexedRow","source/reference/api/pyspark.mllib.linalg.distributed.IndexedRowMatrix","source/reference/api/pyspark.mllib.linalg.distributed.MatrixEntry","source/reference/api/pyspark.mllib.linalg.distributed.RowMatrix","source/reference/api/pyspark.mllib.linalg.distributed.SingularValueDecomposition","source/reference/api/pyspark.mllib.random.RandomRDDs","source/reference/api/pyspark.mllib.recommendation.ALS","source/reference/api/pyspark.mllib.recommendation.MatrixFactorizationModel","source/reference/api/pyspark.mllib.recommendation.Rating","source/reference/api/pyspark.mllib.regression.IsotonicRegression","source/reference/api/pyspark.mllib.regression.IsotonicRegressionModel","source/reference/api/pyspark.mllib.regression.LabeledPoint","source/reference/api/pyspark.mllib.regression.LassoModel","source/reference/api/pyspark.mllib.regression.LassoWithSGD","source/reference/api/pyspark.mllib.regression.LinearModel","source/reference/api/pyspark.mllib.regression.LinearRegressionModel","source/reference/api/pyspark.mllib.regression.LinearRegressionWithSGD","source/reference/api/pyspark.mllib.regression.RidgeRegressionModel","source/reference/api/pyspark.mllib.regression.RidgeRegressionWithSGD","source/reference/api/pyspark.mllib.regression.StreamingLinearAlgorithm","source/reference/api/pyspark.mllib.regression.StreamingLinearRegressionWithSGD","source/reference/api/pyspark.mllib.stat.ChiSqTestResult","source/reference/api/pyspark.mllib.stat.KernelDensity","source/reference/api/pyspark.mllib.stat.MultivariateGaussian","source/reference/api/pyspark.mllib.stat.MultivariateStatisticalSummary","source/reference/api/pyspark.mllib.stat.Statistics","source/reference/api/pyspark.mllib.tree.DecisionTree","source/reference/api/pyspark.mllib.tree.DecisionTreeModel","source/reference/api/pyspark.mllib.tree.GradientBoostedTrees","source/reference/api/pyspark.mllib.tree.GradientBoostedTreesModel","source/reference/api/pyspark.mllib.tree.RandomForest","source/reference/api/pyspark.mllib.tree.RandomForestModel","source/reference/api/pyspark.mllib.util.JavaLoader","source/reference/api/pyspark.mllib.util.JavaSaveable","source/reference/api/pyspark.mllib.util.LinearDataGenerator","source/reference/api/pyspark.mllib.util.Loader","source/reference/api/pyspark.mllib.util.MLUtils","source/reference/api/pyspark.mllib.util.Saveable","source/reference/api/pyspark.resource.ExecutorResourceRequest","source/reference/api/pyspark.resource.ExecutorResourceRequests","source/reference/api/pyspark.resource.ResourceInformation","source/reference/api/pyspark.resource.ResourceProfile","source/reference/api/pyspark.resource.ResourceProfileBuilder","source/reference/api/pyspark.resource.TaskResourceRequest","source/reference/api/pyspark.resource.TaskResourceRequests","source/reference/api/pyspark.sql.Column","source/reference/api/pyspark.sql.DataFrame","source/reference/api/pyspark.sql.DataFrame.agg","source/reference/api/pyspark.sql.DataFrame.alias","source/reference/api/pyspark.sql.DataFrame.approxQuantile","source/reference/api/pyspark.sql.DataFrame.cache","source/reference/api/pyspark.sql.DataFrame.checkpoint","source/reference/api/pyspark.sql.DataFrame.coalesce","source/reference/api/pyspark.sql.DataFrame.colRegex","source/reference/api/pyspark.sql.DataFrame.collect","source/reference/api/pyspark.sql.DataFrame.columns","source/reference/api/pyspark.sql.DataFrame.corr","source/reference/api/pyspark.sql.DataFrame.count","source/reference/api/pyspark.sql.DataFrame.cov","source/reference/api/pyspark.sql.DataFrame.createGlobalTempView","source/reference/api/pyspark.sql.DataFrame.createOrReplaceGlobalTempView","source/reference/api/pyspark.sql.DataFrame.createOrReplaceTempView","source/reference/api/pyspark.sql.DataFrame.createTempView","source/reference/api/pyspark.sql.DataFrame.crossJoin","source/reference/api/pyspark.sql.DataFrame.crosstab","source/reference/api/pyspark.sql.DataFrame.cube","source/reference/api/pyspark.sql.DataFrame.describe","source/reference/api/pyspark.sql.DataFrame.distinct","source/reference/api/pyspark.sql.DataFrame.drop","source/reference/api/pyspark.sql.DataFrame.dropDuplicates","source/reference/api/pyspark.sql.DataFrame.drop_duplicates","source/reference/api/pyspark.sql.DataFrame.dropna","source/reference/api/pyspark.sql.DataFrame.dtypes","source/reference/api/pyspark.sql.DataFrame.exceptAll","source/reference/api/pyspark.sql.DataFrame.explain","source/reference/api/pyspark.sql.DataFrame.fillna","source/reference/api/pyspark.sql.DataFrame.filter","source/reference/api/pyspark.sql.DataFrame.first","source/reference/api/pyspark.sql.DataFrame.foreach","source/reference/api/pyspark.sql.DataFrame.foreachPartition","source/reference/api/pyspark.sql.DataFrame.freqItems","source/reference/api/pyspark.sql.DataFrame.groupBy","source/reference/api/pyspark.sql.DataFrame.head","source/reference/api/pyspark.sql.DataFrame.hint","source/reference/api/pyspark.sql.DataFrame.inputFiles","source/reference/api/pyspark.sql.DataFrame.intersect","source/reference/api/pyspark.sql.DataFrame.intersectAll","source/reference/api/pyspark.sql.DataFrame.isLocal","source/reference/api/pyspark.sql.DataFrame.isStreaming","source/reference/api/pyspark.sql.DataFrame.join","source/reference/api/pyspark.sql.DataFrame.limit","source/reference/api/pyspark.sql.DataFrame.localCheckpoint","source/reference/api/pyspark.sql.DataFrame.mapInPandas","source/reference/api/pyspark.sql.DataFrame.na","source/reference/api/pyspark.sql.DataFrame.orderBy","source/reference/api/pyspark.sql.DataFrame.persist","source/reference/api/pyspark.sql.DataFrame.printSchema","source/reference/api/pyspark.sql.DataFrame.randomSplit","source/reference/api/pyspark.sql.DataFrame.rdd","source/reference/api/pyspark.sql.DataFrame.registerTempTable","source/reference/api/pyspark.sql.DataFrame.repartition","source/reference/api/pyspark.sql.DataFrame.repartitionByRange","source/reference/api/pyspark.sql.DataFrame.replace","source/reference/api/pyspark.sql.DataFrame.rollup","source/reference/api/pyspark.sql.DataFrame.sameSemantics","source/reference/api/pyspark.sql.DataFrame.sample","source/reference/api/pyspark.sql.DataFrame.sampleBy","source/reference/api/pyspark.sql.DataFrame.schema","source/reference/api/pyspark.sql.DataFrame.select","source/reference/api/pyspark.sql.DataFrame.selectExpr","source/reference/api/pyspark.sql.DataFrame.semanticHash","source/reference/api/pyspark.sql.DataFrame.show","source/reference/api/pyspark.sql.DataFrame.sort","source/reference/api/pyspark.sql.DataFrame.sortWithinPartitions","source/reference/api/pyspark.sql.DataFrame.stat","source/reference/api/pyspark.sql.DataFrame.storageLevel","source/reference/api/pyspark.sql.DataFrame.subtract","source/reference/api/pyspark.sql.DataFrame.summary","source/reference/api/pyspark.sql.DataFrame.tail","source/reference/api/pyspark.sql.DataFrame.take","source/reference/api/pyspark.sql.DataFrame.toDF","source/reference/api/pyspark.sql.DataFrame.toJSON","source/reference/api/pyspark.sql.DataFrame.toLocalIterator","source/reference/api/pyspark.sql.DataFrame.toPandas","source/reference/api/pyspark.sql.DataFrame.transform","source/reference/api/pyspark.sql.DataFrame.union","source/reference/api/pyspark.sql.DataFrame.unionAll","source/reference/api/pyspark.sql.DataFrame.unionByName","source/reference/api/pyspark.sql.DataFrame.unpersist","source/reference/api/pyspark.sql.DataFrame.where","source/reference/api/pyspark.sql.DataFrame.withColumn","source/reference/api/pyspark.sql.DataFrame.withColumnRenamed","source/reference/api/pyspark.sql.DataFrame.withWatermark","source/reference/api/pyspark.sql.DataFrame.write","source/reference/api/pyspark.sql.DataFrame.writeStream","source/reference/api/pyspark.sql.DataFrame.writeTo","source/reference/api/pyspark.sql.DataFrameNaFunctions","source/reference/api/pyspark.sql.DataFrameNaFunctions.drop","source/reference/api/pyspark.sql.DataFrameNaFunctions.fill","source/reference/api/pyspark.sql.DataFrameNaFunctions.replace","source/reference/api/pyspark.sql.DataFrameReader.csv","source/reference/api/pyspark.sql.DataFrameReader.format","source/reference/api/pyspark.sql.DataFrameReader.jdbc","source/reference/api/pyspark.sql.DataFrameReader.json","source/reference/api/pyspark.sql.DataFrameReader.load","source/reference/api/pyspark.sql.DataFrameReader.option","source/reference/api/pyspark.sql.DataFrameReader.options","source/reference/api/pyspark.sql.DataFrameReader.orc","source/reference/api/pyspark.sql.DataFrameReader.parquet","source/reference/api/pyspark.sql.DataFrameReader.schema","source/reference/api/pyspark.sql.DataFrameReader.table","source/reference/api/pyspark.sql.DataFrameStatFunctions","source/reference/api/pyspark.sql.DataFrameStatFunctions.approxQuantile","source/reference/api/pyspark.sql.DataFrameStatFunctions.corr","source/reference/api/pyspark.sql.DataFrameStatFunctions.cov","source/reference/api/pyspark.sql.DataFrameStatFunctions.crosstab","source/reference/api/pyspark.sql.DataFrameStatFunctions.freqItems","source/reference/api/pyspark.sql.DataFrameStatFunctions.sampleBy","source/reference/api/pyspark.sql.DataFrameWriter.bucketBy","source/reference/api/pyspark.sql.DataFrameWriter.csv","source/reference/api/pyspark.sql.DataFrameWriter.format","source/reference/api/pyspark.sql.DataFrameWriter.insertInto","source/reference/api/pyspark.sql.DataFrameWriter.jdbc","source/reference/api/pyspark.sql.DataFrameWriter.json","source/reference/api/pyspark.sql.DataFrameWriter.mode","source/reference/api/pyspark.sql.DataFrameWriter.option","source/reference/api/pyspark.sql.DataFrameWriter.options","source/reference/api/pyspark.sql.DataFrameWriter.orc","source/reference/api/pyspark.sql.DataFrameWriter.parquet","source/reference/api/pyspark.sql.DataFrameWriter.partitionBy","source/reference/api/pyspark.sql.DataFrameWriter.save","source/reference/api/pyspark.sql.DataFrameWriter.saveAsTable","source/reference/api/pyspark.sql.DataFrameWriter.sortBy","source/reference/api/pyspark.sql.DataFrameWriter.text","source/reference/api/pyspark.sql.GroupedData","source/reference/api/pyspark.sql.GroupedData.agg","source/reference/api/pyspark.sql.GroupedData.apply","source/reference/api/pyspark.sql.GroupedData.applyInPandas","source/reference/api/pyspark.sql.GroupedData.avg","source/reference/api/pyspark.sql.GroupedData.cogroup","source/reference/api/pyspark.sql.GroupedData.count","source/reference/api/pyspark.sql.GroupedData.max","source/reference/api/pyspark.sql.GroupedData.mean","source/reference/api/pyspark.sql.GroupedData.min","source/reference/api/pyspark.sql.GroupedData.pivot","source/reference/api/pyspark.sql.GroupedData.sum","source/reference/api/pyspark.sql.Row","source/reference/api/pyspark.sql.Row.asDict","source/reference/api/pyspark.sql.SparkSession","source/reference/api/pyspark.sql.SparkSession.builder.appName","source/reference/api/pyspark.sql.SparkSession.builder.config","source/reference/api/pyspark.sql.SparkSession.builder.enableHiveSupport","source/reference/api/pyspark.sql.SparkSession.builder.getOrCreate","source/reference/api/pyspark.sql.SparkSession.builder.master","source/reference/api/pyspark.sql.SparkSession.catalog","source/reference/api/pyspark.sql.SparkSession.conf","source/reference/api/pyspark.sql.SparkSession.createDataFrame","source/reference/api/pyspark.sql.SparkSession.getActiveSession","source/reference/api/pyspark.sql.SparkSession.newSession","source/reference/api/pyspark.sql.SparkSession.range","source/reference/api/pyspark.sql.SparkSession.read","source/reference/api/pyspark.sql.SparkSession.readStream","source/reference/api/pyspark.sql.SparkSession.sparkContext","source/reference/api/pyspark.sql.SparkSession.sql","source/reference/api/pyspark.sql.SparkSession.stop","source/reference/api/pyspark.sql.SparkSession.streams","source/reference/api/pyspark.sql.SparkSession.table","source/reference/api/pyspark.sql.SparkSession.udf","source/reference/api/pyspark.sql.SparkSession.version","source/reference/api/pyspark.sql.Window","source/reference/api/pyspark.sql.Window.currentRow","source/reference/api/pyspark.sql.Window.orderBy","source/reference/api/pyspark.sql.Window.partitionBy","source/reference/api/pyspark.sql.Window.rangeBetween","source/reference/api/pyspark.sql.Window.rowsBetween","source/reference/api/pyspark.sql.Window.unboundedFollowing","source/reference/api/pyspark.sql.Window.unboundedPreceding","source/reference/api/pyspark.sql.WindowSpec.orderBy","source/reference/api/pyspark.sql.WindowSpec.partitionBy","source/reference/api/pyspark.sql.WindowSpec.rangeBetween","source/reference/api/pyspark.sql.WindowSpec.rowsBetween","source/reference/api/pyspark.sql.avro.functions.from_avro","source/reference/api/pyspark.sql.avro.functions.to_avro","source/reference/api/pyspark.sql.functions.abs","source/reference/api/pyspark.sql.functions.acos","source/reference/api/pyspark.sql.functions.add_months","source/reference/api/pyspark.sql.functions.aggregate","source/reference/api/pyspark.sql.functions.approxCountDistinct","source/reference/api/pyspark.sql.functions.approx_count_distinct","source/reference/api/pyspark.sql.functions.array","source/reference/api/pyspark.sql.functions.array_contains","source/reference/api/pyspark.sql.functions.array_distinct","source/reference/api/pyspark.sql.functions.array_except","source/reference/api/pyspark.sql.functions.array_intersect","source/reference/api/pyspark.sql.functions.array_join","source/reference/api/pyspark.sql.functions.array_max","source/reference/api/pyspark.sql.functions.array_min","source/reference/api/pyspark.sql.functions.array_position","source/reference/api/pyspark.sql.functions.array_remove","source/reference/api/pyspark.sql.functions.array_repeat","source/reference/api/pyspark.sql.functions.array_sort","source/reference/api/pyspark.sql.functions.array_union","source/reference/api/pyspark.sql.functions.arrays_overlap","source/reference/api/pyspark.sql.functions.arrays_zip","source/reference/api/pyspark.sql.functions.asc","source/reference/api/pyspark.sql.functions.asc_nulls_first","source/reference/api/pyspark.sql.functions.asc_nulls_last","source/reference/api/pyspark.sql.functions.ascii","source/reference/api/pyspark.sql.functions.asin","source/reference/api/pyspark.sql.functions.atan","source/reference/api/pyspark.sql.functions.atan2","source/reference/api/pyspark.sql.functions.avg","source/reference/api/pyspark.sql.functions.base64","source/reference/api/pyspark.sql.functions.bin","source/reference/api/pyspark.sql.functions.bitwiseNOT","source/reference/api/pyspark.sql.functions.broadcast","source/reference/api/pyspark.sql.functions.bround","source/reference/api/pyspark.sql.functions.bucket","source/reference/api/pyspark.sql.functions.cbrt","source/reference/api/pyspark.sql.functions.ceil","source/reference/api/pyspark.sql.functions.coalesce","source/reference/api/pyspark.sql.functions.col","source/reference/api/pyspark.sql.functions.collect_list","source/reference/api/pyspark.sql.functions.collect_set","source/reference/api/pyspark.sql.functions.column","source/reference/api/pyspark.sql.functions.concat","source/reference/api/pyspark.sql.functions.concat_ws","source/reference/api/pyspark.sql.functions.conv","source/reference/api/pyspark.sql.functions.corr","source/reference/api/pyspark.sql.functions.cos","source/reference/api/pyspark.sql.functions.cosh","source/reference/api/pyspark.sql.functions.count","source/reference/api/pyspark.sql.functions.countDistinct","source/reference/api/pyspark.sql.functions.covar_pop","source/reference/api/pyspark.sql.functions.covar_samp","source/reference/api/pyspark.sql.functions.crc32","source/reference/api/pyspark.sql.functions.create_map","source/reference/api/pyspark.sql.functions.cume_dist","source/reference/api/pyspark.sql.functions.current_date","source/reference/api/pyspark.sql.functions.current_timestamp","source/reference/api/pyspark.sql.functions.date_add","source/reference/api/pyspark.sql.functions.date_format","source/reference/api/pyspark.sql.functions.date_sub","source/reference/api/pyspark.sql.functions.date_trunc","source/reference/api/pyspark.sql.functions.datediff","source/reference/api/pyspark.sql.functions.dayofmonth","source/reference/api/pyspark.sql.functions.dayofweek","source/reference/api/pyspark.sql.functions.dayofyear","source/reference/api/pyspark.sql.functions.days","source/reference/api/pyspark.sql.functions.decode","source/reference/api/pyspark.sql.functions.degrees","source/reference/api/pyspark.sql.functions.dense_rank","source/reference/api/pyspark.sql.functions.desc","source/reference/api/pyspark.sql.functions.desc_nulls_first","source/reference/api/pyspark.sql.functions.desc_nulls_last","source/reference/api/pyspark.sql.functions.element_at","source/reference/api/pyspark.sql.functions.encode","source/reference/api/pyspark.sql.functions.exists","source/reference/api/pyspark.sql.functions.exp","source/reference/api/pyspark.sql.functions.explode","source/reference/api/pyspark.sql.functions.explode_outer","source/reference/api/pyspark.sql.functions.expm1","source/reference/api/pyspark.sql.functions.expr","source/reference/api/pyspark.sql.functions.factorial","source/reference/api/pyspark.sql.functions.filter","source/reference/api/pyspark.sql.functions.first","source/reference/api/pyspark.sql.functions.flatten","source/reference/api/pyspark.sql.functions.floor","source/reference/api/pyspark.sql.functions.forall","source/reference/api/pyspark.sql.functions.format_number","source/reference/api/pyspark.sql.functions.format_string","source/reference/api/pyspark.sql.functions.from_csv","source/reference/api/pyspark.sql.functions.from_json","source/reference/api/pyspark.sql.functions.from_unixtime","source/reference/api/pyspark.sql.functions.from_utc_timestamp","source/reference/api/pyspark.sql.functions.get_json_object","source/reference/api/pyspark.sql.functions.greatest","source/reference/api/pyspark.sql.functions.grouping","source/reference/api/pyspark.sql.functions.grouping_id","source/reference/api/pyspark.sql.functions.hash","source/reference/api/pyspark.sql.functions.hex","source/reference/api/pyspark.sql.functions.hour","source/reference/api/pyspark.sql.functions.hours","source/reference/api/pyspark.sql.functions.hypot","source/reference/api/pyspark.sql.functions.initcap","source/reference/api/pyspark.sql.functions.input_file_name","source/reference/api/pyspark.sql.functions.instr","source/reference/api/pyspark.sql.functions.isnan","source/reference/api/pyspark.sql.functions.isnull","source/reference/api/pyspark.sql.functions.json_tuple","source/reference/api/pyspark.sql.functions.kurtosis","source/reference/api/pyspark.sql.functions.lag","source/reference/api/pyspark.sql.functions.last","source/reference/api/pyspark.sql.functions.last_day","source/reference/api/pyspark.sql.functions.lead","source/reference/api/pyspark.sql.functions.least","source/reference/api/pyspark.sql.functions.length","source/reference/api/pyspark.sql.functions.levenshtein","source/reference/api/pyspark.sql.functions.lit","source/reference/api/pyspark.sql.functions.locate","source/reference/api/pyspark.sql.functions.log","source/reference/api/pyspark.sql.functions.log10","source/reference/api/pyspark.sql.functions.log1p","source/reference/api/pyspark.sql.functions.log2","source/reference/api/pyspark.sql.functions.lower","source/reference/api/pyspark.sql.functions.lpad","source/reference/api/pyspark.sql.functions.ltrim","source/reference/api/pyspark.sql.functions.map_concat","source/reference/api/pyspark.sql.functions.map_entries","source/reference/api/pyspark.sql.functions.map_filter","source/reference/api/pyspark.sql.functions.map_from_arrays","source/reference/api/pyspark.sql.functions.map_from_entries","source/reference/api/pyspark.sql.functions.map_keys","source/reference/api/pyspark.sql.functions.map_values","source/reference/api/pyspark.sql.functions.map_zip_with","source/reference/api/pyspark.sql.functions.max","source/reference/api/pyspark.sql.functions.md5","source/reference/api/pyspark.sql.functions.mean","source/reference/api/pyspark.sql.functions.min","source/reference/api/pyspark.sql.functions.minute","source/reference/api/pyspark.sql.functions.monotonically_increasing_id","source/reference/api/pyspark.sql.functions.month","source/reference/api/pyspark.sql.functions.months","source/reference/api/pyspark.sql.functions.months_between","source/reference/api/pyspark.sql.functions.nanvl","source/reference/api/pyspark.sql.functions.next_day","source/reference/api/pyspark.sql.functions.ntile","source/reference/api/pyspark.sql.functions.overlay","source/reference/api/pyspark.sql.functions.pandas_udf","source/reference/api/pyspark.sql.functions.percent_rank","source/reference/api/pyspark.sql.functions.percentile_approx","source/reference/api/pyspark.sql.functions.posexplode","source/reference/api/pyspark.sql.functions.posexplode_outer","source/reference/api/pyspark.sql.functions.pow","source/reference/api/pyspark.sql.functions.quarter","source/reference/api/pyspark.sql.functions.radians","source/reference/api/pyspark.sql.functions.rand","source/reference/api/pyspark.sql.functions.randn","source/reference/api/pyspark.sql.functions.rank","source/reference/api/pyspark.sql.functions.regexp_extract","source/reference/api/pyspark.sql.functions.regexp_replace","source/reference/api/pyspark.sql.functions.repeat","source/reference/api/pyspark.sql.functions.reverse","source/reference/api/pyspark.sql.functions.rint","source/reference/api/pyspark.sql.functions.round","source/reference/api/pyspark.sql.functions.row_number","source/reference/api/pyspark.sql.functions.rpad","source/reference/api/pyspark.sql.functions.rtrim","source/reference/api/pyspark.sql.functions.schema_of_csv","source/reference/api/pyspark.sql.functions.schema_of_json","source/reference/api/pyspark.sql.functions.second","source/reference/api/pyspark.sql.functions.sequence","source/reference/api/pyspark.sql.functions.sha1","source/reference/api/pyspark.sql.functions.sha2","source/reference/api/pyspark.sql.functions.shiftLeft","source/reference/api/pyspark.sql.functions.shiftRight","source/reference/api/pyspark.sql.functions.shiftRightUnsigned","source/reference/api/pyspark.sql.functions.shuffle","source/reference/api/pyspark.sql.functions.signum","source/reference/api/pyspark.sql.functions.sin","source/reference/api/pyspark.sql.functions.sinh","source/reference/api/pyspark.sql.functions.size","source/reference/api/pyspark.sql.functions.skewness","source/reference/api/pyspark.sql.functions.slice","source/reference/api/pyspark.sql.functions.sort_array","source/reference/api/pyspark.sql.functions.soundex","source/reference/api/pyspark.sql.functions.spark_partition_id","source/reference/api/pyspark.sql.functions.split","source/reference/api/pyspark.sql.functions.sqrt","source/reference/api/pyspark.sql.functions.stddev","source/reference/api/pyspark.sql.functions.stddev_pop","source/reference/api/pyspark.sql.functions.stddev_samp","source/reference/api/pyspark.sql.functions.struct","source/reference/api/pyspark.sql.functions.substring","source/reference/api/pyspark.sql.functions.substring_index","source/reference/api/pyspark.sql.functions.sum","source/reference/api/pyspark.sql.functions.sumDistinct","source/reference/api/pyspark.sql.functions.tan","source/reference/api/pyspark.sql.functions.tanh","source/reference/api/pyspark.sql.functions.timestamp_seconds","source/reference/api/pyspark.sql.functions.toDegrees","source/reference/api/pyspark.sql.functions.toRadians","source/reference/api/pyspark.sql.functions.to_csv","source/reference/api/pyspark.sql.functions.to_date","source/reference/api/pyspark.sql.functions.to_json","source/reference/api/pyspark.sql.functions.to_timestamp","source/reference/api/pyspark.sql.functions.to_utc_timestamp","source/reference/api/pyspark.sql.functions.transform","source/reference/api/pyspark.sql.functions.transform_keys","source/reference/api/pyspark.sql.functions.transform_values","source/reference/api/pyspark.sql.functions.translate","source/reference/api/pyspark.sql.functions.trim","source/reference/api/pyspark.sql.functions.trunc","source/reference/api/pyspark.sql.functions.udf","source/reference/api/pyspark.sql.functions.unbase64","source/reference/api/pyspark.sql.functions.unhex","source/reference/api/pyspark.sql.functions.unix_timestamp","source/reference/api/pyspark.sql.functions.upper","source/reference/api/pyspark.sql.functions.var_pop","source/reference/api/pyspark.sql.functions.var_samp","source/reference/api/pyspark.sql.functions.variance","source/reference/api/pyspark.sql.functions.weekofyear","source/reference/api/pyspark.sql.functions.when","source/reference/api/pyspark.sql.functions.window","source/reference/api/pyspark.sql.functions.xxhash64","source/reference/api/pyspark.sql.functions.year","source/reference/api/pyspark.sql.functions.years","source/reference/api/pyspark.sql.functions.zip_with","source/reference/api/pyspark.sql.streaming.DataStreamReader","source/reference/api/pyspark.sql.streaming.DataStreamReader.csv","source/reference/api/pyspark.sql.streaming.DataStreamReader.format","source/reference/api/pyspark.sql.streaming.DataStreamReader.json","source/reference/api/pyspark.sql.streaming.DataStreamReader.load","source/reference/api/pyspark.sql.streaming.DataStreamReader.option","source/reference/api/pyspark.sql.streaming.DataStreamReader.options","source/reference/api/pyspark.sql.streaming.DataStreamReader.orc","source/reference/api/pyspark.sql.streaming.DataStreamReader.parquet","source/reference/api/pyspark.sql.streaming.DataStreamReader.schema","source/reference/api/pyspark.sql.streaming.DataStreamReader.text","source/reference/api/pyspark.sql.streaming.DataStreamWriter","source/reference/api/pyspark.sql.streaming.DataStreamWriter.foreach","source/reference/api/pyspark.sql.streaming.DataStreamWriter.foreachBatch","source/reference/api/pyspark.sql.streaming.DataStreamWriter.format","source/reference/api/pyspark.sql.streaming.DataStreamWriter.option","source/reference/api/pyspark.sql.streaming.DataStreamWriter.options","source/reference/api/pyspark.sql.streaming.DataStreamWriter.outputMode","source/reference/api/pyspark.sql.streaming.DataStreamWriter.partitionBy","source/reference/api/pyspark.sql.streaming.DataStreamWriter.queryName","source/reference/api/pyspark.sql.streaming.DataStreamWriter.start","source/reference/api/pyspark.sql.streaming.DataStreamWriter.trigger","source/reference/api/pyspark.sql.streaming.ForeachBatchFunction","source/reference/api/pyspark.sql.streaming.StreamingQuery","source/reference/api/pyspark.sql.streaming.StreamingQuery.awaitTermination","source/reference/api/pyspark.sql.streaming.StreamingQuery.exception","source/reference/api/pyspark.sql.streaming.StreamingQuery.explain","source/reference/api/pyspark.sql.streaming.StreamingQuery.id","source/reference/api/pyspark.sql.streaming.StreamingQuery.isActive","source/reference/api/pyspark.sql.streaming.StreamingQuery.lastProgress","source/reference/api/pyspark.sql.streaming.StreamingQuery.name","source/reference/api/pyspark.sql.streaming.StreamingQuery.processAllAvailable","source/reference/api/pyspark.sql.streaming.StreamingQuery.recentProgress","source/reference/api/pyspark.sql.streaming.StreamingQuery.runId","source/reference/api/pyspark.sql.streaming.StreamingQuery.status","source/reference/api/pyspark.sql.streaming.StreamingQuery.stop","source/reference/api/pyspark.sql.streaming.StreamingQueryException","source/reference/api/pyspark.sql.streaming.StreamingQueryManager","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.active","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.awaitAnyTermination","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.get","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.resetTerminated","source/reference/api/pyspark.sql.types.ArrayType","source/reference/api/pyspark.sql.types.BinaryType","source/reference/api/pyspark.sql.types.BooleanType","source/reference/api/pyspark.sql.types.ByteType","source/reference/api/pyspark.sql.types.DataType","source/reference/api/pyspark.sql.types.DateType","source/reference/api/pyspark.sql.types.DecimalType","source/reference/api/pyspark.sql.types.DoubleType","source/reference/api/pyspark.sql.types.FloatType","source/reference/api/pyspark.sql.types.IntegerType","source/reference/api/pyspark.sql.types.LongType","source/reference/api/pyspark.sql.types.MapType","source/reference/api/pyspark.sql.types.NullType","source/reference/api/pyspark.sql.types.ShortType","source/reference/api/pyspark.sql.types.StringType","source/reference/api/pyspark.sql.types.StructField","source/reference/api/pyspark.sql.types.StructType","source/reference/api/pyspark.sql.types.TimestampType","source/reference/api/pyspark.streaming.DStream","source/reference/api/pyspark.streaming.DStream.cache","source/reference/api/pyspark.streaming.DStream.checkpoint","source/reference/api/pyspark.streaming.DStream.cogroup","source/reference/api/pyspark.streaming.DStream.combineByKey","source/reference/api/pyspark.streaming.DStream.context","source/reference/api/pyspark.streaming.DStream.count","source/reference/api/pyspark.streaming.DStream.countByValue","source/reference/api/pyspark.streaming.DStream.countByValueAndWindow","source/reference/api/pyspark.streaming.DStream.countByWindow","source/reference/api/pyspark.streaming.DStream.filter","source/reference/api/pyspark.streaming.DStream.flatMap","source/reference/api/pyspark.streaming.DStream.flatMapValues","source/reference/api/pyspark.streaming.DStream.foreachRDD","source/reference/api/pyspark.streaming.DStream.fullOuterJoin","source/reference/api/pyspark.streaming.DStream.glom","source/reference/api/pyspark.streaming.DStream.groupByKey","source/reference/api/pyspark.streaming.DStream.groupByKeyAndWindow","source/reference/api/pyspark.streaming.DStream.join","source/reference/api/pyspark.streaming.DStream.leftOuterJoin","source/reference/api/pyspark.streaming.DStream.map","source/reference/api/pyspark.streaming.DStream.mapPartitions","source/reference/api/pyspark.streaming.DStream.mapPartitionsWithIndex","source/reference/api/pyspark.streaming.DStream.mapValues","source/reference/api/pyspark.streaming.DStream.partitionBy","source/reference/api/pyspark.streaming.DStream.persist","source/reference/api/pyspark.streaming.DStream.pprint","source/reference/api/pyspark.streaming.DStream.reduce","source/reference/api/pyspark.streaming.DStream.reduceByKey","source/reference/api/pyspark.streaming.DStream.reduceByKeyAndWindow","source/reference/api/pyspark.streaming.DStream.reduceByWindow","source/reference/api/pyspark.streaming.DStream.repartition","source/reference/api/pyspark.streaming.DStream.rightOuterJoin","source/reference/api/pyspark.streaming.DStream.saveAsTextFiles","source/reference/api/pyspark.streaming.DStream.slice","source/reference/api/pyspark.streaming.DStream.transform","source/reference/api/pyspark.streaming.DStream.transformWith","source/reference/api/pyspark.streaming.DStream.union","source/reference/api/pyspark.streaming.DStream.updateStateByKey","source/reference/api/pyspark.streaming.DStream.window","source/reference/api/pyspark.streaming.StreamingContext","source/reference/api/pyspark.streaming.StreamingContext.addStreamingListener","source/reference/api/pyspark.streaming.StreamingContext.awaitTermination","source/reference/api/pyspark.streaming.StreamingContext.awaitTerminationOrTimeout","source/reference/api/pyspark.streaming.StreamingContext.binaryRecordsStream","source/reference/api/pyspark.streaming.StreamingContext.checkpoint","source/reference/api/pyspark.streaming.StreamingContext.getActive","source/reference/api/pyspark.streaming.StreamingContext.getActiveOrCreate","source/reference/api/pyspark.streaming.StreamingContext.getOrCreate","source/reference/api/pyspark.streaming.StreamingContext.queueStream","source/reference/api/pyspark.streaming.StreamingContext.remember","source/reference/api/pyspark.streaming.StreamingContext.socketTextStream","source/reference/api/pyspark.streaming.StreamingContext.sparkContext","source/reference/api/pyspark.streaming.StreamingContext.start","source/reference/api/pyspark.streaming.StreamingContext.stop","source/reference/api/pyspark.streaming.StreamingContext.textFileStream","source/reference/api/pyspark.streaming.StreamingContext.transform","source/reference/api/pyspark.streaming.StreamingContext.union","source/reference/api/pyspark.streaming.kinesis.InitialPositionInStream.LATEST","source/reference/api/pyspark.streaming.kinesis.InitialPositionInStream.TRIM_HORIZON","source/reference/api/pyspark.streaming.kinesis.KinesisUtils.createStream"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":2,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["index.rst","pyspark.rst","pyspark.ml.rst","pyspark.mllib.rst","pyspark.resource.rst","pyspark.sql.rst","pyspark.streaming.rst","source/reference/api/pyspark.Accumulator.rst","source/reference/api/pyspark.Accumulator.add.rst","source/reference/api/pyspark.Accumulator.value.rst","source/reference/api/pyspark.BarrierTaskContext.rst","source/reference/api/pyspark.BarrierTaskContext.allGather.rst","source/reference/api/pyspark.BarrierTaskContext.attemptNumber.rst","source/reference/api/pyspark.BarrierTaskContext.barrier.rst","source/reference/api/pyspark.BarrierTaskContext.get.rst","source/reference/api/pyspark.BarrierTaskContext.getLocalProperty.rst","source/reference/api/pyspark.BarrierTaskContext.getTaskInfos.rst","source/reference/api/pyspark.BarrierTaskContext.partitionId.rst","source/reference/api/pyspark.BarrierTaskContext.resources.rst","source/reference/api/pyspark.BarrierTaskContext.stageId.rst","source/reference/api/pyspark.BarrierTaskContext.taskAttemptId.rst","source/reference/api/pyspark.BarrierTaskInfo.rst","source/reference/api/pyspark.Broadcast.rst","source/reference/api/pyspark.Broadcast.destroy.rst","source/reference/api/pyspark.Broadcast.dump.rst","source/reference/api/pyspark.Broadcast.load.rst","source/reference/api/pyspark.Broadcast.load_from_path.rst","source/reference/api/pyspark.Broadcast.unpersist.rst","source/reference/api/pyspark.Broadcast.value.rst","source/reference/api/pyspark.RDD.rst","source/reference/api/pyspark.RDD.aggregate.rst","source/reference/api/pyspark.RDD.aggregateByKey.rst","source/reference/api/pyspark.RDD.barrier.rst","source/reference/api/pyspark.RDD.cache.rst","source/reference/api/pyspark.RDD.cartesian.rst","source/reference/api/pyspark.RDD.checkpoint.rst","source/reference/api/pyspark.RDD.coalesce.rst","source/reference/api/pyspark.RDD.cogroup.rst","source/reference/api/pyspark.RDD.collect.rst","source/reference/api/pyspark.RDD.collectAsMap.rst","source/reference/api/pyspark.RDD.collectWithJobGroup.rst","source/reference/api/pyspark.RDD.combineByKey.rst","source/reference/api/pyspark.RDD.context.rst","source/reference/api/pyspark.RDD.count.rst","source/reference/api/pyspark.RDD.countApprox.rst","source/reference/api/pyspark.RDD.countApproxDistinct.rst","source/reference/api/pyspark.RDD.countByKey.rst","source/reference/api/pyspark.RDD.countByValue.rst","source/reference/api/pyspark.RDD.distinct.rst","source/reference/api/pyspark.RDD.filter.rst","source/reference/api/pyspark.RDD.first.rst","source/reference/api/pyspark.RDD.flatMap.rst","source/reference/api/pyspark.RDD.flatMapValues.rst","source/reference/api/pyspark.RDD.fold.rst","source/reference/api/pyspark.RDD.foldByKey.rst","source/reference/api/pyspark.RDD.foreach.rst","source/reference/api/pyspark.RDD.foreachPartition.rst","source/reference/api/pyspark.RDD.fullOuterJoin.rst","source/reference/api/pyspark.RDD.getCheckpointFile.rst","source/reference/api/pyspark.RDD.getNumPartitions.rst","source/reference/api/pyspark.RDD.getResourceProfile.rst","source/reference/api/pyspark.RDD.getStorageLevel.rst","source/reference/api/pyspark.RDD.glom.rst","source/reference/api/pyspark.RDD.groupBy.rst","source/reference/api/pyspark.RDD.groupByKey.rst","source/reference/api/pyspark.RDD.groupWith.rst","source/reference/api/pyspark.RDD.histogram.rst","source/reference/api/pyspark.RDD.id.rst","source/reference/api/pyspark.RDD.intersection.rst","source/reference/api/pyspark.RDD.isCheckpointed.rst","source/reference/api/pyspark.RDD.isEmpty.rst","source/reference/api/pyspark.RDD.isLocallyCheckpointed.rst","source/reference/api/pyspark.RDD.join.rst","source/reference/api/pyspark.RDD.keyBy.rst","source/reference/api/pyspark.RDD.keys.rst","source/reference/api/pyspark.RDD.leftOuterJoin.rst","source/reference/api/pyspark.RDD.localCheckpoint.rst","source/reference/api/pyspark.RDD.lookup.rst","source/reference/api/pyspark.RDD.map.rst","source/reference/api/pyspark.RDD.mapPartitions.rst","source/reference/api/pyspark.RDD.mapPartitionsWithIndex.rst","source/reference/api/pyspark.RDD.mapPartitionsWithSplit.rst","source/reference/api/pyspark.RDD.mapValues.rst","source/reference/api/pyspark.RDD.max.rst","source/reference/api/pyspark.RDD.mean.rst","source/reference/api/pyspark.RDD.meanApprox.rst","source/reference/api/pyspark.RDD.min.rst","source/reference/api/pyspark.RDD.name.rst","source/reference/api/pyspark.RDD.partitionBy.rst","source/reference/api/pyspark.RDD.persist.rst","source/reference/api/pyspark.RDD.pipe.rst","source/reference/api/pyspark.RDD.randomSplit.rst","source/reference/api/pyspark.RDD.reduce.rst","source/reference/api/pyspark.RDD.reduceByKey.rst","source/reference/api/pyspark.RDD.reduceByKeyLocally.rst","source/reference/api/pyspark.RDD.repartition.rst","source/reference/api/pyspark.RDD.repartitionAndSortWithinPartitions.rst","source/reference/api/pyspark.RDD.rightOuterJoin.rst","source/reference/api/pyspark.RDD.sample.rst","source/reference/api/pyspark.RDD.sampleByKey.rst","source/reference/api/pyspark.RDD.sampleStdev.rst","source/reference/api/pyspark.RDD.sampleVariance.rst","source/reference/api/pyspark.RDD.saveAsHadoopDataset.rst","source/reference/api/pyspark.RDD.saveAsHadoopFile.rst","source/reference/api/pyspark.RDD.saveAsNewAPIHadoopDataset.rst","source/reference/api/pyspark.RDD.saveAsNewAPIHadoopFile.rst","source/reference/api/pyspark.RDD.saveAsPickleFile.rst","source/reference/api/pyspark.RDD.saveAsSequenceFile.rst","source/reference/api/pyspark.RDD.saveAsTextFile.rst","source/reference/api/pyspark.RDD.setName.rst","source/reference/api/pyspark.RDD.sortBy.rst","source/reference/api/pyspark.RDD.sortByKey.rst","source/reference/api/pyspark.RDD.stats.rst","source/reference/api/pyspark.RDD.stdev.rst","source/reference/api/pyspark.RDD.subtract.rst","source/reference/api/pyspark.RDD.subtractByKey.rst","source/reference/api/pyspark.RDD.sum.rst","source/reference/api/pyspark.RDD.sumApprox.rst","source/reference/api/pyspark.RDD.take.rst","source/reference/api/pyspark.RDD.takeOrdered.rst","source/reference/api/pyspark.RDD.takeSample.rst","source/reference/api/pyspark.RDD.toDebugString.rst","source/reference/api/pyspark.RDD.toLocalIterator.rst","source/reference/api/pyspark.RDD.top.rst","source/reference/api/pyspark.RDD.treeAggregate.rst","source/reference/api/pyspark.RDD.treeReduce.rst","source/reference/api/pyspark.RDD.union.rst","source/reference/api/pyspark.RDD.unpersist.rst","source/reference/api/pyspark.RDD.values.rst","source/reference/api/pyspark.RDD.variance.rst","source/reference/api/pyspark.RDD.withResources.rst","source/reference/api/pyspark.RDD.zip.rst","source/reference/api/pyspark.RDD.zipWithIndex.rst","source/reference/api/pyspark.RDD.zipWithUniqueId.rst","source/reference/api/pyspark.RDDBarrier.rst","source/reference/api/pyspark.RDDBarrier.mapPartitions.rst","source/reference/api/pyspark.RDDBarrier.mapPartitionsWithIndex.rst","source/reference/api/pyspark.SparkConf.rst","source/reference/api/pyspark.SparkConf.contains.rst","source/reference/api/pyspark.SparkConf.get.rst","source/reference/api/pyspark.SparkConf.getAll.rst","source/reference/api/pyspark.SparkConf.set.rst","source/reference/api/pyspark.SparkConf.setAll.rst","source/reference/api/pyspark.SparkConf.setAppName.rst","source/reference/api/pyspark.SparkConf.setExecutorEnv.rst","source/reference/api/pyspark.SparkConf.setIfMissing.rst","source/reference/api/pyspark.SparkConf.setMaster.rst","source/reference/api/pyspark.SparkConf.setSparkHome.rst","source/reference/api/pyspark.SparkConf.toDebugString.rst","source/reference/api/pyspark.SparkContext.rst","source/reference/api/pyspark.SparkContext.PACKAGE_EXTENSIONS.rst","source/reference/api/pyspark.SparkContext.accumulator.rst","source/reference/api/pyspark.SparkContext.addFile.rst","source/reference/api/pyspark.SparkContext.addPyFile.rst","source/reference/api/pyspark.SparkContext.applicationId.rst","source/reference/api/pyspark.SparkContext.binaryFiles.rst","source/reference/api/pyspark.SparkContext.binaryRecords.rst","source/reference/api/pyspark.SparkContext.broadcast.rst","source/reference/api/pyspark.SparkContext.cancelAllJobs.rst","source/reference/api/pyspark.SparkContext.cancelJobGroup.rst","source/reference/api/pyspark.SparkContext.defaultMinPartitions.rst","source/reference/api/pyspark.SparkContext.defaultParallelism.rst","source/reference/api/pyspark.SparkContext.dump_profiles.rst","source/reference/api/pyspark.SparkContext.emptyRDD.rst","source/reference/api/pyspark.SparkContext.getConf.rst","source/reference/api/pyspark.SparkContext.getLocalProperty.rst","source/reference/api/pyspark.SparkContext.getOrCreate.rst","source/reference/api/pyspark.SparkContext.hadoopFile.rst","source/reference/api/pyspark.SparkContext.hadoopRDD.rst","source/reference/api/pyspark.SparkContext.newAPIHadoopFile.rst","source/reference/api/pyspark.SparkContext.newAPIHadoopRDD.rst","source/reference/api/pyspark.SparkContext.parallelize.rst","source/reference/api/pyspark.SparkContext.pickleFile.rst","source/reference/api/pyspark.SparkContext.range.rst","source/reference/api/pyspark.SparkContext.resources.rst","source/reference/api/pyspark.SparkContext.runJob.rst","source/reference/api/pyspark.SparkContext.sequenceFile.rst","source/reference/api/pyspark.SparkContext.setCheckpointDir.rst","source/reference/api/pyspark.SparkContext.setJobDescription.rst","source/reference/api/pyspark.SparkContext.setJobGroup.rst","source/reference/api/pyspark.SparkContext.setLocalProperty.rst","source/reference/api/pyspark.SparkContext.setLogLevel.rst","source/reference/api/pyspark.SparkContext.setSystemProperty.rst","source/reference/api/pyspark.SparkContext.show_profiles.rst","source/reference/api/pyspark.SparkContext.sparkUser.rst","source/reference/api/pyspark.SparkContext.startTime.rst","source/reference/api/pyspark.SparkContext.statusTracker.rst","source/reference/api/pyspark.SparkContext.stop.rst","source/reference/api/pyspark.SparkContext.textFile.rst","source/reference/api/pyspark.SparkContext.uiWebUrl.rst","source/reference/api/pyspark.SparkContext.union.rst","source/reference/api/pyspark.SparkContext.version.rst","source/reference/api/pyspark.SparkContext.wholeTextFiles.rst","source/reference/api/pyspark.SparkFiles.rst","source/reference/api/pyspark.SparkFiles.get.rst","source/reference/api/pyspark.SparkFiles.getRootDirectory.rst","source/reference/api/pyspark.StorageLevel.rst","source/reference/api/pyspark.StorageLevel.DISK_ONLY.rst","source/reference/api/pyspark.StorageLevel.DISK_ONLY_2.rst","source/reference/api/pyspark.StorageLevel.DISK_ONLY_3.rst","source/reference/api/pyspark.StorageLevel.MEMORY_AND_DISK.rst","source/reference/api/pyspark.StorageLevel.MEMORY_AND_DISK_2.rst","source/reference/api/pyspark.StorageLevel.MEMORY_ONLY.rst","source/reference/api/pyspark.StorageLevel.MEMORY_ONLY_2.rst","source/reference/api/pyspark.StorageLevel.OFF_HEAP.rst","source/reference/api/pyspark.TaskContext.rst","source/reference/api/pyspark.TaskContext.attemptNumber.rst","source/reference/api/pyspark.TaskContext.get.rst","source/reference/api/pyspark.TaskContext.getLocalProperty.rst","source/reference/api/pyspark.TaskContext.partitionId.rst","source/reference/api/pyspark.TaskContext.resources.rst","source/reference/api/pyspark.TaskContext.stageId.rst","source/reference/api/pyspark.TaskContext.taskAttemptId.rst","source/reference/api/pyspark.ml.Estimator.rst","source/reference/api/pyspark.ml.Model.rst","source/reference/api/pyspark.ml.Pipeline.rst","source/reference/api/pyspark.ml.PipelineModel.rst","source/reference/api/pyspark.ml.PredictionModel.rst","source/reference/api/pyspark.ml.Predictor.rst","source/reference/api/pyspark.ml.Transformer.rst","source/reference/api/pyspark.ml.UnaryTransformer.rst","source/reference/api/pyspark.ml.classification.BinaryLogisticRegressionSummary.rst","source/reference/api/pyspark.ml.classification.BinaryLogisticRegressionTrainingSummary.rst","source/reference/api/pyspark.ml.classification.BinaryRandomForestClassificationSummary.rst","source/reference/api/pyspark.ml.classification.BinaryRandomForestClassificationTrainingSummary.rst","source/reference/api/pyspark.ml.classification.DecisionTreeClassificationModel.rst","source/reference/api/pyspark.ml.classification.DecisionTreeClassifier.rst","source/reference/api/pyspark.ml.classification.FMClassificationModel.rst","source/reference/api/pyspark.ml.classification.FMClassificationSummary.rst","source/reference/api/pyspark.ml.classification.FMClassificationTrainingSummary.rst","source/reference/api/pyspark.ml.classification.FMClassifier.rst","source/reference/api/pyspark.ml.classification.GBTClassificationModel.rst","source/reference/api/pyspark.ml.classification.GBTClassifier.rst","source/reference/api/pyspark.ml.classification.LinearSVC.rst","source/reference/api/pyspark.ml.classification.LinearSVCModel.rst","source/reference/api/pyspark.ml.classification.LinearSVCSummary.rst","source/reference/api/pyspark.ml.classification.LinearSVCTrainingSummary.rst","source/reference/api/pyspark.ml.classification.LogisticRegression.rst","source/reference/api/pyspark.ml.classification.LogisticRegressionModel.rst","source/reference/api/pyspark.ml.classification.LogisticRegressionSummary.rst","source/reference/api/pyspark.ml.classification.LogisticRegressionTrainingSummary.rst","source/reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationModel.rst","source/reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationSummary.rst","source/reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationTrainingSummary.rst","source/reference/api/pyspark.ml.classification.MultilayerPerceptronClassifier.rst","source/reference/api/pyspark.ml.classification.NaiveBayes.rst","source/reference/api/pyspark.ml.classification.NaiveBayesModel.rst","source/reference/api/pyspark.ml.classification.OneVsRest.rst","source/reference/api/pyspark.ml.classification.OneVsRestModel.rst","source/reference/api/pyspark.ml.classification.RandomForestClassificationModel.rst","source/reference/api/pyspark.ml.classification.RandomForestClassificationSummary.rst","source/reference/api/pyspark.ml.classification.RandomForestClassificationTrainingSummary.rst","source/reference/api/pyspark.ml.classification.RandomForestClassifier.rst","source/reference/api/pyspark.ml.clustering.BisectingKMeans.rst","source/reference/api/pyspark.ml.clustering.BisectingKMeansModel.rst","source/reference/api/pyspark.ml.clustering.BisectingKMeansSummary.rst","source/reference/api/pyspark.ml.clustering.DistributedLDAModel.rst","source/reference/api/pyspark.ml.clustering.GaussianMixture.rst","source/reference/api/pyspark.ml.clustering.GaussianMixtureModel.rst","source/reference/api/pyspark.ml.clustering.GaussianMixtureSummary.rst","source/reference/api/pyspark.ml.clustering.KMeans.rst","source/reference/api/pyspark.ml.clustering.KMeansModel.rst","source/reference/api/pyspark.ml.clustering.LDA.rst","source/reference/api/pyspark.ml.clustering.LDAModel.rst","source/reference/api/pyspark.ml.clustering.LocalLDAModel.rst","source/reference/api/pyspark.ml.clustering.PowerIterationClustering.rst","source/reference/api/pyspark.ml.evaluation.BinaryClassificationEvaluator.rst","source/reference/api/pyspark.ml.evaluation.ClusteringEvaluator.rst","source/reference/api/pyspark.ml.evaluation.Evaluator.rst","source/reference/api/pyspark.ml.evaluation.MulticlassClassificationEvaluator.rst","source/reference/api/pyspark.ml.evaluation.MultilabelClassificationEvaluator.rst","source/reference/api/pyspark.ml.evaluation.RankingEvaluator.rst","source/reference/api/pyspark.ml.evaluation.RegressionEvaluator.rst","source/reference/api/pyspark.ml.feature.ANOVASelector.rst","source/reference/api/pyspark.ml.feature.ANOVASelectorModel.rst","source/reference/api/pyspark.ml.feature.Binarizer.rst","source/reference/api/pyspark.ml.feature.BucketedRandomProjectionLSH.rst","source/reference/api/pyspark.ml.feature.BucketedRandomProjectionLSHModel.rst","source/reference/api/pyspark.ml.feature.Bucketizer.rst","source/reference/api/pyspark.ml.feature.ChiSqSelector.rst","source/reference/api/pyspark.ml.feature.ChiSqSelectorModel.rst","source/reference/api/pyspark.ml.feature.CountVectorizer.rst","source/reference/api/pyspark.ml.feature.CountVectorizerModel.rst","source/reference/api/pyspark.ml.feature.DCT.rst","source/reference/api/pyspark.ml.feature.ElementwiseProduct.rst","source/reference/api/pyspark.ml.feature.FValueSelector.rst","source/reference/api/pyspark.ml.feature.FValueSelectorModel.rst","source/reference/api/pyspark.ml.feature.FeatureHasher.rst","source/reference/api/pyspark.ml.feature.HashingTF.rst","source/reference/api/pyspark.ml.feature.IDF.rst","source/reference/api/pyspark.ml.feature.IDFModel.rst","source/reference/api/pyspark.ml.feature.Imputer.rst","source/reference/api/pyspark.ml.feature.ImputerModel.rst","source/reference/api/pyspark.ml.feature.IndexToString.rst","source/reference/api/pyspark.ml.feature.Interaction.rst","source/reference/api/pyspark.ml.feature.MaxAbsScaler.rst","source/reference/api/pyspark.ml.feature.MaxAbsScalerModel.rst","source/reference/api/pyspark.ml.feature.MinHashLSH.rst","source/reference/api/pyspark.ml.feature.MinHashLSHModel.rst","source/reference/api/pyspark.ml.feature.MinMaxScaler.rst","source/reference/api/pyspark.ml.feature.MinMaxScalerModel.rst","source/reference/api/pyspark.ml.feature.NGram.rst","source/reference/api/pyspark.ml.feature.Normalizer.rst","source/reference/api/pyspark.ml.feature.OneHotEncoder.rst","source/reference/api/pyspark.ml.feature.OneHotEncoderModel.rst","source/reference/api/pyspark.ml.feature.PCA.rst","source/reference/api/pyspark.ml.feature.PCAModel.rst","source/reference/api/pyspark.ml.feature.PolynomialExpansion.rst","source/reference/api/pyspark.ml.feature.QuantileDiscretizer.rst","source/reference/api/pyspark.ml.feature.RFormula.rst","source/reference/api/pyspark.ml.feature.RFormulaModel.rst","source/reference/api/pyspark.ml.feature.RegexTokenizer.rst","source/reference/api/pyspark.ml.feature.RobustScaler.rst","source/reference/api/pyspark.ml.feature.RobustScalerModel.rst","source/reference/api/pyspark.ml.feature.SQLTransformer.rst","source/reference/api/pyspark.ml.feature.StandardScaler.rst","source/reference/api/pyspark.ml.feature.StandardScalerModel.rst","source/reference/api/pyspark.ml.feature.StopWordsRemover.rst","source/reference/api/pyspark.ml.feature.StringIndexer.rst","source/reference/api/pyspark.ml.feature.StringIndexerModel.rst","source/reference/api/pyspark.ml.feature.Tokenizer.rst","source/reference/api/pyspark.ml.feature.VarianceThresholdSelector.rst","source/reference/api/pyspark.ml.feature.VarianceThresholdSelectorModel.rst","source/reference/api/pyspark.ml.feature.VectorAssembler.rst","source/reference/api/pyspark.ml.feature.VectorIndexer.rst","source/reference/api/pyspark.ml.feature.VectorIndexerModel.rst","source/reference/api/pyspark.ml.feature.VectorSizeHint.rst","source/reference/api/pyspark.ml.feature.VectorSlicer.rst","source/reference/api/pyspark.ml.feature.Word2Vec.rst","source/reference/api/pyspark.ml.feature.Word2VecModel.rst","source/reference/api/pyspark.ml.fpm.FPGrowth.rst","source/reference/api/pyspark.ml.fpm.FPGrowthModel.rst","source/reference/api/pyspark.ml.fpm.PrefixSpan.rst","source/reference/api/pyspark.ml.functions.vector_to_array.rst","source/reference/api/pyspark.ml.image.ImageSchema.rst","source/reference/api/pyspark.ml.image._ImageSchema.rst","source/reference/api/pyspark.ml.linalg.DenseMatrix.rst","source/reference/api/pyspark.ml.linalg.DenseVector.rst","source/reference/api/pyspark.ml.linalg.Matrices.rst","source/reference/api/pyspark.ml.linalg.Matrix.rst","source/reference/api/pyspark.ml.linalg.SparseMatrix.rst","source/reference/api/pyspark.ml.linalg.SparseVector.rst","source/reference/api/pyspark.ml.linalg.Vector.rst","source/reference/api/pyspark.ml.linalg.Vectors.rst","source/reference/api/pyspark.ml.param.Param.rst","source/reference/api/pyspark.ml.param.Params.rst","source/reference/api/pyspark.ml.param.TypeConverters.rst","source/reference/api/pyspark.ml.recommendation.ALS.rst","source/reference/api/pyspark.ml.recommendation.ALSModel.rst","source/reference/api/pyspark.ml.regression.AFTSurvivalRegression.rst","source/reference/api/pyspark.ml.regression.AFTSurvivalRegressionModel.rst","source/reference/api/pyspark.ml.regression.DecisionTreeRegressionModel.rst","source/reference/api/pyspark.ml.regression.DecisionTreeRegressor.rst","source/reference/api/pyspark.ml.regression.FMRegressionModel.rst","source/reference/api/pyspark.ml.regression.FMRegressor.rst","source/reference/api/pyspark.ml.regression.GBTRegressionModel.rst","source/reference/api/pyspark.ml.regression.GBTRegressor.rst","source/reference/api/pyspark.ml.regression.GeneralizedLinearRegression.rst","source/reference/api/pyspark.ml.regression.GeneralizedLinearRegressionModel.rst","source/reference/api/pyspark.ml.regression.GeneralizedLinearRegressionSummary.rst","source/reference/api/pyspark.ml.regression.GeneralizedLinearRegressionTrainingSummary.rst","source/reference/api/pyspark.ml.regression.IsotonicRegression.rst","source/reference/api/pyspark.ml.regression.IsotonicRegressionModel.rst","source/reference/api/pyspark.ml.regression.LinearRegression.rst","source/reference/api/pyspark.ml.regression.LinearRegressionModel.rst","source/reference/api/pyspark.ml.regression.LinearRegressionSummary.rst","source/reference/api/pyspark.ml.regression.LinearRegressionTrainingSummary.rst","source/reference/api/pyspark.ml.regression.RandomForestRegressionModel.rst","source/reference/api/pyspark.ml.regression.RandomForestRegressor.rst","source/reference/api/pyspark.ml.stat.ANOVATest.rst","source/reference/api/pyspark.ml.stat.ChiSquareTest.rst","source/reference/api/pyspark.ml.stat.Correlation.rst","source/reference/api/pyspark.ml.stat.FValueTest.rst","source/reference/api/pyspark.ml.stat.KolmogorovSmirnovTest.rst","source/reference/api/pyspark.ml.stat.MultivariateGaussian.rst","source/reference/api/pyspark.ml.stat.Summarizer.rst","source/reference/api/pyspark.ml.stat.SummaryBuilder.rst","source/reference/api/pyspark.ml.tuning.CrossValidator.rst","source/reference/api/pyspark.ml.tuning.CrossValidatorModel.rst","source/reference/api/pyspark.ml.tuning.ParamGridBuilder.rst","source/reference/api/pyspark.ml.tuning.TrainValidationSplit.rst","source/reference/api/pyspark.ml.tuning.TrainValidationSplitModel.rst","source/reference/api/pyspark.ml.util.BaseReadWrite.rst","source/reference/api/pyspark.ml.util.DefaultParamsReadable.rst","source/reference/api/pyspark.ml.util.DefaultParamsReader.rst","source/reference/api/pyspark.ml.util.DefaultParamsWritable.rst","source/reference/api/pyspark.ml.util.DefaultParamsWriter.rst","source/reference/api/pyspark.ml.util.GeneralMLWriter.rst","source/reference/api/pyspark.ml.util.HasTrainingSummary.rst","source/reference/api/pyspark.ml.util.Identifiable.rst","source/reference/api/pyspark.ml.util.MLReadable.rst","source/reference/api/pyspark.ml.util.MLReader.rst","source/reference/api/pyspark.ml.util.MLWritable.rst","source/reference/api/pyspark.ml.util.MLWriter.rst","source/reference/api/pyspark.mllib.classification.LogisticRegressionModel.rst","source/reference/api/pyspark.mllib.classification.LogisticRegressionWithLBFGS.rst","source/reference/api/pyspark.mllib.classification.LogisticRegressionWithSGD.rst","source/reference/api/pyspark.mllib.classification.NaiveBayes.rst","source/reference/api/pyspark.mllib.classification.NaiveBayesModel.rst","source/reference/api/pyspark.mllib.classification.SVMModel.rst","source/reference/api/pyspark.mllib.classification.SVMWithSGD.rst","source/reference/api/pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.rst","source/reference/api/pyspark.mllib.clustering.BisectingKMeans.rst","source/reference/api/pyspark.mllib.clustering.BisectingKMeansModel.rst","source/reference/api/pyspark.mllib.clustering.GaussianMixture.rst","source/reference/api/pyspark.mllib.clustering.GaussianMixtureModel.rst","source/reference/api/pyspark.mllib.clustering.KMeans.rst","source/reference/api/pyspark.mllib.clustering.KMeansModel.rst","source/reference/api/pyspark.mllib.clustering.LDA.rst","source/reference/api/pyspark.mllib.clustering.LDAModel.rst","source/reference/api/pyspark.mllib.clustering.PowerIterationClustering.rst","source/reference/api/pyspark.mllib.clustering.PowerIterationClusteringModel.rst","source/reference/api/pyspark.mllib.clustering.StreamingKMeans.rst","source/reference/api/pyspark.mllib.clustering.StreamingKMeansModel.rst","source/reference/api/pyspark.mllib.evaluation.BinaryClassificationMetrics.rst","source/reference/api/pyspark.mllib.evaluation.MulticlassMetrics.rst","source/reference/api/pyspark.mllib.evaluation.RankingMetrics.rst","source/reference/api/pyspark.mllib.evaluation.RegressionMetrics.rst","source/reference/api/pyspark.mllib.feature.ChiSqSelector.rst","source/reference/api/pyspark.mllib.feature.ChiSqSelectorModel.rst","source/reference/api/pyspark.mllib.feature.ElementwiseProduct.rst","source/reference/api/pyspark.mllib.feature.HashingTF.rst","source/reference/api/pyspark.mllib.feature.IDF.rst","source/reference/api/pyspark.mllib.feature.IDFModel.rst","source/reference/api/pyspark.mllib.feature.Normalizer.rst","source/reference/api/pyspark.mllib.feature.StandardScaler.rst","source/reference/api/pyspark.mllib.feature.StandardScalerModel.rst","source/reference/api/pyspark.mllib.feature.Word2Vec.rst","source/reference/api/pyspark.mllib.feature.Word2VecModel.rst","source/reference/api/pyspark.mllib.fpm.FPGrowth.rst","source/reference/api/pyspark.mllib.fpm.FPGrowthModel.rst","source/reference/api/pyspark.mllib.fpm.PrefixSpan.rst","source/reference/api/pyspark.mllib.fpm.PrefixSpanModel.rst","source/reference/api/pyspark.mllib.linalg.DenseMatrix.rst","source/reference/api/pyspark.mllib.linalg.DenseVector.rst","source/reference/api/pyspark.mllib.linalg.Matrices.rst","source/reference/api/pyspark.mllib.linalg.Matrix.rst","source/reference/api/pyspark.mllib.linalg.QRDecomposition.rst","source/reference/api/pyspark.mllib.linalg.SparseMatrix.rst","source/reference/api/pyspark.mllib.linalg.SparseVector.rst","source/reference/api/pyspark.mllib.linalg.Vector.rst","source/reference/api/pyspark.mllib.linalg.Vectors.rst","source/reference/api/pyspark.mllib.linalg.distributed.BlockMatrix.rst","source/reference/api/pyspark.mllib.linalg.distributed.CoordinateMatrix.rst","source/reference/api/pyspark.mllib.linalg.distributed.DistributedMatrix.rst","source/reference/api/pyspark.mllib.linalg.distributed.IndexedRow.rst","source/reference/api/pyspark.mllib.linalg.distributed.IndexedRowMatrix.rst","source/reference/api/pyspark.mllib.linalg.distributed.MatrixEntry.rst","source/reference/api/pyspark.mllib.linalg.distributed.RowMatrix.rst","source/reference/api/pyspark.mllib.linalg.distributed.SingularValueDecomposition.rst","source/reference/api/pyspark.mllib.random.RandomRDDs.rst","source/reference/api/pyspark.mllib.recommendation.ALS.rst","source/reference/api/pyspark.mllib.recommendation.MatrixFactorizationModel.rst","source/reference/api/pyspark.mllib.recommendation.Rating.rst","source/reference/api/pyspark.mllib.regression.IsotonicRegression.rst","source/reference/api/pyspark.mllib.regression.IsotonicRegressionModel.rst","source/reference/api/pyspark.mllib.regression.LabeledPoint.rst","source/reference/api/pyspark.mllib.regression.LassoModel.rst","source/reference/api/pyspark.mllib.regression.LassoWithSGD.rst","source/reference/api/pyspark.mllib.regression.LinearModel.rst","source/reference/api/pyspark.mllib.regression.LinearRegressionModel.rst","source/reference/api/pyspark.mllib.regression.LinearRegressionWithSGD.rst","source/reference/api/pyspark.mllib.regression.RidgeRegressionModel.rst","source/reference/api/pyspark.mllib.regression.RidgeRegressionWithSGD.rst","source/reference/api/pyspark.mllib.regression.StreamingLinearAlgorithm.rst","source/reference/api/pyspark.mllib.regression.StreamingLinearRegressionWithSGD.rst","source/reference/api/pyspark.mllib.stat.ChiSqTestResult.rst","source/reference/api/pyspark.mllib.stat.KernelDensity.rst","source/reference/api/pyspark.mllib.stat.MultivariateGaussian.rst","source/reference/api/pyspark.mllib.stat.MultivariateStatisticalSummary.rst","source/reference/api/pyspark.mllib.stat.Statistics.rst","source/reference/api/pyspark.mllib.tree.DecisionTree.rst","source/reference/api/pyspark.mllib.tree.DecisionTreeModel.rst","source/reference/api/pyspark.mllib.tree.GradientBoostedTrees.rst","source/reference/api/pyspark.mllib.tree.GradientBoostedTreesModel.rst","source/reference/api/pyspark.mllib.tree.RandomForest.rst","source/reference/api/pyspark.mllib.tree.RandomForestModel.rst","source/reference/api/pyspark.mllib.util.JavaLoader.rst","source/reference/api/pyspark.mllib.util.JavaSaveable.rst","source/reference/api/pyspark.mllib.util.LinearDataGenerator.rst","source/reference/api/pyspark.mllib.util.Loader.rst","source/reference/api/pyspark.mllib.util.MLUtils.rst","source/reference/api/pyspark.mllib.util.Saveable.rst","source/reference/api/pyspark.resource.ExecutorResourceRequest.rst","source/reference/api/pyspark.resource.ExecutorResourceRequests.rst","source/reference/api/pyspark.resource.ResourceInformation.rst","source/reference/api/pyspark.resource.ResourceProfile.rst","source/reference/api/pyspark.resource.ResourceProfileBuilder.rst","source/reference/api/pyspark.resource.TaskResourceRequest.rst","source/reference/api/pyspark.resource.TaskResourceRequests.rst","source/reference/api/pyspark.sql.Column.rst","source/reference/api/pyspark.sql.DataFrame.rst","source/reference/api/pyspark.sql.DataFrame.agg.rst","source/reference/api/pyspark.sql.DataFrame.alias.rst","source/reference/api/pyspark.sql.DataFrame.approxQuantile.rst","source/reference/api/pyspark.sql.DataFrame.cache.rst","source/reference/api/pyspark.sql.DataFrame.checkpoint.rst","source/reference/api/pyspark.sql.DataFrame.coalesce.rst","source/reference/api/pyspark.sql.DataFrame.colRegex.rst","source/reference/api/pyspark.sql.DataFrame.collect.rst","source/reference/api/pyspark.sql.DataFrame.columns.rst","source/reference/api/pyspark.sql.DataFrame.corr.rst","source/reference/api/pyspark.sql.DataFrame.count.rst","source/reference/api/pyspark.sql.DataFrame.cov.rst","source/reference/api/pyspark.sql.DataFrame.createGlobalTempView.rst","source/reference/api/pyspark.sql.DataFrame.createOrReplaceGlobalTempView.rst","source/reference/api/pyspark.sql.DataFrame.createOrReplaceTempView.rst","source/reference/api/pyspark.sql.DataFrame.createTempView.rst","source/reference/api/pyspark.sql.DataFrame.crossJoin.rst","source/reference/api/pyspark.sql.DataFrame.crosstab.rst","source/reference/api/pyspark.sql.DataFrame.cube.rst","source/reference/api/pyspark.sql.DataFrame.describe.rst","source/reference/api/pyspark.sql.DataFrame.distinct.rst","source/reference/api/pyspark.sql.DataFrame.drop.rst","source/reference/api/pyspark.sql.DataFrame.dropDuplicates.rst","source/reference/api/pyspark.sql.DataFrame.drop_duplicates.rst","source/reference/api/pyspark.sql.DataFrame.dropna.rst","source/reference/api/pyspark.sql.DataFrame.dtypes.rst","source/reference/api/pyspark.sql.DataFrame.exceptAll.rst","source/reference/api/pyspark.sql.DataFrame.explain.rst","source/reference/api/pyspark.sql.DataFrame.fillna.rst","source/reference/api/pyspark.sql.DataFrame.filter.rst","source/reference/api/pyspark.sql.DataFrame.first.rst","source/reference/api/pyspark.sql.DataFrame.foreach.rst","source/reference/api/pyspark.sql.DataFrame.foreachPartition.rst","source/reference/api/pyspark.sql.DataFrame.freqItems.rst","source/reference/api/pyspark.sql.DataFrame.groupBy.rst","source/reference/api/pyspark.sql.DataFrame.head.rst","source/reference/api/pyspark.sql.DataFrame.hint.rst","source/reference/api/pyspark.sql.DataFrame.inputFiles.rst","source/reference/api/pyspark.sql.DataFrame.intersect.rst","source/reference/api/pyspark.sql.DataFrame.intersectAll.rst","source/reference/api/pyspark.sql.DataFrame.isLocal.rst","source/reference/api/pyspark.sql.DataFrame.isStreaming.rst","source/reference/api/pyspark.sql.DataFrame.join.rst","source/reference/api/pyspark.sql.DataFrame.limit.rst","source/reference/api/pyspark.sql.DataFrame.localCheckpoint.rst","source/reference/api/pyspark.sql.DataFrame.mapInPandas.rst","source/reference/api/pyspark.sql.DataFrame.na.rst","source/reference/api/pyspark.sql.DataFrame.orderBy.rst","source/reference/api/pyspark.sql.DataFrame.persist.rst","source/reference/api/pyspark.sql.DataFrame.printSchema.rst","source/reference/api/pyspark.sql.DataFrame.randomSplit.rst","source/reference/api/pyspark.sql.DataFrame.rdd.rst","source/reference/api/pyspark.sql.DataFrame.registerTempTable.rst","source/reference/api/pyspark.sql.DataFrame.repartition.rst","source/reference/api/pyspark.sql.DataFrame.repartitionByRange.rst","source/reference/api/pyspark.sql.DataFrame.replace.rst","source/reference/api/pyspark.sql.DataFrame.rollup.rst","source/reference/api/pyspark.sql.DataFrame.sameSemantics.rst","source/reference/api/pyspark.sql.DataFrame.sample.rst","source/reference/api/pyspark.sql.DataFrame.sampleBy.rst","source/reference/api/pyspark.sql.DataFrame.schema.rst","source/reference/api/pyspark.sql.DataFrame.select.rst","source/reference/api/pyspark.sql.DataFrame.selectExpr.rst","source/reference/api/pyspark.sql.DataFrame.semanticHash.rst","source/reference/api/pyspark.sql.DataFrame.show.rst","source/reference/api/pyspark.sql.DataFrame.sort.rst","source/reference/api/pyspark.sql.DataFrame.sortWithinPartitions.rst","source/reference/api/pyspark.sql.DataFrame.stat.rst","source/reference/api/pyspark.sql.DataFrame.storageLevel.rst","source/reference/api/pyspark.sql.DataFrame.subtract.rst","source/reference/api/pyspark.sql.DataFrame.summary.rst","source/reference/api/pyspark.sql.DataFrame.tail.rst","source/reference/api/pyspark.sql.DataFrame.take.rst","source/reference/api/pyspark.sql.DataFrame.toDF.rst","source/reference/api/pyspark.sql.DataFrame.toJSON.rst","source/reference/api/pyspark.sql.DataFrame.toLocalIterator.rst","source/reference/api/pyspark.sql.DataFrame.toPandas.rst","source/reference/api/pyspark.sql.DataFrame.transform.rst","source/reference/api/pyspark.sql.DataFrame.union.rst","source/reference/api/pyspark.sql.DataFrame.unionAll.rst","source/reference/api/pyspark.sql.DataFrame.unionByName.rst","source/reference/api/pyspark.sql.DataFrame.unpersist.rst","source/reference/api/pyspark.sql.DataFrame.where.rst","source/reference/api/pyspark.sql.DataFrame.withColumn.rst","source/reference/api/pyspark.sql.DataFrame.withColumnRenamed.rst","source/reference/api/pyspark.sql.DataFrame.withWatermark.rst","source/reference/api/pyspark.sql.DataFrame.write.rst","source/reference/api/pyspark.sql.DataFrame.writeStream.rst","source/reference/api/pyspark.sql.DataFrame.writeTo.rst","source/reference/api/pyspark.sql.DataFrameNaFunctions.rst","source/reference/api/pyspark.sql.DataFrameNaFunctions.drop.rst","source/reference/api/pyspark.sql.DataFrameNaFunctions.fill.rst","source/reference/api/pyspark.sql.DataFrameNaFunctions.replace.rst","source/reference/api/pyspark.sql.DataFrameReader.csv.rst","source/reference/api/pyspark.sql.DataFrameReader.format.rst","source/reference/api/pyspark.sql.DataFrameReader.jdbc.rst","source/reference/api/pyspark.sql.DataFrameReader.json.rst","source/reference/api/pyspark.sql.DataFrameReader.load.rst","source/reference/api/pyspark.sql.DataFrameReader.option.rst","source/reference/api/pyspark.sql.DataFrameReader.options.rst","source/reference/api/pyspark.sql.DataFrameReader.orc.rst","source/reference/api/pyspark.sql.DataFrameReader.parquet.rst","source/reference/api/pyspark.sql.DataFrameReader.schema.rst","source/reference/api/pyspark.sql.DataFrameReader.table.rst","source/reference/api/pyspark.sql.DataFrameStatFunctions.rst","source/reference/api/pyspark.sql.DataFrameStatFunctions.approxQuantile.rst","source/reference/api/pyspark.sql.DataFrameStatFunctions.corr.rst","source/reference/api/pyspark.sql.DataFrameStatFunctions.cov.rst","source/reference/api/pyspark.sql.DataFrameStatFunctions.crosstab.rst","source/reference/api/pyspark.sql.DataFrameStatFunctions.freqItems.rst","source/reference/api/pyspark.sql.DataFrameStatFunctions.sampleBy.rst","source/reference/api/pyspark.sql.DataFrameWriter.bucketBy.rst","source/reference/api/pyspark.sql.DataFrameWriter.csv.rst","source/reference/api/pyspark.sql.DataFrameWriter.format.rst","source/reference/api/pyspark.sql.DataFrameWriter.insertInto.rst","source/reference/api/pyspark.sql.DataFrameWriter.jdbc.rst","source/reference/api/pyspark.sql.DataFrameWriter.json.rst","source/reference/api/pyspark.sql.DataFrameWriter.mode.rst","source/reference/api/pyspark.sql.DataFrameWriter.option.rst","source/reference/api/pyspark.sql.DataFrameWriter.options.rst","source/reference/api/pyspark.sql.DataFrameWriter.orc.rst","source/reference/api/pyspark.sql.DataFrameWriter.parquet.rst","source/reference/api/pyspark.sql.DataFrameWriter.partitionBy.rst","source/reference/api/pyspark.sql.DataFrameWriter.save.rst","source/reference/api/pyspark.sql.DataFrameWriter.saveAsTable.rst","source/reference/api/pyspark.sql.DataFrameWriter.sortBy.rst","source/reference/api/pyspark.sql.DataFrameWriter.text.rst","source/reference/api/pyspark.sql.GroupedData.rst","source/reference/api/pyspark.sql.GroupedData.agg.rst","source/reference/api/pyspark.sql.GroupedData.apply.rst","source/reference/api/pyspark.sql.GroupedData.applyInPandas.rst","source/reference/api/pyspark.sql.GroupedData.avg.rst","source/reference/api/pyspark.sql.GroupedData.cogroup.rst","source/reference/api/pyspark.sql.GroupedData.count.rst","source/reference/api/pyspark.sql.GroupedData.max.rst","source/reference/api/pyspark.sql.GroupedData.mean.rst","source/reference/api/pyspark.sql.GroupedData.min.rst","source/reference/api/pyspark.sql.GroupedData.pivot.rst","source/reference/api/pyspark.sql.GroupedData.sum.rst","source/reference/api/pyspark.sql.Row.rst","source/reference/api/pyspark.sql.Row.asDict.rst","source/reference/api/pyspark.sql.SparkSession.rst","source/reference/api/pyspark.sql.SparkSession.builder.appName.rst","source/reference/api/pyspark.sql.SparkSession.builder.config.rst","source/reference/api/pyspark.sql.SparkSession.builder.enableHiveSupport.rst","source/reference/api/pyspark.sql.SparkSession.builder.getOrCreate.rst","source/reference/api/pyspark.sql.SparkSession.builder.master.rst","source/reference/api/pyspark.sql.SparkSession.catalog.rst","source/reference/api/pyspark.sql.SparkSession.conf.rst","source/reference/api/pyspark.sql.SparkSession.createDataFrame.rst","source/reference/api/pyspark.sql.SparkSession.getActiveSession.rst","source/reference/api/pyspark.sql.SparkSession.newSession.rst","source/reference/api/pyspark.sql.SparkSession.range.rst","source/reference/api/pyspark.sql.SparkSession.read.rst","source/reference/api/pyspark.sql.SparkSession.readStream.rst","source/reference/api/pyspark.sql.SparkSession.sparkContext.rst","source/reference/api/pyspark.sql.SparkSession.sql.rst","source/reference/api/pyspark.sql.SparkSession.stop.rst","source/reference/api/pyspark.sql.SparkSession.streams.rst","source/reference/api/pyspark.sql.SparkSession.table.rst","source/reference/api/pyspark.sql.SparkSession.udf.rst","source/reference/api/pyspark.sql.SparkSession.version.rst","source/reference/api/pyspark.sql.Window.rst","source/reference/api/pyspark.sql.Window.currentRow.rst","source/reference/api/pyspark.sql.Window.orderBy.rst","source/reference/api/pyspark.sql.Window.partitionBy.rst","source/reference/api/pyspark.sql.Window.rangeBetween.rst","source/reference/api/pyspark.sql.Window.rowsBetween.rst","source/reference/api/pyspark.sql.Window.unboundedFollowing.rst","source/reference/api/pyspark.sql.Window.unboundedPreceding.rst","source/reference/api/pyspark.sql.WindowSpec.orderBy.rst","source/reference/api/pyspark.sql.WindowSpec.partitionBy.rst","source/reference/api/pyspark.sql.WindowSpec.rangeBetween.rst","source/reference/api/pyspark.sql.WindowSpec.rowsBetween.rst","source/reference/api/pyspark.sql.avro.functions.from_avro.rst","source/reference/api/pyspark.sql.avro.functions.to_avro.rst","source/reference/api/pyspark.sql.functions.abs.rst","source/reference/api/pyspark.sql.functions.acos.rst","source/reference/api/pyspark.sql.functions.add_months.rst","source/reference/api/pyspark.sql.functions.aggregate.rst","source/reference/api/pyspark.sql.functions.approxCountDistinct.rst","source/reference/api/pyspark.sql.functions.approx_count_distinct.rst","source/reference/api/pyspark.sql.functions.array.rst","source/reference/api/pyspark.sql.functions.array_contains.rst","source/reference/api/pyspark.sql.functions.array_distinct.rst","source/reference/api/pyspark.sql.functions.array_except.rst","source/reference/api/pyspark.sql.functions.array_intersect.rst","source/reference/api/pyspark.sql.functions.array_join.rst","source/reference/api/pyspark.sql.functions.array_max.rst","source/reference/api/pyspark.sql.functions.array_min.rst","source/reference/api/pyspark.sql.functions.array_position.rst","source/reference/api/pyspark.sql.functions.array_remove.rst","source/reference/api/pyspark.sql.functions.array_repeat.rst","source/reference/api/pyspark.sql.functions.array_sort.rst","source/reference/api/pyspark.sql.functions.array_union.rst","source/reference/api/pyspark.sql.functions.arrays_overlap.rst","source/reference/api/pyspark.sql.functions.arrays_zip.rst","source/reference/api/pyspark.sql.functions.asc.rst","source/reference/api/pyspark.sql.functions.asc_nulls_first.rst","source/reference/api/pyspark.sql.functions.asc_nulls_last.rst","source/reference/api/pyspark.sql.functions.ascii.rst","source/reference/api/pyspark.sql.functions.asin.rst","source/reference/api/pyspark.sql.functions.atan.rst","source/reference/api/pyspark.sql.functions.atan2.rst","source/reference/api/pyspark.sql.functions.avg.rst","source/reference/api/pyspark.sql.functions.base64.rst","source/reference/api/pyspark.sql.functions.bin.rst","source/reference/api/pyspark.sql.functions.bitwiseNOT.rst","source/reference/api/pyspark.sql.functions.broadcast.rst","source/reference/api/pyspark.sql.functions.bround.rst","source/reference/api/pyspark.sql.functions.bucket.rst","source/reference/api/pyspark.sql.functions.cbrt.rst","source/reference/api/pyspark.sql.functions.ceil.rst","source/reference/api/pyspark.sql.functions.coalesce.rst","source/reference/api/pyspark.sql.functions.col.rst","source/reference/api/pyspark.sql.functions.collect_list.rst","source/reference/api/pyspark.sql.functions.collect_set.rst","source/reference/api/pyspark.sql.functions.column.rst","source/reference/api/pyspark.sql.functions.concat.rst","source/reference/api/pyspark.sql.functions.concat_ws.rst","source/reference/api/pyspark.sql.functions.conv.rst","source/reference/api/pyspark.sql.functions.corr.rst","source/reference/api/pyspark.sql.functions.cos.rst","source/reference/api/pyspark.sql.functions.cosh.rst","source/reference/api/pyspark.sql.functions.count.rst","source/reference/api/pyspark.sql.functions.countDistinct.rst","source/reference/api/pyspark.sql.functions.covar_pop.rst","source/reference/api/pyspark.sql.functions.covar_samp.rst","source/reference/api/pyspark.sql.functions.crc32.rst","source/reference/api/pyspark.sql.functions.create_map.rst","source/reference/api/pyspark.sql.functions.cume_dist.rst","source/reference/api/pyspark.sql.functions.current_date.rst","source/reference/api/pyspark.sql.functions.current_timestamp.rst","source/reference/api/pyspark.sql.functions.date_add.rst","source/reference/api/pyspark.sql.functions.date_format.rst","source/reference/api/pyspark.sql.functions.date_sub.rst","source/reference/api/pyspark.sql.functions.date_trunc.rst","source/reference/api/pyspark.sql.functions.datediff.rst","source/reference/api/pyspark.sql.functions.dayofmonth.rst","source/reference/api/pyspark.sql.functions.dayofweek.rst","source/reference/api/pyspark.sql.functions.dayofyear.rst","source/reference/api/pyspark.sql.functions.days.rst","source/reference/api/pyspark.sql.functions.decode.rst","source/reference/api/pyspark.sql.functions.degrees.rst","source/reference/api/pyspark.sql.functions.dense_rank.rst","source/reference/api/pyspark.sql.functions.desc.rst","source/reference/api/pyspark.sql.functions.desc_nulls_first.rst","source/reference/api/pyspark.sql.functions.desc_nulls_last.rst","source/reference/api/pyspark.sql.functions.element_at.rst","source/reference/api/pyspark.sql.functions.encode.rst","source/reference/api/pyspark.sql.functions.exists.rst","source/reference/api/pyspark.sql.functions.exp.rst","source/reference/api/pyspark.sql.functions.explode.rst","source/reference/api/pyspark.sql.functions.explode_outer.rst","source/reference/api/pyspark.sql.functions.expm1.rst","source/reference/api/pyspark.sql.functions.expr.rst","source/reference/api/pyspark.sql.functions.factorial.rst","source/reference/api/pyspark.sql.functions.filter.rst","source/reference/api/pyspark.sql.functions.first.rst","source/reference/api/pyspark.sql.functions.flatten.rst","source/reference/api/pyspark.sql.functions.floor.rst","source/reference/api/pyspark.sql.functions.forall.rst","source/reference/api/pyspark.sql.functions.format_number.rst","source/reference/api/pyspark.sql.functions.format_string.rst","source/reference/api/pyspark.sql.functions.from_csv.rst","source/reference/api/pyspark.sql.functions.from_json.rst","source/reference/api/pyspark.sql.functions.from_unixtime.rst","source/reference/api/pyspark.sql.functions.from_utc_timestamp.rst","source/reference/api/pyspark.sql.functions.get_json_object.rst","source/reference/api/pyspark.sql.functions.greatest.rst","source/reference/api/pyspark.sql.functions.grouping.rst","source/reference/api/pyspark.sql.functions.grouping_id.rst","source/reference/api/pyspark.sql.functions.hash.rst","source/reference/api/pyspark.sql.functions.hex.rst","source/reference/api/pyspark.sql.functions.hour.rst","source/reference/api/pyspark.sql.functions.hours.rst","source/reference/api/pyspark.sql.functions.hypot.rst","source/reference/api/pyspark.sql.functions.initcap.rst","source/reference/api/pyspark.sql.functions.input_file_name.rst","source/reference/api/pyspark.sql.functions.instr.rst","source/reference/api/pyspark.sql.functions.isnan.rst","source/reference/api/pyspark.sql.functions.isnull.rst","source/reference/api/pyspark.sql.functions.json_tuple.rst","source/reference/api/pyspark.sql.functions.kurtosis.rst","source/reference/api/pyspark.sql.functions.lag.rst","source/reference/api/pyspark.sql.functions.last.rst","source/reference/api/pyspark.sql.functions.last_day.rst","source/reference/api/pyspark.sql.functions.lead.rst","source/reference/api/pyspark.sql.functions.least.rst","source/reference/api/pyspark.sql.functions.length.rst","source/reference/api/pyspark.sql.functions.levenshtein.rst","source/reference/api/pyspark.sql.functions.lit.rst","source/reference/api/pyspark.sql.functions.locate.rst","source/reference/api/pyspark.sql.functions.log.rst","source/reference/api/pyspark.sql.functions.log10.rst","source/reference/api/pyspark.sql.functions.log1p.rst","source/reference/api/pyspark.sql.functions.log2.rst","source/reference/api/pyspark.sql.functions.lower.rst","source/reference/api/pyspark.sql.functions.lpad.rst","source/reference/api/pyspark.sql.functions.ltrim.rst","source/reference/api/pyspark.sql.functions.map_concat.rst","source/reference/api/pyspark.sql.functions.map_entries.rst","source/reference/api/pyspark.sql.functions.map_filter.rst","source/reference/api/pyspark.sql.functions.map_from_arrays.rst","source/reference/api/pyspark.sql.functions.map_from_entries.rst","source/reference/api/pyspark.sql.functions.map_keys.rst","source/reference/api/pyspark.sql.functions.map_values.rst","source/reference/api/pyspark.sql.functions.map_zip_with.rst","source/reference/api/pyspark.sql.functions.max.rst","source/reference/api/pyspark.sql.functions.md5.rst","source/reference/api/pyspark.sql.functions.mean.rst","source/reference/api/pyspark.sql.functions.min.rst","source/reference/api/pyspark.sql.functions.minute.rst","source/reference/api/pyspark.sql.functions.monotonically_increasing_id.rst","source/reference/api/pyspark.sql.functions.month.rst","source/reference/api/pyspark.sql.functions.months.rst","source/reference/api/pyspark.sql.functions.months_between.rst","source/reference/api/pyspark.sql.functions.nanvl.rst","source/reference/api/pyspark.sql.functions.next_day.rst","source/reference/api/pyspark.sql.functions.ntile.rst","source/reference/api/pyspark.sql.functions.overlay.rst","source/reference/api/pyspark.sql.functions.pandas_udf.rst","source/reference/api/pyspark.sql.functions.percent_rank.rst","source/reference/api/pyspark.sql.functions.percentile_approx.rst","source/reference/api/pyspark.sql.functions.posexplode.rst","source/reference/api/pyspark.sql.functions.posexplode_outer.rst","source/reference/api/pyspark.sql.functions.pow.rst","source/reference/api/pyspark.sql.functions.quarter.rst","source/reference/api/pyspark.sql.functions.radians.rst","source/reference/api/pyspark.sql.functions.rand.rst","source/reference/api/pyspark.sql.functions.randn.rst","source/reference/api/pyspark.sql.functions.rank.rst","source/reference/api/pyspark.sql.functions.regexp_extract.rst","source/reference/api/pyspark.sql.functions.regexp_replace.rst","source/reference/api/pyspark.sql.functions.repeat.rst","source/reference/api/pyspark.sql.functions.reverse.rst","source/reference/api/pyspark.sql.functions.rint.rst","source/reference/api/pyspark.sql.functions.round.rst","source/reference/api/pyspark.sql.functions.row_number.rst","source/reference/api/pyspark.sql.functions.rpad.rst","source/reference/api/pyspark.sql.functions.rtrim.rst","source/reference/api/pyspark.sql.functions.schema_of_csv.rst","source/reference/api/pyspark.sql.functions.schema_of_json.rst","source/reference/api/pyspark.sql.functions.second.rst","source/reference/api/pyspark.sql.functions.sequence.rst","source/reference/api/pyspark.sql.functions.sha1.rst","source/reference/api/pyspark.sql.functions.sha2.rst","source/reference/api/pyspark.sql.functions.shiftLeft.rst","source/reference/api/pyspark.sql.functions.shiftRight.rst","source/reference/api/pyspark.sql.functions.shiftRightUnsigned.rst","source/reference/api/pyspark.sql.functions.shuffle.rst","source/reference/api/pyspark.sql.functions.signum.rst","source/reference/api/pyspark.sql.functions.sin.rst","source/reference/api/pyspark.sql.functions.sinh.rst","source/reference/api/pyspark.sql.functions.size.rst","source/reference/api/pyspark.sql.functions.skewness.rst","source/reference/api/pyspark.sql.functions.slice.rst","source/reference/api/pyspark.sql.functions.sort_array.rst","source/reference/api/pyspark.sql.functions.soundex.rst","source/reference/api/pyspark.sql.functions.spark_partition_id.rst","source/reference/api/pyspark.sql.functions.split.rst","source/reference/api/pyspark.sql.functions.sqrt.rst","source/reference/api/pyspark.sql.functions.stddev.rst","source/reference/api/pyspark.sql.functions.stddev_pop.rst","source/reference/api/pyspark.sql.functions.stddev_samp.rst","source/reference/api/pyspark.sql.functions.struct.rst","source/reference/api/pyspark.sql.functions.substring.rst","source/reference/api/pyspark.sql.functions.substring_index.rst","source/reference/api/pyspark.sql.functions.sum.rst","source/reference/api/pyspark.sql.functions.sumDistinct.rst","source/reference/api/pyspark.sql.functions.tan.rst","source/reference/api/pyspark.sql.functions.tanh.rst","source/reference/api/pyspark.sql.functions.timestamp_seconds.rst","source/reference/api/pyspark.sql.functions.toDegrees.rst","source/reference/api/pyspark.sql.functions.toRadians.rst","source/reference/api/pyspark.sql.functions.to_csv.rst","source/reference/api/pyspark.sql.functions.to_date.rst","source/reference/api/pyspark.sql.functions.to_json.rst","source/reference/api/pyspark.sql.functions.to_timestamp.rst","source/reference/api/pyspark.sql.functions.to_utc_timestamp.rst","source/reference/api/pyspark.sql.functions.transform.rst","source/reference/api/pyspark.sql.functions.transform_keys.rst","source/reference/api/pyspark.sql.functions.transform_values.rst","source/reference/api/pyspark.sql.functions.translate.rst","source/reference/api/pyspark.sql.functions.trim.rst","source/reference/api/pyspark.sql.functions.trunc.rst","source/reference/api/pyspark.sql.functions.udf.rst","source/reference/api/pyspark.sql.functions.unbase64.rst","source/reference/api/pyspark.sql.functions.unhex.rst","source/reference/api/pyspark.sql.functions.unix_timestamp.rst","source/reference/api/pyspark.sql.functions.upper.rst","source/reference/api/pyspark.sql.functions.var_pop.rst","source/reference/api/pyspark.sql.functions.var_samp.rst","source/reference/api/pyspark.sql.functions.variance.rst","source/reference/api/pyspark.sql.functions.weekofyear.rst","source/reference/api/pyspark.sql.functions.when.rst","source/reference/api/pyspark.sql.functions.window.rst","source/reference/api/pyspark.sql.functions.xxhash64.rst","source/reference/api/pyspark.sql.functions.year.rst","source/reference/api/pyspark.sql.functions.years.rst","source/reference/api/pyspark.sql.functions.zip_with.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.csv.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.format.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.json.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.load.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.option.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.options.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.orc.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.parquet.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.schema.rst","source/reference/api/pyspark.sql.streaming.DataStreamReader.text.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.foreach.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.foreachBatch.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.format.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.option.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.options.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.outputMode.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.partitionBy.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.queryName.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.start.rst","source/reference/api/pyspark.sql.streaming.DataStreamWriter.trigger.rst","source/reference/api/pyspark.sql.streaming.ForeachBatchFunction.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.awaitTermination.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.exception.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.explain.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.id.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.isActive.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.lastProgress.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.name.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.processAllAvailable.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.recentProgress.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.runId.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.status.rst","source/reference/api/pyspark.sql.streaming.StreamingQuery.stop.rst","source/reference/api/pyspark.sql.streaming.StreamingQueryException.rst","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.rst","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.active.rst","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.awaitAnyTermination.rst","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.get.rst","source/reference/api/pyspark.sql.streaming.StreamingQueryManager.resetTerminated.rst","source/reference/api/pyspark.sql.types.ArrayType.rst","source/reference/api/pyspark.sql.types.BinaryType.rst","source/reference/api/pyspark.sql.types.BooleanType.rst","source/reference/api/pyspark.sql.types.ByteType.rst","source/reference/api/pyspark.sql.types.DataType.rst","source/reference/api/pyspark.sql.types.DateType.rst","source/reference/api/pyspark.sql.types.DecimalType.rst","source/reference/api/pyspark.sql.types.DoubleType.rst","source/reference/api/pyspark.sql.types.FloatType.rst","source/reference/api/pyspark.sql.types.IntegerType.rst","source/reference/api/pyspark.sql.types.LongType.rst","source/reference/api/pyspark.sql.types.MapType.rst","source/reference/api/pyspark.sql.types.NullType.rst","source/reference/api/pyspark.sql.types.ShortType.rst","source/reference/api/pyspark.sql.types.StringType.rst","source/reference/api/pyspark.sql.types.StructField.rst","source/reference/api/pyspark.sql.types.StructType.rst","source/reference/api/pyspark.sql.types.TimestampType.rst","source/reference/api/pyspark.streaming.DStream.rst","source/reference/api/pyspark.streaming.DStream.cache.rst","source/reference/api/pyspark.streaming.DStream.checkpoint.rst","source/reference/api/pyspark.streaming.DStream.cogroup.rst","source/reference/api/pyspark.streaming.DStream.combineByKey.rst","source/reference/api/pyspark.streaming.DStream.context.rst","source/reference/api/pyspark.streaming.DStream.count.rst","source/reference/api/pyspark.streaming.DStream.countByValue.rst","source/reference/api/pyspark.streaming.DStream.countByValueAndWindow.rst","source/reference/api/pyspark.streaming.DStream.countByWindow.rst","source/reference/api/pyspark.streaming.DStream.filter.rst","source/reference/api/pyspark.streaming.DStream.flatMap.rst","source/reference/api/pyspark.streaming.DStream.flatMapValues.rst","source/reference/api/pyspark.streaming.DStream.foreachRDD.rst","source/reference/api/pyspark.streaming.DStream.fullOuterJoin.rst","source/reference/api/pyspark.streaming.DStream.glom.rst","source/reference/api/pyspark.streaming.DStream.groupByKey.rst","source/reference/api/pyspark.streaming.DStream.groupByKeyAndWindow.rst","source/reference/api/pyspark.streaming.DStream.join.rst","source/reference/api/pyspark.streaming.DStream.leftOuterJoin.rst","source/reference/api/pyspark.streaming.DStream.map.rst","source/reference/api/pyspark.streaming.DStream.mapPartitions.rst","source/reference/api/pyspark.streaming.DStream.mapPartitionsWithIndex.rst","source/reference/api/pyspark.streaming.DStream.mapValues.rst","source/reference/api/pyspark.streaming.DStream.partitionBy.rst","source/reference/api/pyspark.streaming.DStream.persist.rst","source/reference/api/pyspark.streaming.DStream.pprint.rst","source/reference/api/pyspark.streaming.DStream.reduce.rst","source/reference/api/pyspark.streaming.DStream.reduceByKey.rst","source/reference/api/pyspark.streaming.DStream.reduceByKeyAndWindow.rst","source/reference/api/pyspark.streaming.DStream.reduceByWindow.rst","source/reference/api/pyspark.streaming.DStream.repartition.rst","source/reference/api/pyspark.streaming.DStream.rightOuterJoin.rst","source/reference/api/pyspark.streaming.DStream.saveAsTextFiles.rst","source/reference/api/pyspark.streaming.DStream.slice.rst","source/reference/api/pyspark.streaming.DStream.transform.rst","source/reference/api/pyspark.streaming.DStream.transformWith.rst","source/reference/api/pyspark.streaming.DStream.union.rst","source/reference/api/pyspark.streaming.DStream.updateStateByKey.rst","source/reference/api/pyspark.streaming.DStream.window.rst","source/reference/api/pyspark.streaming.StreamingContext.rst","source/reference/api/pyspark.streaming.StreamingContext.addStreamingListener.rst","source/reference/api/pyspark.streaming.StreamingContext.awaitTermination.rst","source/reference/api/pyspark.streaming.StreamingContext.awaitTerminationOrTimeout.rst","source/reference/api/pyspark.streaming.StreamingContext.binaryRecordsStream.rst","source/reference/api/pyspark.streaming.StreamingContext.checkpoint.rst","source/reference/api/pyspark.streaming.StreamingContext.getActive.rst","source/reference/api/pyspark.streaming.StreamingContext.getActiveOrCreate.rst","source/reference/api/pyspark.streaming.StreamingContext.getOrCreate.rst","source/reference/api/pyspark.streaming.StreamingContext.queueStream.rst","source/reference/api/pyspark.streaming.StreamingContext.remember.rst","source/reference/api/pyspark.streaming.StreamingContext.socketTextStream.rst","source/reference/api/pyspark.streaming.StreamingContext.sparkContext.rst","source/reference/api/pyspark.streaming.StreamingContext.start.rst","source/reference/api/pyspark.streaming.StreamingContext.stop.rst","source/reference/api/pyspark.streaming.StreamingContext.textFileStream.rst","source/reference/api/pyspark.streaming.StreamingContext.transform.rst","source/reference/api/pyspark.streaming.StreamingContext.union.rst","source/reference/api/pyspark.streaming.kinesis.InitialPositionInStream.LATEST.rst","source/reference/api/pyspark.streaming.kinesis.InitialPositionInStream.TRIM_HORIZON.rst","source/reference/api/pyspark.streaming.kinesis.KinesisUtils.createStream.rst"],objects:{"":{pyspark:[1,0,0,"-"]},"pyspark.Accumulator":{__init__:[7,2,1,""],add:[8,2,1,""],value:[9,2,1,""]},"pyspark.AccumulatorParam":{addInPlace:[1,2,1,""],zero:[1,2,1,""]},"pyspark.BarrierTaskContext":{__init__:[10,2,1,""],allGather:[11,2,1,""],attemptNumber:[12,2,1,""],barrier:[13,2,1,""],get:[14,2,1,""],getLocalProperty:[15,2,1,""],getTaskInfos:[16,2,1,""],partitionId:[17,2,1,""],resources:[18,2,1,""],stageId:[19,2,1,""],taskAttemptId:[20,2,1,""]},"pyspark.BarrierTaskInfo":{__init__:[21,2,1,""]},"pyspark.BasicProfiler":{profile:[1,2,1,""],stats:[1,2,1,""]},"pyspark.Broadcast":{__init__:[22,2,1,""],destroy:[23,2,1,""],dump:[24,2,1,""],load:[25,2,1,""],load_from_path:[26,2,1,""],unpersist:[27,2,1,""],value:[28,2,1,""]},"pyspark.MarshalSerializer":{dumps:[1,2,1,""],loads:[1,2,1,""]},"pyspark.PickleSerializer":{dumps:[1,2,1,""],loads:[1,2,1,""]},"pyspark.Profiler":{dump:[1,2,1,""],profile:[1,2,1,""],show:[1,2,1,""],stats:[1,2,1,""]},"pyspark.RDD":{__init__:[29,2,1,""],aggregate:[30,2,1,""],aggregateByKey:[31,2,1,""],barrier:[32,2,1,""],cache:[33,2,1,""],cartesian:[34,2,1,""],checkpoint:[35,2,1,""],coalesce:[36,2,1,""],cogroup:[37,2,1,""],collect:[38,2,1,""],collectAsMap:[39,2,1,""],collectWithJobGroup:[40,2,1,""],combineByKey:[41,2,1,""],context:[42,2,1,""],count:[43,2,1,""],countApprox:[44,2,1,""],countApproxDistinct:[45,2,1,""],countByKey:[46,2,1,""],countByValue:[47,2,1,""],distinct:[48,2,1,""],filter:[49,2,1,""],first:[50,2,1,""],flatMap:[51,2,1,""],flatMapValues:[52,2,1,""],fold:[53,2,1,""],foldByKey:[54,2,1,""],foreach:[55,2,1,""],foreachPartition:[56,2,1,""],fullOuterJoin:[57,2,1,""],getCheckpointFile:[58,2,1,""],getNumPartitions:[59,2,1,""],getStorageLevel:[61,2,1,""],glom:[62,2,1,""],groupBy:[63,2,1,""],groupByKey:[64,2,1,""],groupWith:[65,2,1,""],histogram:[66,2,1,""],id:[67,2,1,""],intersection:[68,2,1,""],isCheckpointed:[69,2,1,""],isEmpty:[70,2,1,""],isLocallyCheckpointed:[71,2,1,""],join:[72,2,1,""],keyBy:[73,2,1,""],keys:[74,2,1,""],leftOuterJoin:[75,2,1,""],localCheckpoint:[76,2,1,""],lookup:[77,2,1,""],map:[78,2,1,""],mapPartitions:[79,2,1,""],mapPartitionsWithIndex:[80,2,1,""],mapPartitionsWithSplit:[81,2,1,""],mapValues:[82,2,1,""],max:[83,2,1,""],mean:[84,2,1,""],meanApprox:[85,2,1,""],min:[86,2,1,""],name:[87,2,1,""],partitionBy:[88,2,1,""],persist:[89,2,1,""],pipe:[90,2,1,""],randomSplit:[91,2,1,""],reduce:[92,2,1,""],reduceByKey:[93,2,1,""],reduceByKeyLocally:[94,2,1,""],repartition:[95,2,1,""],repartitionAndSortWithinPartitions:[96,2,1,""],rightOuterJoin:[97,2,1,""],sample:[98,2,1,""],sampleByKey:[99,2,1,""],sampleStdev:[100,2,1,""],sampleVariance:[101,2,1,""],saveAsHadoopDataset:[102,2,1,""],saveAsHadoopFile:[103,2,1,""],saveAsNewAPIHadoopDataset:[104,2,1,""],saveAsNewAPIHadoopFile:[105,2,1,""],saveAsPickleFile:[106,2,1,""],saveAsSequenceFile:[107,2,1,""],saveAsTextFile:[108,2,1,""],setName:[109,2,1,""],sortBy:[110,2,1,""],sortByKey:[111,2,1,""],stats:[112,2,1,""],stdev:[113,2,1,""],subtract:[114,2,1,""],subtractByKey:[115,2,1,""],sum:[116,2,1,""],sumApprox:[117,2,1,""],take:[118,2,1,""],takeOrdered:[119,2,1,""],takeSample:[120,2,1,""],toDebugString:[121,2,1,""],toLocalIterator:[122,2,1,""],top:[123,2,1,""],treeAggregate:[124,2,1,""],treeReduce:[125,2,1,""],union:[126,2,1,""],unpersist:[127,2,1,""],values:[128,2,1,""],variance:[129,2,1,""],zip:[131,2,1,""],zipWithIndex:[132,2,1,""],zipWithUniqueId:[133,2,1,""]},"pyspark.RDDBarrier":{__init__:[134,2,1,""],mapPartitions:[135,2,1,""],mapPartitionsWithIndex:[136,2,1,""]},"pyspark.SparkConf":{__init__:[137,2,1,""],contains:[138,2,1,""],get:[139,2,1,""],getAll:[140,2,1,""],set:[141,2,1,""],setAll:[142,2,1,""],setAppName:[143,2,1,""],setExecutorEnv:[144,2,1,""],setIfMissing:[145,2,1,""],setMaster:[146,2,1,""],setSparkHome:[147,2,1,""],toDebugString:[148,2,1,""]},"pyspark.SparkContext":{PACKAGE_EXTENSIONS:[150,3,1,""],__init__:[149,2,1,""],accumulator:[151,2,1,""],addFile:[152,2,1,""],addPyFile:[153,2,1,""],applicationId:[154,2,1,""],binaryFiles:[155,2,1,""],binaryRecords:[156,2,1,""],broadcast:[157,2,1,""],cancelAllJobs:[158,2,1,""],cancelJobGroup:[159,2,1,""],defaultMinPartitions:[160,2,1,""],defaultParallelism:[161,2,1,""],dump_profiles:[162,2,1,""],emptyRDD:[163,2,1,""],getConf:[164,2,1,""],getLocalProperty:[165,2,1,""],getOrCreate:[166,2,1,""],hadoopFile:[167,2,1,""],hadoopRDD:[168,2,1,""],newAPIHadoopFile:[169,2,1,""],newAPIHadoopRDD:[170,2,1,""],parallelize:[171,2,1,""],pickleFile:[172,2,1,""],range:[173,2,1,""],resources:[174,2,1,""],runJob:[175,2,1,""],sequenceFile:[176,2,1,""],setCheckpointDir:[177,2,1,""],setJobDescription:[178,2,1,""],setJobGroup:[179,2,1,""],setLocalProperty:[180,2,1,""],setLogLevel:[181,2,1,""],setSystemProperty:[182,2,1,""],show_profiles:[183,2,1,""],sparkUser:[184,2,1,""],startTime:[185,2,1,""],statusTracker:[186,2,1,""],stop:[187,2,1,""],textFile:[188,2,1,""],uiWebUrl:[189,2,1,""],union:[190,2,1,""],version:[191,2,1,""],wholeTextFiles:[192,2,1,""]},"pyspark.SparkFiles":{__init__:[193,2,1,""],get:[194,2,1,""],getRootDirectory:[195,2,1,""]},"pyspark.StatusTracker":{getActiveJobsIds:[1,2,1,""],getActiveStageIds:[1,2,1,""],getJobIdsForGroup:[1,2,1,""],getJobInfo:[1,2,1,""],getStageInfo:[1,2,1,""]},"pyspark.StorageLevel":{DISK_ONLY:[197,3,1,""],DISK_ONLY_2:[198,3,1,""],MEMORY_AND_DISK:[200,3,1,""],MEMORY_AND_DISK_2:[201,3,1,""],MEMORY_ONLY:[202,3,1,""],MEMORY_ONLY_2:[203,3,1,""],OFF_HEAP:[204,3,1,""],__init__:[196,2,1,""]},"pyspark.TaskContext":{__init__:[205,2,1,""],attemptNumber:[206,2,1,""],get:[207,2,1,""],getLocalProperty:[208,2,1,""],partitionId:[209,2,1,""],resources:[210,2,1,""],stageId:[211,2,1,""],taskAttemptId:[212,2,1,""]},"pyspark.ml":{Estimator:[213,1,1,""],Model:[214,1,1,""],Pipeline:[215,1,1,""],PipelineModel:[216,1,1,""],Transformer:[219,1,1,""],UnaryTransformer:[220,1,1,""],classification:[2,0,0,"-"],clustering:[2,0,0,"-"],evaluation:[2,0,0,"-"],feature:[2,0,0,"-"],fpm:[2,0,0,"-"],functions:[2,0,0,"-"],image:[2,0,0,"-"],linalg:[2,0,0,"-"],param:[2,0,0,"-"],recommendation:[2,0,0,"-"],regression:[2,0,0,"-"],stat:[2,0,0,"-"],tuning:[2,0,0,"-"],util:[2,0,0,"-"]},"pyspark.ml.Estimator":{clear:[213,2,1,""],copy:[213,2,1,""],explainParam:[213,2,1,""],explainParams:[213,2,1,""],extractParamMap:[213,2,1,""],fit:[213,2,1,""],fitMultiple:[213,2,1,""],getOrDefault:[213,2,1,""],getParam:[213,2,1,""],hasDefault:[213,2,1,""],hasParam:[213,2,1,""],isDefined:[213,2,1,""],isSet:[213,2,1,""],params:[213,3,1,""],set:[213,2,1,""]},"pyspark.ml.Model":{clear:[214,2,1,""],copy:[214,2,1,""],explainParam:[214,2,1,""],explainParams:[214,2,1,""],extractParamMap:[214,2,1,""],getOrDefault:[214,2,1,""],getParam:[214,2,1,""],hasDefault:[214,2,1,""],hasParam:[214,2,1,""],isDefined:[214,2,1,""],isSet:[214,2,1,""],params:[214,3,1,""],set:[214,2,1,""],transform:[214,2,1,""]},"pyspark.ml.Pipeline":{clear:[215,2,1,""],copy:[215,2,1,""],explainParam:[215,2,1,""],explainParams:[215,2,1,""],extractParamMap:[215,2,1,""],fit:[215,2,1,""],fitMultiple:[215,2,1,""],getOrDefault:[215,2,1,""],getParam:[215,2,1,""],getStages:[215,2,1,""],hasDefault:[215,2,1,""],hasParam:[215,2,1,""],isDefined:[215,2,1,""],isSet:[215,2,1,""],load:[215,2,1,""],params:[215,3,1,""],read:[215,2,1,""],save:[215,2,1,""],set:[215,2,1,""],setParams:[215,2,1,""],setStages:[215,2,1,""],stages:[215,3,1,""],write:[215,2,1,""]},"pyspark.ml.PipelineModel":{clear:[216,2,1,""],copy:[216,2,1,""],explainParam:[216,2,1,""],explainParams:[216,2,1,""],extractParamMap:[216,2,1,""],getOrDefault:[216,2,1,""],getParam:[216,2,1,""],hasDefault:[216,2,1,""],hasParam:[216,2,1,""],isDefined:[216,2,1,""],isSet:[216,2,1,""],load:[216,2,1,""],params:[216,3,1,""],read:[216,2,1,""],save:[216,2,1,""],set:[216,2,1,""],transform:[216,2,1,""],write:[216,2,1,""]},"pyspark.ml.Transformer":{clear:[219,2,1,""],copy:[219,2,1,""],explainParam:[219,2,1,""],explainParams:[219,2,1,""],extractParamMap:[219,2,1,""],getOrDefault:[219,2,1,""],getParam:[219,2,1,""],hasDefault:[219,2,1,""],hasParam:[219,2,1,""],isDefined:[219,2,1,""],isSet:[219,2,1,""],params:[219,3,1,""],set:[219,2,1,""],transform:[219,2,1,""]},"pyspark.ml.UnaryTransformer":{clear:[220,2,1,""],copy:[220,2,1,""],createTransformFunc:[220,2,1,""],explainParam:[220,2,1,""],explainParams:[220,2,1,""],extractParamMap:[220,2,1,""],getInputCol:[220,2,1,""],getOrDefault:[220,2,1,""],getOutputCol:[220,2,1,""],getParam:[220,2,1,""],hasDefault:[220,2,1,""],hasParam:[220,2,1,""],inputCol:[220,3,1,""],isDefined:[220,2,1,""],isSet:[220,2,1,""],outputCol:[220,3,1,""],outputDataType:[220,2,1,""],params:[220,3,1,""],set:[220,2,1,""],setInputCol:[220,2,1,""],setOutputCol:[220,2,1,""],transform:[220,2,1,""],transformSchema:[220,2,1,""],validateInputType:[220,2,1,""]},"pyspark.ml.classification":{BinaryLogisticRegressionSummary:[221,1,1,""],BinaryLogisticRegressionTrainingSummary:[222,1,1,""],DecisionTreeClassificationModel:[225,1,1,""],DecisionTreeClassifier:[226,1,1,""],FMClassificationModel:[227,1,1,""],FMClassifier:[230,1,1,""],GBTClassificationModel:[231,1,1,""],GBTClassifier:[232,1,1,""],LinearSVC:[233,1,1,""],LinearSVCModel:[234,1,1,""],LogisticRegression:[237,1,1,""],LogisticRegressionModel:[238,1,1,""],LogisticRegressionSummary:[239,1,1,""],LogisticRegressionTrainingSummary:[240,1,1,""],MultilayerPerceptronClassificationModel:[241,1,1,""],MultilayerPerceptronClassifier:[244,1,1,""],NaiveBayes:[245,1,1,""],NaiveBayesModel:[246,1,1,""],OneVsRest:[247,1,1,""],OneVsRestModel:[248,1,1,""],RandomForestClassificationModel:[249,1,1,""],RandomForestClassifier:[252,1,1,""]},"pyspark.ml.classification.BinaryLogisticRegressionSummary":{accuracy:[221,3,1,""],areaUnderROC:[221,3,1,""],fMeasureByLabel:[221,2,1,""],fMeasureByThreshold:[221,3,1,""],falsePositiveRateByLabel:[221,3,1,""],featuresCol:[221,3,1,""],labelCol:[221,3,1,""],labels:[221,3,1,""],pr:[221,3,1,""],precisionByLabel:[221,3,1,""],precisionByThreshold:[221,3,1,""],predictionCol:[221,3,1,""],predictions:[221,3,1,""],probabilityCol:[221,3,1,""],recallByLabel:[221,3,1,""],recallByThreshold:[221,3,1,""],roc:[221,3,1,""],truePositiveRateByLabel:[221,3,1,""],weightedFMeasure:[221,2,1,""],weightedFalsePositiveRate:[221,3,1,""],weightedPrecision:[221,3,1,""],weightedRecall:[221,3,1,""],weightedTruePositiveRate:[221,3,1,""]},"pyspark.ml.classification.BinaryLogisticRegressionTrainingSummary":{accuracy:[222,3,1,""],areaUnderROC:[222,3,1,""],fMeasureByLabel:[222,2,1,""],fMeasureByThreshold:[222,3,1,""],falsePositiveRateByLabel:[222,3,1,""],featuresCol:[222,3,1,""],labelCol:[222,3,1,""],labels:[222,3,1,""],objectiveHistory:[222,3,1,""],pr:[222,3,1,""],precisionByLabel:[222,3,1,""],precisionByThreshold:[222,3,1,""],predictionCol:[222,3,1,""],predictions:[222,3,1,""],probabilityCol:[222,3,1,""],recallByLabel:[222,3,1,""],recallByThreshold:[222,3,1,""],roc:[222,3,1,""],totalIterations:[222,3,1,""],truePositiveRateByLabel:[222,3,1,""],weightedFMeasure:[222,2,1,""],weightedFalsePositiveRate:[222,3,1,""],weightedPrecision:[222,3,1,""],weightedRecall:[222,3,1,""],weightedTruePositiveRate:[222,3,1,""]},"pyspark.ml.classification.DecisionTreeClassificationModel":{cacheNodeIds:[225,3,1,""],checkpointInterval:[225,3,1,""],clear:[225,2,1,""],copy:[225,2,1,""],depth:[225,3,1,""],explainParam:[225,2,1,""],explainParams:[225,2,1,""],extractParamMap:[225,2,1,""],featureImportances:[225,3,1,""],featuresCol:[225,3,1,""],getCacheNodeIds:[225,2,1,""],getCheckpointInterval:[225,2,1,""],getFeaturesCol:[225,2,1,""],getImpurity:[225,2,1,""],getLabelCol:[225,2,1,""],getLeafCol:[225,2,1,""],getMaxBins:[225,2,1,""],getMaxDepth:[225,2,1,""],getMaxMemoryInMB:[225,2,1,""],getMinInfoGain:[225,2,1,""],getMinInstancesPerNode:[225,2,1,""],getMinWeightFractionPerNode:[225,2,1,""],getOrDefault:[225,2,1,""],getParam:[225,2,1,""],getPredictionCol:[225,2,1,""],getProbabilityCol:[225,2,1,""],getRawPredictionCol:[225,2,1,""],getSeed:[225,2,1,""],getThresholds:[225,2,1,""],getWeightCol:[225,2,1,""],hasDefault:[225,2,1,""],hasParam:[225,2,1,""],impurity:[225,3,1,""],isDefined:[225,2,1,""],isSet:[225,2,1,""],labelCol:[225,3,1,""],leafCol:[225,3,1,""],load:[225,2,1,""],maxBins:[225,3,1,""],maxDepth:[225,3,1,""],maxMemoryInMB:[225,3,1,""],minInfoGain:[225,3,1,""],minInstancesPerNode:[225,3,1,""],minWeightFractionPerNode:[225,3,1,""],numClasses:[225,3,1,""],numFeatures:[225,3,1,""],numNodes:[225,3,1,""],params:[225,3,1,""],predict:[225,2,1,""],predictLeaf:[225,2,1,""],predictProbability:[225,2,1,""],predictRaw:[225,2,1,""],predictionCol:[225,3,1,""],probabilityCol:[225,3,1,""],rawPredictionCol:[225,3,1,""],read:[225,2,1,""],save:[225,2,1,""],seed:[225,3,1,""],set:[225,2,1,""],setFeaturesCol:[225,2,1,""],setLeafCol:[225,2,1,""],setPredictionCol:[225,2,1,""],setProbabilityCol:[225,2,1,""],setRawPredictionCol:[225,2,1,""],setThresholds:[225,2,1,""],supportedImpurities:[225,3,1,""],thresholds:[225,3,1,""],toDebugString:[225,3,1,""],transform:[225,2,1,""],weightCol:[225,3,1,""],write:[225,2,1,""]},"pyspark.ml.classification.DecisionTreeClassifier":{cacheNodeIds:[226,3,1,""],checkpointInterval:[226,3,1,""],clear:[226,2,1,""],copy:[226,2,1,""],explainParam:[226,2,1,""],explainParams:[226,2,1,""],extractParamMap:[226,2,1,""],featuresCol:[226,3,1,""],fit:[226,2,1,""],fitMultiple:[226,2,1,""],getCacheNodeIds:[226,2,1,""],getCheckpointInterval:[226,2,1,""],getFeaturesCol:[226,2,1,""],getImpurity:[226,2,1,""],getLabelCol:[226,2,1,""],getLeafCol:[226,2,1,""],getMaxBins:[226,2,1,""],getMaxDepth:[226,2,1,""],getMaxMemoryInMB:[226,2,1,""],getMinInfoGain:[226,2,1,""],getMinInstancesPerNode:[226,2,1,""],getMinWeightFractionPerNode:[226,2,1,""],getOrDefault:[226,2,1,""],getParam:[226,2,1,""],getPredictionCol:[226,2,1,""],getProbabilityCol:[226,2,1,""],getRawPredictionCol:[226,2,1,""],getSeed:[226,2,1,""],getThresholds:[226,2,1,""],getWeightCol:[226,2,1,""],hasDefault:[226,2,1,""],hasParam:[226,2,1,""],impurity:[226,3,1,""],isDefined:[226,2,1,""],isSet:[226,2,1,""],labelCol:[226,3,1,""],leafCol:[226,3,1,""],load:[226,2,1,""],maxBins:[226,3,1,""],maxDepth:[226,3,1,""],maxMemoryInMB:[226,3,1,""],minInfoGain:[226,3,1,""],minInstancesPerNode:[226,3,1,""],minWeightFractionPerNode:[226,3,1,""],params:[226,3,1,""],predictionCol:[226,3,1,""],probabilityCol:[226,3,1,""],rawPredictionCol:[226,3,1,""],read:[226,2,1,""],save:[226,2,1,""],seed:[226,3,1,""],set:[226,2,1,""],setCacheNodeIds:[226,2,1,""],setCheckpointInterval:[226,2,1,""],setFeaturesCol:[226,2,1,""],setImpurity:[226,2,1,""],setLabelCol:[226,2,1,""],setLeafCol:[226,2,1,""],setMaxBins:[226,2,1,""],setMaxDepth:[226,2,1,""],setMaxMemoryInMB:[226,2,1,""],setMinInfoGain:[226,2,1,""],setMinInstancesPerNode:[226,2,1,""],setMinWeightFractionPerNode:[226,2,1,""],setParams:[226,2,1,""],setPredictionCol:[226,2,1,""],setProbabilityCol:[226,2,1,""],setRawPredictionCol:[226,2,1,""],setSeed:[226,2,1,""],setThresholds:[226,2,1,""],setWeightCol:[226,2,1,""],supportedImpurities:[226,3,1,""],thresholds:[226,3,1,""],weightCol:[226,3,1,""],write:[226,2,1,""]},"pyspark.ml.classification.FMClassificationModel":{clear:[227,2,1,""],copy:[227,2,1,""],explainParam:[227,2,1,""],explainParams:[227,2,1,""],extractParamMap:[227,2,1,""],factorSize:[227,3,1,""],factors:[227,3,1,""],featuresCol:[227,3,1,""],fitIntercept:[227,3,1,""],fitLinear:[227,3,1,""],getFactorSize:[227,2,1,""],getFeaturesCol:[227,2,1,""],getFitIntercept:[227,2,1,""],getFitLinear:[227,2,1,""],getInitStd:[227,2,1,""],getLabelCol:[227,2,1,""],getMaxIter:[227,2,1,""],getMiniBatchFraction:[227,2,1,""],getOrDefault:[227,2,1,""],getParam:[227,2,1,""],getPredictionCol:[227,2,1,""],getProbabilityCol:[227,2,1,""],getRawPredictionCol:[227,2,1,""],getRegParam:[227,2,1,""],getSeed:[227,2,1,""],getSolver:[227,2,1,""],getStepSize:[227,2,1,""],getThresholds:[227,2,1,""],getTol:[227,2,1,""],hasDefault:[227,2,1,""],hasParam:[227,2,1,""],initStd:[227,3,1,""],intercept:[227,3,1,""],isDefined:[227,2,1,""],isSet:[227,2,1,""],labelCol:[227,3,1,""],linear:[227,3,1,""],load:[227,2,1,""],maxIter:[227,3,1,""],miniBatchFraction:[227,3,1,""],numClasses:[227,3,1,""],numFeatures:[227,3,1,""],params:[227,3,1,""],predict:[227,2,1,""],predictProbability:[227,2,1,""],predictRaw:[227,2,1,""],predictionCol:[227,3,1,""],probabilityCol:[227,3,1,""],rawPredictionCol:[227,3,1,""],read:[227,2,1,""],regParam:[227,3,1,""],save:[227,2,1,""],seed:[227,3,1,""],set:[227,2,1,""],setFeaturesCol:[227,2,1,""],setPredictionCol:[227,2,1,""],setProbabilityCol:[227,2,1,""],setRawPredictionCol:[227,2,1,""],setThresholds:[227,2,1,""],solver:[227,3,1,""],stepSize:[227,3,1,""],thresholds:[227,3,1,""],tol:[227,3,1,""],transform:[227,2,1,""],write:[227,2,1,""]},"pyspark.ml.classification.FMClassifier":{clear:[230,2,1,""],copy:[230,2,1,""],explainParam:[230,2,1,""],explainParams:[230,2,1,""],extractParamMap:[230,2,1,""],factorSize:[230,3,1,""],featuresCol:[230,3,1,""],fit:[230,2,1,""],fitIntercept:[230,3,1,""],fitLinear:[230,3,1,""],fitMultiple:[230,2,1,""],getFactorSize:[230,2,1,""],getFeaturesCol:[230,2,1,""],getFitIntercept:[230,2,1,""],getFitLinear:[230,2,1,""],getInitStd:[230,2,1,""],getLabelCol:[230,2,1,""],getMaxIter:[230,2,1,""],getMiniBatchFraction:[230,2,1,""],getOrDefault:[230,2,1,""],getParam:[230,2,1,""],getPredictionCol:[230,2,1,""],getProbabilityCol:[230,2,1,""],getRawPredictionCol:[230,2,1,""],getRegParam:[230,2,1,""],getSeed:[230,2,1,""],getSolver:[230,2,1,""],getStepSize:[230,2,1,""],getThresholds:[230,2,1,""],getTol:[230,2,1,""],hasDefault:[230,2,1,""],hasParam:[230,2,1,""],initStd:[230,3,1,""],isDefined:[230,2,1,""],isSet:[230,2,1,""],labelCol:[230,3,1,""],load:[230,2,1,""],maxIter:[230,3,1,""],miniBatchFraction:[230,3,1,""],params:[230,3,1,""],predictionCol:[230,3,1,""],probabilityCol:[230,3,1,""],rawPredictionCol:[230,3,1,""],read:[230,2,1,""],regParam:[230,3,1,""],save:[230,2,1,""],seed:[230,3,1,""],set:[230,2,1,""],setFactorSize:[230,2,1,""],setFeaturesCol:[230,2,1,""],setFitIntercept:[230,2,1,""],setFitLinear:[230,2,1,""],setInitStd:[230,2,1,""],setLabelCol:[230,2,1,""],setMaxIter:[230,2,1,""],setMiniBatchFraction:[230,2,1,""],setParams:[230,2,1,""],setPredictionCol:[230,2,1,""],setProbabilityCol:[230,2,1,""],setRawPredictionCol:[230,2,1,""],setRegParam:[230,2,1,""],setSeed:[230,2,1,""],setSolver:[230,2,1,""],setStepSize:[230,2,1,""],setThresholds:[230,2,1,""],setTol:[230,2,1,""],solver:[230,3,1,""],stepSize:[230,3,1,""],thresholds:[230,3,1,""],tol:[230,3,1,""],write:[230,2,1,""]},"pyspark.ml.classification.GBTClassificationModel":{cacheNodeIds:[231,3,1,""],checkpointInterval:[231,3,1,""],clear:[231,2,1,""],copy:[231,2,1,""],evaluateEachIteration:[231,2,1,""],explainParam:[231,2,1,""],explainParams:[231,2,1,""],extractParamMap:[231,2,1,""],featureImportances:[231,3,1,""],featureSubsetStrategy:[231,3,1,""],featuresCol:[231,3,1,""],getCacheNodeIds:[231,2,1,""],getCheckpointInterval:[231,2,1,""],getFeatureSubsetStrategy:[231,2,1,""],getFeaturesCol:[231,2,1,""],getImpurity:[231,2,1,""],getLabelCol:[231,2,1,""],getLeafCol:[231,2,1,""],getLossType:[231,2,1,""],getMaxBins:[231,2,1,""],getMaxDepth:[231,2,1,""],getMaxIter:[231,2,1,""],getMaxMemoryInMB:[231,2,1,""],getMinInfoGain:[231,2,1,""],getMinInstancesPerNode:[231,2,1,""],getMinWeightFractionPerNode:[231,2,1,""],getNumTrees:[231,3,1,""],getOrDefault:[231,2,1,""],getParam:[231,2,1,""],getPredictionCol:[231,2,1,""],getProbabilityCol:[231,2,1,""],getRawPredictionCol:[231,2,1,""],getSeed:[231,2,1,""],getStepSize:[231,2,1,""],getSubsamplingRate:[231,2,1,""],getThresholds:[231,2,1,""],getValidationIndicatorCol:[231,2,1,""],getValidationTol:[231,2,1,""],getWeightCol:[231,2,1,""],hasDefault:[231,2,1,""],hasParam:[231,2,1,""],impurity:[231,3,1,""],isDefined:[231,2,1,""],isSet:[231,2,1,""],labelCol:[231,3,1,""],leafCol:[231,3,1,""],load:[231,2,1,""],lossType:[231,3,1,""],maxBins:[231,3,1,""],maxDepth:[231,3,1,""],maxIter:[231,3,1,""],maxMemoryInMB:[231,3,1,""],minInfoGain:[231,3,1,""],minInstancesPerNode:[231,3,1,""],minWeightFractionPerNode:[231,3,1,""],numClasses:[231,3,1,""],numFeatures:[231,3,1,""],params:[231,3,1,""],predict:[231,2,1,""],predictLeaf:[231,2,1,""],predictProbability:[231,2,1,""],predictRaw:[231,2,1,""],predictionCol:[231,3,1,""],probabilityCol:[231,3,1,""],rawPredictionCol:[231,3,1,""],read:[231,2,1,""],save:[231,2,1,""],seed:[231,3,1,""],set:[231,2,1,""],setFeaturesCol:[231,2,1,""],setLeafCol:[231,2,1,""],setPredictionCol:[231,2,1,""],setProbabilityCol:[231,2,1,""],setRawPredictionCol:[231,2,1,""],setThresholds:[231,2,1,""],stepSize:[231,3,1,""],subsamplingRate:[231,3,1,""],supportedFeatureSubsetStrategies:[231,3,1,""],supportedImpurities:[231,3,1,""],supportedLossTypes:[231,3,1,""],thresholds:[231,3,1,""],toDebugString:[231,3,1,""],totalNumNodes:[231,3,1,""],transform:[231,2,1,""],treeWeights:[231,3,1,""],trees:[231,3,1,""],validationIndicatorCol:[231,3,1,""],validationTol:[231,3,1,""],weightCol:[231,3,1,""],write:[231,2,1,""]},"pyspark.ml.classification.GBTClassifier":{cacheNodeIds:[232,3,1,""],checkpointInterval:[232,3,1,""],clear:[232,2,1,""],copy:[232,2,1,""],explainParam:[232,2,1,""],explainParams:[232,2,1,""],extractParamMap:[232,2,1,""],featureSubsetStrategy:[232,3,1,""],featuresCol:[232,3,1,""],fit:[232,2,1,""],fitMultiple:[232,2,1,""],getCacheNodeIds:[232,2,1,""],getCheckpointInterval:[232,2,1,""],getFeatureSubsetStrategy:[232,2,1,""],getFeaturesCol:[232,2,1,""],getImpurity:[232,2,1,""],getLabelCol:[232,2,1,""],getLeafCol:[232,2,1,""],getLossType:[232,2,1,""],getMaxBins:[232,2,1,""],getMaxDepth:[232,2,1,""],getMaxIter:[232,2,1,""],getMaxMemoryInMB:[232,2,1,""],getMinInfoGain:[232,2,1,""],getMinInstancesPerNode:[232,2,1,""],getMinWeightFractionPerNode:[232,2,1,""],getOrDefault:[232,2,1,""],getParam:[232,2,1,""],getPredictionCol:[232,2,1,""],getProbabilityCol:[232,2,1,""],getRawPredictionCol:[232,2,1,""],getSeed:[232,2,1,""],getStepSize:[232,2,1,""],getSubsamplingRate:[232,2,1,""],getThresholds:[232,2,1,""],getValidationIndicatorCol:[232,2,1,""],getValidationTol:[232,2,1,""],getWeightCol:[232,2,1,""],hasDefault:[232,2,1,""],hasParam:[232,2,1,""],impurity:[232,3,1,""],isDefined:[232,2,1,""],isSet:[232,2,1,""],labelCol:[232,3,1,""],leafCol:[232,3,1,""],load:[232,2,1,""],lossType:[232,3,1,""],maxBins:[232,3,1,""],maxDepth:[232,3,1,""],maxIter:[232,3,1,""],maxMemoryInMB:[232,3,1,""],minInfoGain:[232,3,1,""],minInstancesPerNode:[232,3,1,""],minWeightFractionPerNode:[232,3,1,""],params:[232,3,1,""],predictionCol:[232,3,1,""],probabilityCol:[232,3,1,""],rawPredictionCol:[232,3,1,""],read:[232,2,1,""],save:[232,2,1,""],seed:[232,3,1,""],set:[232,2,1,""],setCacheNodeIds:[232,2,1,""],setCheckpointInterval:[232,2,1,""],setFeatureSubsetStrategy:[232,2,1,""],setFeaturesCol:[232,2,1,""],setImpurity:[232,2,1,""],setLabelCol:[232,2,1,""],setLeafCol:[232,2,1,""],setLossType:[232,2,1,""],setMaxBins:[232,2,1,""],setMaxDepth:[232,2,1,""],setMaxIter:[232,2,1,""],setMaxMemoryInMB:[232,2,1,""],setMinInfoGain:[232,2,1,""],setMinInstancesPerNode:[232,2,1,""],setMinWeightFractionPerNode:[232,2,1,""],setParams:[232,2,1,""],setPredictionCol:[232,2,1,""],setProbabilityCol:[232,2,1,""],setRawPredictionCol:[232,2,1,""],setSeed:[232,2,1,""],setStepSize:[232,2,1,""],setSubsamplingRate:[232,2,1,""],setThresholds:[232,2,1,""],setValidationIndicatorCol:[232,2,1,""],setWeightCol:[232,2,1,""],stepSize:[232,3,1,""],subsamplingRate:[232,3,1,""],supportedFeatureSubsetStrategies:[232,3,1,""],supportedImpurities:[232,3,1,""],supportedLossTypes:[232,3,1,""],thresholds:[232,3,1,""],validationIndicatorCol:[232,3,1,""],validationTol:[232,3,1,""],weightCol:[232,3,1,""],write:[232,2,1,""]},"pyspark.ml.classification.LinearSVC":{aggregationDepth:[233,3,1,""],clear:[233,2,1,""],copy:[233,2,1,""],explainParam:[233,2,1,""],explainParams:[233,2,1,""],extractParamMap:[233,2,1,""],featuresCol:[233,3,1,""],fit:[233,2,1,""],fitIntercept:[233,3,1,""],fitMultiple:[233,2,1,""],getAggregationDepth:[233,2,1,""],getFeaturesCol:[233,2,1,""],getFitIntercept:[233,2,1,""],getLabelCol:[233,2,1,""],getMaxIter:[233,2,1,""],getOrDefault:[233,2,1,""],getParam:[233,2,1,""],getPredictionCol:[233,2,1,""],getRawPredictionCol:[233,2,1,""],getRegParam:[233,2,1,""],getStandardization:[233,2,1,""],getThreshold:[233,2,1,""],getTol:[233,2,1,""],getWeightCol:[233,2,1,""],hasDefault:[233,2,1,""],hasParam:[233,2,1,""],isDefined:[233,2,1,""],isSet:[233,2,1,""],labelCol:[233,3,1,""],load:[233,2,1,""],maxIter:[233,3,1,""],params:[233,3,1,""],predictionCol:[233,3,1,""],rawPredictionCol:[233,3,1,""],read:[233,2,1,""],regParam:[233,3,1,""],save:[233,2,1,""],set:[233,2,1,""],setAggregationDepth:[233,2,1,""],setFeaturesCol:[233,2,1,""],setFitIntercept:[233,2,1,""],setLabelCol:[233,2,1,""],setMaxIter:[233,2,1,""],setParams:[233,2,1,""],setPredictionCol:[233,2,1,""],setRawPredictionCol:[233,2,1,""],setRegParam:[233,2,1,""],setStandardization:[233,2,1,""],setThreshold:[233,2,1,""],setTol:[233,2,1,""],setWeightCol:[233,2,1,""],standardization:[233,3,1,""],threshold:[233,3,1,""],tol:[233,3,1,""],weightCol:[233,3,1,""],write:[233,2,1,""]},"pyspark.ml.classification.LinearSVCModel":{aggregationDepth:[234,3,1,""],clear:[234,2,1,""],coefficients:[234,3,1,""],copy:[234,2,1,""],explainParam:[234,2,1,""],explainParams:[234,2,1,""],extractParamMap:[234,2,1,""],featuresCol:[234,3,1,""],fitIntercept:[234,3,1,""],getAggregationDepth:[234,2,1,""],getFeaturesCol:[234,2,1,""],getFitIntercept:[234,2,1,""],getLabelCol:[234,2,1,""],getMaxIter:[234,2,1,""],getOrDefault:[234,2,1,""],getParam:[234,2,1,""],getPredictionCol:[234,2,1,""],getRawPredictionCol:[234,2,1,""],getRegParam:[234,2,1,""],getStandardization:[234,2,1,""],getThreshold:[234,2,1,""],getTol:[234,2,1,""],getWeightCol:[234,2,1,""],hasDefault:[234,2,1,""],hasParam:[234,2,1,""],intercept:[234,3,1,""],isDefined:[234,2,1,""],isSet:[234,2,1,""],labelCol:[234,3,1,""],load:[234,2,1,""],maxIter:[234,3,1,""],numClasses:[234,3,1,""],numFeatures:[234,3,1,""],params:[234,3,1,""],predict:[234,2,1,""],predictRaw:[234,2,1,""],predictionCol:[234,3,1,""],rawPredictionCol:[234,3,1,""],read:[234,2,1,""],regParam:[234,3,1,""],save:[234,2,1,""],set:[234,2,1,""],setFeaturesCol:[234,2,1,""],setPredictionCol:[234,2,1,""],setRawPredictionCol:[234,2,1,""],setThreshold:[234,2,1,""],standardization:[234,3,1,""],threshold:[234,3,1,""],tol:[234,3,1,""],transform:[234,2,1,""],weightCol:[234,3,1,""],write:[234,2,1,""]},"pyspark.ml.classification.LogisticRegression":{aggregationDepth:[237,3,1,""],clear:[237,2,1,""],copy:[237,2,1,""],elasticNetParam:[237,3,1,""],explainParam:[237,2,1,""],explainParams:[237,2,1,""],extractParamMap:[237,2,1,""],family:[237,3,1,""],featuresCol:[237,3,1,""],fit:[237,2,1,""],fitIntercept:[237,3,1,""],fitMultiple:[237,2,1,""],getAggregationDepth:[237,2,1,""],getElasticNetParam:[237,2,1,""],getFamily:[237,2,1,""],getFeaturesCol:[237,2,1,""],getFitIntercept:[237,2,1,""],getLabelCol:[237,2,1,""],getLowerBoundsOnCoefficients:[237,2,1,""],getLowerBoundsOnIntercepts:[237,2,1,""],getMaxIter:[237,2,1,""],getOrDefault:[237,2,1,""],getParam:[237,2,1,""],getPredictionCol:[237,2,1,""],getProbabilityCol:[237,2,1,""],getRawPredictionCol:[237,2,1,""],getRegParam:[237,2,1,""],getStandardization:[237,2,1,""],getThreshold:[237,2,1,""],getThresholds:[237,2,1,""],getTol:[237,2,1,""],getUpperBoundsOnCoefficients:[237,2,1,""],getUpperBoundsOnIntercepts:[237,2,1,""],getWeightCol:[237,2,1,""],hasDefault:[237,2,1,""],hasParam:[237,2,1,""],isDefined:[237,2,1,""],isSet:[237,2,1,""],labelCol:[237,3,1,""],load:[237,2,1,""],lowerBoundsOnCoefficients:[237,3,1,""],lowerBoundsOnIntercepts:[237,3,1,""],maxIter:[237,3,1,""],params:[237,3,1,""],predictionCol:[237,3,1,""],probabilityCol:[237,3,1,""],rawPredictionCol:[237,3,1,""],read:[237,2,1,""],regParam:[237,3,1,""],save:[237,2,1,""],set:[237,2,1,""],setAggregationDepth:[237,2,1,""],setElasticNetParam:[237,2,1,""],setFamily:[237,2,1,""],setFeaturesCol:[237,2,1,""],setFitIntercept:[237,2,1,""],setLabelCol:[237,2,1,""],setLowerBoundsOnCoefficients:[237,2,1,""],setLowerBoundsOnIntercepts:[237,2,1,""],setMaxIter:[237,2,1,""],setParams:[237,2,1,""],setPredictionCol:[237,2,1,""],setProbabilityCol:[237,2,1,""],setRawPredictionCol:[237,2,1,""],setRegParam:[237,2,1,""],setStandardization:[237,2,1,""],setThreshold:[237,2,1,""],setThresholds:[237,2,1,""],setTol:[237,2,1,""],setUpperBoundsOnCoefficients:[237,2,1,""],setUpperBoundsOnIntercepts:[237,2,1,""],setWeightCol:[237,2,1,""],standardization:[237,3,1,""],threshold:[237,3,1,""],thresholds:[237,3,1,""],tol:[237,3,1,""],upperBoundsOnCoefficients:[237,3,1,""],upperBoundsOnIntercepts:[237,3,1,""],weightCol:[237,3,1,""],write:[237,2,1,""]},"pyspark.ml.classification.LogisticRegressionModel":{aggregationDepth:[238,3,1,""],clear:[238,2,1,""],coefficientMatrix:[238,3,1,""],coefficients:[238,3,1,""],copy:[238,2,1,""],elasticNetParam:[238,3,1,""],evaluate:[238,2,1,""],explainParam:[238,2,1,""],explainParams:[238,2,1,""],extractParamMap:[238,2,1,""],family:[238,3,1,""],featuresCol:[238,3,1,""],fitIntercept:[238,3,1,""],getAggregationDepth:[238,2,1,""],getElasticNetParam:[238,2,1,""],getFamily:[238,2,1,""],getFeaturesCol:[238,2,1,""],getFitIntercept:[238,2,1,""],getLabelCol:[238,2,1,""],getLowerBoundsOnCoefficients:[238,2,1,""],getLowerBoundsOnIntercepts:[238,2,1,""],getMaxIter:[238,2,1,""],getOrDefault:[238,2,1,""],getParam:[238,2,1,""],getPredictionCol:[238,2,1,""],getProbabilityCol:[238,2,1,""],getRawPredictionCol:[238,2,1,""],getRegParam:[238,2,1,""],getStandardization:[238,2,1,""],getThreshold:[238,2,1,""],getThresholds:[238,2,1,""],getTol:[238,2,1,""],getUpperBoundsOnCoefficients:[238,2,1,""],getUpperBoundsOnIntercepts:[238,2,1,""],getWeightCol:[238,2,1,""],hasDefault:[238,2,1,""],hasParam:[238,2,1,""],hasSummary:[238,3,1,""],intercept:[238,3,1,""],interceptVector:[238,3,1,""],isDefined:[238,2,1,""],isSet:[238,2,1,""],labelCol:[238,3,1,""],load:[238,2,1,""],lowerBoundsOnCoefficients:[238,3,1,""],lowerBoundsOnIntercepts:[238,3,1,""],maxIter:[238,3,1,""],numClasses:[238,3,1,""],numFeatures:[238,3,1,""],params:[238,3,1,""],predict:[238,2,1,""],predictProbability:[238,2,1,""],predictRaw:[238,2,1,""],predictionCol:[238,3,1,""],probabilityCol:[238,3,1,""],rawPredictionCol:[238,3,1,""],read:[238,2,1,""],regParam:[238,3,1,""],save:[238,2,1,""],set:[238,2,1,""],setFeaturesCol:[238,2,1,""],setPredictionCol:[238,2,1,""],setProbabilityCol:[238,2,1,""],setRawPredictionCol:[238,2,1,""],setThreshold:[238,2,1,""],setThresholds:[238,2,1,""],standardization:[238,3,1,""],summary:[238,3,1,""],threshold:[238,3,1,""],thresholds:[238,3,1,""],tol:[238,3,1,""],transform:[238,2,1,""],upperBoundsOnCoefficients:[238,3,1,""],upperBoundsOnIntercepts:[238,3,1,""],weightCol:[238,3,1,""],write:[238,2,1,""]},"pyspark.ml.classification.LogisticRegressionSummary":{accuracy:[239,3,1,""],fMeasureByLabel:[239,2,1,""],falsePositiveRateByLabel:[239,3,1,""],featuresCol:[239,3,1,""],labelCol:[239,3,1,""],labels:[239,3,1,""],precisionByLabel:[239,3,1,""],predictionCol:[239,3,1,""],predictions:[239,3,1,""],probabilityCol:[239,3,1,""],recallByLabel:[239,3,1,""],truePositiveRateByLabel:[239,3,1,""],weightedFMeasure:[239,2,1,""],weightedFalsePositiveRate:[239,3,1,""],weightedPrecision:[239,3,1,""],weightedRecall:[239,3,1,""],weightedTruePositiveRate:[239,3,1,""]},"pyspark.ml.classification.LogisticRegressionTrainingSummary":{accuracy:[240,3,1,""],fMeasureByLabel:[240,2,1,""],falsePositiveRateByLabel:[240,3,1,""],featuresCol:[240,3,1,""],labelCol:[240,3,1,""],labels:[240,3,1,""],objectiveHistory:[240,3,1,""],precisionByLabel:[240,3,1,""],predictionCol:[240,3,1,""],predictions:[240,3,1,""],probabilityCol:[240,3,1,""],recallByLabel:[240,3,1,""],totalIterations:[240,3,1,""],truePositiveRateByLabel:[240,3,1,""],weightedFMeasure:[240,2,1,""],weightedFalsePositiveRate:[240,3,1,""],weightedPrecision:[240,3,1,""],weightedRecall:[240,3,1,""],weightedTruePositiveRate:[240,3,1,""]},"pyspark.ml.classification.MultilayerPerceptronClassificationModel":{blockSize:[241,3,1,""],clear:[241,2,1,""],copy:[241,2,1,""],explainParam:[241,2,1,""],explainParams:[241,2,1,""],extractParamMap:[241,2,1,""],featuresCol:[241,3,1,""],getBlockSize:[241,2,1,""],getFeaturesCol:[241,2,1,""],getInitialWeights:[241,2,1,""],getLabelCol:[241,2,1,""],getLayers:[241,2,1,""],getMaxIter:[241,2,1,""],getOrDefault:[241,2,1,""],getParam:[241,2,1,""],getPredictionCol:[241,2,1,""],getProbabilityCol:[241,2,1,""],getRawPredictionCol:[241,2,1,""],getSeed:[241,2,1,""],getSolver:[241,2,1,""],getStepSize:[241,2,1,""],getThresholds:[241,2,1,""],getTol:[241,2,1,""],hasDefault:[241,2,1,""],hasParam:[241,2,1,""],initialWeights:[241,3,1,""],isDefined:[241,2,1,""],isSet:[241,2,1,""],labelCol:[241,3,1,""],layers:[241,3,1,""],load:[241,2,1,""],maxIter:[241,3,1,""],numClasses:[241,3,1,""],numFeatures:[241,3,1,""],params:[241,3,1,""],predict:[241,2,1,""],predictProbability:[241,2,1,""],predictRaw:[241,2,1,""],predictionCol:[241,3,1,""],probabilityCol:[241,3,1,""],rawPredictionCol:[241,3,1,""],read:[241,2,1,""],save:[241,2,1,""],seed:[241,3,1,""],set:[241,2,1,""],setFeaturesCol:[241,2,1,""],setPredictionCol:[241,2,1,""],setProbabilityCol:[241,2,1,""],setRawPredictionCol:[241,2,1,""],setThresholds:[241,2,1,""],solver:[241,3,1,""],stepSize:[241,3,1,""],thresholds:[241,3,1,""],tol:[241,3,1,""],transform:[241,2,1,""],weights:[241,3,1,""],write:[241,2,1,""]},"pyspark.ml.classification.MultilayerPerceptronClassifier":{blockSize:[244,3,1,""],clear:[244,2,1,""],copy:[244,2,1,""],explainParam:[244,2,1,""],explainParams:[244,2,1,""],extractParamMap:[244,2,1,""],featuresCol:[244,3,1,""],fit:[244,2,1,""],fitMultiple:[244,2,1,""],getBlockSize:[244,2,1,""],getFeaturesCol:[244,2,1,""],getInitialWeights:[244,2,1,""],getLabelCol:[244,2,1,""],getLayers:[244,2,1,""],getMaxIter:[244,2,1,""],getOrDefault:[244,2,1,""],getParam:[244,2,1,""],getPredictionCol:[244,2,1,""],getProbabilityCol:[244,2,1,""],getRawPredictionCol:[244,2,1,""],getSeed:[244,2,1,""],getSolver:[244,2,1,""],getStepSize:[244,2,1,""],getThresholds:[244,2,1,""],getTol:[244,2,1,""],hasDefault:[244,2,1,""],hasParam:[244,2,1,""],initialWeights:[244,3,1,""],isDefined:[244,2,1,""],isSet:[244,2,1,""],labelCol:[244,3,1,""],layers:[244,3,1,""],load:[244,2,1,""],maxIter:[244,3,1,""],params:[244,3,1,""],predictionCol:[244,3,1,""],probabilityCol:[244,3,1,""],rawPredictionCol:[244,3,1,""],read:[244,2,1,""],save:[244,2,1,""],seed:[244,3,1,""],set:[244,2,1,""],setBlockSize:[244,2,1,""],setFeaturesCol:[244,2,1,""],setInitialWeights:[244,2,1,""],setLabelCol:[244,2,1,""],setLayers:[244,2,1,""],setMaxIter:[244,2,1,""],setParams:[244,2,1,""],setPredictionCol:[244,2,1,""],setProbabilityCol:[244,2,1,""],setRawPredictionCol:[244,2,1,""],setSeed:[244,2,1,""],setSolver:[244,2,1,""],setStepSize:[244,2,1,""],setThresholds:[244,2,1,""],setTol:[244,2,1,""],solver:[244,3,1,""],stepSize:[244,3,1,""],thresholds:[244,3,1,""],tol:[244,3,1,""],write:[244,2,1,""]},"pyspark.ml.classification.NaiveBayes":{clear:[245,2,1,""],copy:[245,2,1,""],explainParam:[245,2,1,""],explainParams:[245,2,1,""],extractParamMap:[245,2,1,""],featuresCol:[245,3,1,""],fit:[245,2,1,""],fitMultiple:[245,2,1,""],getFeaturesCol:[245,2,1,""],getLabelCol:[245,2,1,""],getModelType:[245,2,1,""],getOrDefault:[245,2,1,""],getParam:[245,2,1,""],getPredictionCol:[245,2,1,""],getProbabilityCol:[245,2,1,""],getRawPredictionCol:[245,2,1,""],getSmoothing:[245,2,1,""],getThresholds:[245,2,1,""],getWeightCol:[245,2,1,""],hasDefault:[245,2,1,""],hasParam:[245,2,1,""],isDefined:[245,2,1,""],isSet:[245,2,1,""],labelCol:[245,3,1,""],load:[245,2,1,""],modelType:[245,3,1,""],params:[245,3,1,""],predictionCol:[245,3,1,""],probabilityCol:[245,3,1,""],rawPredictionCol:[245,3,1,""],read:[245,2,1,""],save:[245,2,1,""],set:[245,2,1,""],setFeaturesCol:[245,2,1,""],setLabelCol:[245,2,1,""],setModelType:[245,2,1,""],setParams:[245,2,1,""],setPredictionCol:[245,2,1,""],setProbabilityCol:[245,2,1,""],setRawPredictionCol:[245,2,1,""],setSmoothing:[245,2,1,""],setThresholds:[245,2,1,""],setWeightCol:[245,2,1,""],smoothing:[245,3,1,""],thresholds:[245,3,1,""],weightCol:[245,3,1,""],write:[245,2,1,""]},"pyspark.ml.classification.NaiveBayesModel":{clear:[246,2,1,""],copy:[246,2,1,""],explainParam:[246,2,1,""],explainParams:[246,2,1,""],extractParamMap:[246,2,1,""],featuresCol:[246,3,1,""],getFeaturesCol:[246,2,1,""],getLabelCol:[246,2,1,""],getModelType:[246,2,1,""],getOrDefault:[246,2,1,""],getParam:[246,2,1,""],getPredictionCol:[246,2,1,""],getProbabilityCol:[246,2,1,""],getRawPredictionCol:[246,2,1,""],getSmoothing:[246,2,1,""],getThresholds:[246,2,1,""],getWeightCol:[246,2,1,""],hasDefault:[246,2,1,""],hasParam:[246,2,1,""],isDefined:[246,2,1,""],isSet:[246,2,1,""],labelCol:[246,3,1,""],load:[246,2,1,""],modelType:[246,3,1,""],numClasses:[246,3,1,""],numFeatures:[246,3,1,""],params:[246,3,1,""],pi:[246,3,1,""],predict:[246,2,1,""],predictProbability:[246,2,1,""],predictRaw:[246,2,1,""],predictionCol:[246,3,1,""],probabilityCol:[246,3,1,""],rawPredictionCol:[246,3,1,""],read:[246,2,1,""],save:[246,2,1,""],set:[246,2,1,""],setFeaturesCol:[246,2,1,""],setPredictionCol:[246,2,1,""],setProbabilityCol:[246,2,1,""],setRawPredictionCol:[246,2,1,""],setThresholds:[246,2,1,""],sigma:[246,3,1,""],smoothing:[246,3,1,""],theta:[246,3,1,""],thresholds:[246,3,1,""],transform:[246,2,1,""],weightCol:[246,3,1,""],write:[246,2,1,""]},"pyspark.ml.classification.OneVsRest":{classifier:[247,3,1,""],clear:[247,2,1,""],copy:[247,2,1,""],explainParam:[247,2,1,""],explainParams:[247,2,1,""],extractParamMap:[247,2,1,""],featuresCol:[247,3,1,""],fit:[247,2,1,""],fitMultiple:[247,2,1,""],getClassifier:[247,2,1,""],getFeaturesCol:[247,2,1,""],getLabelCol:[247,2,1,""],getOrDefault:[247,2,1,""],getParallelism:[247,2,1,""],getParam:[247,2,1,""],getPredictionCol:[247,2,1,""],getRawPredictionCol:[247,2,1,""],getWeightCol:[247,2,1,""],hasDefault:[247,2,1,""],hasParam:[247,2,1,""],isDefined:[247,2,1,""],isSet:[247,2,1,""],labelCol:[247,3,1,""],load:[247,2,1,""],parallelism:[247,3,1,""],params:[247,3,1,""],predictionCol:[247,3,1,""],rawPredictionCol:[247,3,1,""],read:[247,2,1,""],save:[247,2,1,""],set:[247,2,1,""],setClassifier:[247,2,1,""],setFeaturesCol:[247,2,1,""],setLabelCol:[247,2,1,""],setParallelism:[247,2,1,""],setParams:[247,2,1,""],setPredictionCol:[247,2,1,""],setRawPredictionCol:[247,2,1,""],setWeightCol:[247,2,1,""],weightCol:[247,3,1,""],write:[247,2,1,""]},"pyspark.ml.classification.OneVsRestModel":{classifier:[248,3,1,""],clear:[248,2,1,""],copy:[248,2,1,""],explainParam:[248,2,1,""],explainParams:[248,2,1,""],extractParamMap:[248,2,1,""],featuresCol:[248,3,1,""],getClassifier:[248,2,1,""],getFeaturesCol:[248,2,1,""],getLabelCol:[248,2,1,""],getOrDefault:[248,2,1,""],getParam:[248,2,1,""],getPredictionCol:[248,2,1,""],getRawPredictionCol:[248,2,1,""],getWeightCol:[248,2,1,""],hasDefault:[248,2,1,""],hasParam:[248,2,1,""],isDefined:[248,2,1,""],isSet:[248,2,1,""],labelCol:[248,3,1,""],load:[248,2,1,""],params:[248,3,1,""],predictionCol:[248,3,1,""],rawPredictionCol:[248,3,1,""],read:[248,2,1,""],save:[248,2,1,""],set:[248,2,1,""],setFeaturesCol:[248,2,1,""],setPredictionCol:[248,2,1,""],setRawPredictionCol:[248,2,1,""],transform:[248,2,1,""],weightCol:[248,3,1,""],write:[248,2,1,""]},"pyspark.ml.classification.RandomForestClassificationModel":{bootstrap:[249,3,1,""],cacheNodeIds:[249,3,1,""],checkpointInterval:[249,3,1,""],clear:[249,2,1,""],copy:[249,2,1,""],explainParam:[249,2,1,""],explainParams:[249,2,1,""],extractParamMap:[249,2,1,""],featureImportances:[249,3,1,""],featureSubsetStrategy:[249,3,1,""],featuresCol:[249,3,1,""],getBootstrap:[249,2,1,""],getCacheNodeIds:[249,2,1,""],getCheckpointInterval:[249,2,1,""],getFeatureSubsetStrategy:[249,2,1,""],getFeaturesCol:[249,2,1,""],getImpurity:[249,2,1,""],getLabelCol:[249,2,1,""],getLeafCol:[249,2,1,""],getMaxBins:[249,2,1,""],getMaxDepth:[249,2,1,""],getMaxMemoryInMB:[249,2,1,""],getMinInfoGain:[249,2,1,""],getMinInstancesPerNode:[249,2,1,""],getMinWeightFractionPerNode:[249,2,1,""],getNumTrees:[249,3,1,""],getOrDefault:[249,2,1,""],getParam:[249,2,1,""],getPredictionCol:[249,2,1,""],getProbabilityCol:[249,2,1,""],getRawPredictionCol:[249,2,1,""],getSeed:[249,2,1,""],getSubsamplingRate:[249,2,1,""],getThresholds:[249,2,1,""],getWeightCol:[249,2,1,""],hasDefault:[249,2,1,""],hasParam:[249,2,1,""],impurity:[249,3,1,""],isDefined:[249,2,1,""],isSet:[249,2,1,""],labelCol:[249,3,1,""],leafCol:[249,3,1,""],load:[249,2,1,""],maxBins:[249,3,1,""],maxDepth:[249,3,1,""],maxMemoryInMB:[249,3,1,""],minInfoGain:[249,3,1,""],minInstancesPerNode:[249,3,1,""],minWeightFractionPerNode:[249,3,1,""],numClasses:[249,3,1,""],numFeatures:[249,3,1,""],numTrees:[249,3,1,""],params:[249,3,1,""],predict:[249,2,1,""],predictLeaf:[249,2,1,""],predictProbability:[249,2,1,""],predictRaw:[249,2,1,""],predictionCol:[249,3,1,""],probabilityCol:[249,3,1,""],rawPredictionCol:[249,3,1,""],read:[249,2,1,""],save:[249,2,1,""],seed:[249,3,1,""],set:[249,2,1,""],setFeaturesCol:[249,2,1,""],setLeafCol:[249,2,1,""],setPredictionCol:[249,2,1,""],setProbabilityCol:[249,2,1,""],setRawPredictionCol:[249,2,1,""],setThresholds:[249,2,1,""],subsamplingRate:[249,3,1,""],supportedFeatureSubsetStrategies:[249,3,1,""],supportedImpurities:[249,3,1,""],thresholds:[249,3,1,""],toDebugString:[249,3,1,""],totalNumNodes:[249,3,1,""],transform:[249,2,1,""],treeWeights:[249,3,1,""],trees:[249,3,1,""],weightCol:[249,3,1,""],write:[249,2,1,""]},"pyspark.ml.classification.RandomForestClassifier":{bootstrap:[252,3,1,""],cacheNodeIds:[252,3,1,""],checkpointInterval:[252,3,1,""],clear:[252,2,1,""],copy:[252,2,1,""],explainParam:[252,2,1,""],explainParams:[252,2,1,""],extractParamMap:[252,2,1,""],featureSubsetStrategy:[252,3,1,""],featuresCol:[252,3,1,""],fit:[252,2,1,""],fitMultiple:[252,2,1,""],getBootstrap:[252,2,1,""],getCacheNodeIds:[252,2,1,""],getCheckpointInterval:[252,2,1,""],getFeatureSubsetStrategy:[252,2,1,""],getFeaturesCol:[252,2,1,""],getImpurity:[252,2,1,""],getLabelCol:[252,2,1,""],getLeafCol:[252,2,1,""],getMaxBins:[252,2,1,""],getMaxDepth:[252,2,1,""],getMaxMemoryInMB:[252,2,1,""],getMinInfoGain:[252,2,1,""],getMinInstancesPerNode:[252,2,1,""],getMinWeightFractionPerNode:[252,2,1,""],getNumTrees:[252,2,1,""],getOrDefault:[252,2,1,""],getParam:[252,2,1,""],getPredictionCol:[252,2,1,""],getProbabilityCol:[252,2,1,""],getRawPredictionCol:[252,2,1,""],getSeed:[252,2,1,""],getSubsamplingRate:[252,2,1,""],getThresholds:[252,2,1,""],getWeightCol:[252,2,1,""],hasDefault:[252,2,1,""],hasParam:[252,2,1,""],impurity:[252,3,1,""],isDefined:[252,2,1,""],isSet:[252,2,1,""],labelCol:[252,3,1,""],leafCol:[252,3,1,""],load:[252,2,1,""],maxBins:[252,3,1,""],maxDepth:[252,3,1,""],maxMemoryInMB:[252,3,1,""],minInfoGain:[252,3,1,""],minInstancesPerNode:[252,3,1,""],minWeightFractionPerNode:[252,3,1,""],numTrees:[252,3,1,""],params:[252,3,1,""],predictionCol:[252,3,1,""],probabilityCol:[252,3,1,""],rawPredictionCol:[252,3,1,""],read:[252,2,1,""],save:[252,2,1,""],seed:[252,3,1,""],set:[252,2,1,""],setBootstrap:[252,2,1,""],setCacheNodeIds:[252,2,1,""],setCheckpointInterval:[252,2,1,""],setFeatureSubsetStrategy:[252,2,1,""],setFeaturesCol:[252,2,1,""],setImpurity:[252,2,1,""],setLabelCol:[252,2,1,""],setLeafCol:[252,2,1,""],setMaxBins:[252,2,1,""],setMaxDepth:[252,2,1,""],setMaxMemoryInMB:[252,2,1,""],setMinInfoGain:[252,2,1,""],setMinInstancesPerNode:[252,2,1,""],setMinWeightFractionPerNode:[252,2,1,""],setNumTrees:[252,2,1,""],setParams:[252,2,1,""],setPredictionCol:[252,2,1,""],setProbabilityCol:[252,2,1,""],setRawPredictionCol:[252,2,1,""],setSeed:[252,2,1,""],setSubsamplingRate:[252,2,1,""],setThresholds:[252,2,1,""],setWeightCol:[252,2,1,""],subsamplingRate:[252,3,1,""],supportedFeatureSubsetStrategies:[252,3,1,""],supportedImpurities:[252,3,1,""],thresholds:[252,3,1,""],weightCol:[252,3,1,""],write:[252,2,1,""]},"pyspark.ml.clustering":{BisectingKMeans:[253,1,1,""],BisectingKMeansModel:[254,1,1,""],BisectingKMeansSummary:[255,1,1,""],DistributedLDAModel:[256,1,1,""],GaussianMixture:[257,1,1,""],GaussianMixtureModel:[258,1,1,""],GaussianMixtureSummary:[259,1,1,""],KMeans:[260,1,1,""],KMeansModel:[261,1,1,""],LDA:[262,1,1,""],LDAModel:[263,1,1,""],LocalLDAModel:[264,1,1,""],PowerIterationClustering:[265,1,1,""]},"pyspark.ml.clustering.BisectingKMeans":{clear:[253,2,1,""],copy:[253,2,1,""],distanceMeasure:[253,3,1,""],explainParam:[253,2,1,""],explainParams:[253,2,1,""],extractParamMap:[253,2,1,""],featuresCol:[253,3,1,""],fit:[253,2,1,""],fitMultiple:[253,2,1,""],getDistanceMeasure:[253,2,1,""],getFeaturesCol:[253,2,1,""],getK:[253,2,1,""],getMaxIter:[253,2,1,""],getMinDivisibleClusterSize:[253,2,1,""],getOrDefault:[253,2,1,""],getParam:[253,2,1,""],getPredictionCol:[253,2,1,""],getSeed:[253,2,1,""],getWeightCol:[253,2,1,""],hasDefault:[253,2,1,""],hasParam:[253,2,1,""],isDefined:[253,2,1,""],isSet:[253,2,1,""],k:[253,3,1,""],load:[253,2,1,""],maxIter:[253,3,1,""],minDivisibleClusterSize:[253,3,1,""],params:[253,3,1,""],predictionCol:[253,3,1,""],read:[253,2,1,""],save:[253,2,1,""],seed:[253,3,1,""],set:[253,2,1,""],setDistanceMeasure:[253,2,1,""],setFeaturesCol:[253,2,1,""],setK:[253,2,1,""],setMaxIter:[253,2,1,""],setMinDivisibleClusterSize:[253,2,1,""],setParams:[253,2,1,""],setPredictionCol:[253,2,1,""],setSeed:[253,2,1,""],setWeightCol:[253,2,1,""],weightCol:[253,3,1,""],write:[253,2,1,""]},"pyspark.ml.clustering.BisectingKMeansModel":{clear:[254,2,1,""],clusterCenters:[254,2,1,""],computeCost:[254,2,1,""],copy:[254,2,1,""],distanceMeasure:[254,3,1,""],explainParam:[254,2,1,""],explainParams:[254,2,1,""],extractParamMap:[254,2,1,""],featuresCol:[254,3,1,""],getDistanceMeasure:[254,2,1,""],getFeaturesCol:[254,2,1,""],getK:[254,2,1,""],getMaxIter:[254,2,1,""],getMinDivisibleClusterSize:[254,2,1,""],getOrDefault:[254,2,1,""],getParam:[254,2,1,""],getPredictionCol:[254,2,1,""],getSeed:[254,2,1,""],getWeightCol:[254,2,1,""],hasDefault:[254,2,1,""],hasParam:[254,2,1,""],hasSummary:[254,3,1,""],isDefined:[254,2,1,""],isSet:[254,2,1,""],k:[254,3,1,""],load:[254,2,1,""],maxIter:[254,3,1,""],minDivisibleClusterSize:[254,3,1,""],params:[254,3,1,""],predict:[254,2,1,""],predictionCol:[254,3,1,""],read:[254,2,1,""],save:[254,2,1,""],seed:[254,3,1,""],set:[254,2,1,""],setFeaturesCol:[254,2,1,""],setPredictionCol:[254,2,1,""],summary:[254,3,1,""],transform:[254,2,1,""],weightCol:[254,3,1,""],write:[254,2,1,""]},"pyspark.ml.clustering.BisectingKMeansSummary":{cluster:[255,3,1,""],clusterSizes:[255,3,1,""],featuresCol:[255,3,1,""],k:[255,3,1,""],numIter:[255,3,1,""],predictionCol:[255,3,1,""],predictions:[255,3,1,""],trainingCost:[255,3,1,""]},"pyspark.ml.clustering.DistributedLDAModel":{checkpointInterval:[256,3,1,""],clear:[256,2,1,""],copy:[256,2,1,""],describeTopics:[256,2,1,""],docConcentration:[256,3,1,""],estimatedDocConcentration:[256,2,1,""],explainParam:[256,2,1,""],explainParams:[256,2,1,""],extractParamMap:[256,2,1,""],featuresCol:[256,3,1,""],getCheckpointFiles:[256,2,1,""],getCheckpointInterval:[256,2,1,""],getDocConcentration:[256,2,1,""],getFeaturesCol:[256,2,1,""],getK:[256,2,1,""],getKeepLastCheckpoint:[256,2,1,""],getLearningDecay:[256,2,1,""],getLearningOffset:[256,2,1,""],getMaxIter:[256,2,1,""],getOptimizeDocConcentration:[256,2,1,""],getOptimizer:[256,2,1,""],getOrDefault:[256,2,1,""],getParam:[256,2,1,""],getSeed:[256,2,1,""],getSubsamplingRate:[256,2,1,""],getTopicConcentration:[256,2,1,""],getTopicDistributionCol:[256,2,1,""],hasDefault:[256,2,1,""],hasParam:[256,2,1,""],isDefined:[256,2,1,""],isDistributed:[256,2,1,""],isSet:[256,2,1,""],k:[256,3,1,""],keepLastCheckpoint:[256,3,1,""],learningDecay:[256,3,1,""],learningOffset:[256,3,1,""],load:[256,2,1,""],logLikelihood:[256,2,1,""],logPerplexity:[256,2,1,""],logPrior:[256,2,1,""],maxIter:[256,3,1,""],optimizeDocConcentration:[256,3,1,""],optimizer:[256,3,1,""],params:[256,3,1,""],read:[256,2,1,""],save:[256,2,1,""],seed:[256,3,1,""],set:[256,2,1,""],setFeaturesCol:[256,2,1,""],setSeed:[256,2,1,""],setTopicDistributionCol:[256,2,1,""],subsamplingRate:[256,3,1,""],toLocal:[256,2,1,""],topicConcentration:[256,3,1,""],topicDistributionCol:[256,3,1,""],topicsMatrix:[256,2,1,""],trainingLogLikelihood:[256,2,1,""],transform:[256,2,1,""],vocabSize:[256,2,1,""],write:[256,2,1,""]},"pyspark.ml.clustering.GaussianMixture":{aggregationDepth:[257,3,1,""],clear:[257,2,1,""],copy:[257,2,1,""],explainParam:[257,2,1,""],explainParams:[257,2,1,""],extractParamMap:[257,2,1,""],featuresCol:[257,3,1,""],fit:[257,2,1,""],fitMultiple:[257,2,1,""],getAggregationDepth:[257,2,1,""],getFeaturesCol:[257,2,1,""],getK:[257,2,1,""],getMaxIter:[257,2,1,""],getOrDefault:[257,2,1,""],getParam:[257,2,1,""],getPredictionCol:[257,2,1,""],getProbabilityCol:[257,2,1,""],getSeed:[257,2,1,""],getTol:[257,2,1,""],getWeightCol:[257,2,1,""],hasDefault:[257,2,1,""],hasParam:[257,2,1,""],isDefined:[257,2,1,""],isSet:[257,2,1,""],k:[257,3,1,""],load:[257,2,1,""],maxIter:[257,3,1,""],params:[257,3,1,""],predictionCol:[257,3,1,""],probabilityCol:[257,3,1,""],read:[257,2,1,""],save:[257,2,1,""],seed:[257,3,1,""],set:[257,2,1,""],setAggregationDepth:[257,2,1,""],setFeaturesCol:[257,2,1,""],setK:[257,2,1,""],setMaxIter:[257,2,1,""],setParams:[257,2,1,""],setPredictionCol:[257,2,1,""],setProbabilityCol:[257,2,1,""],setSeed:[257,2,1,""],setTol:[257,2,1,""],setWeightCol:[257,2,1,""],tol:[257,3,1,""],weightCol:[257,3,1,""],write:[257,2,1,""]},"pyspark.ml.clustering.GaussianMixtureModel":{aggregationDepth:[258,3,1,""],clear:[258,2,1,""],copy:[258,2,1,""],explainParam:[258,2,1,""],explainParams:[258,2,1,""],extractParamMap:[258,2,1,""],featuresCol:[258,3,1,""],gaussians:[258,3,1,""],gaussiansDF:[258,3,1,""],getAggregationDepth:[258,2,1,""],getFeaturesCol:[258,2,1,""],getK:[258,2,1,""],getMaxIter:[258,2,1,""],getOrDefault:[258,2,1,""],getParam:[258,2,1,""],getPredictionCol:[258,2,1,""],getProbabilityCol:[258,2,1,""],getSeed:[258,2,1,""],getTol:[258,2,1,""],getWeightCol:[258,2,1,""],hasDefault:[258,2,1,""],hasParam:[258,2,1,""],hasSummary:[258,3,1,""],isDefined:[258,2,1,""],isSet:[258,2,1,""],k:[258,3,1,""],load:[258,2,1,""],maxIter:[258,3,1,""],params:[258,3,1,""],predict:[258,2,1,""],predictProbability:[258,2,1,""],predictionCol:[258,3,1,""],probabilityCol:[258,3,1,""],read:[258,2,1,""],save:[258,2,1,""],seed:[258,3,1,""],set:[258,2,1,""],setFeaturesCol:[258,2,1,""],setPredictionCol:[258,2,1,""],setProbabilityCol:[258,2,1,""],summary:[258,3,1,""],tol:[258,3,1,""],transform:[258,2,1,""],weightCol:[258,3,1,""],weights:[258,3,1,""],write:[258,2,1,""]},"pyspark.ml.clustering.GaussianMixtureSummary":{cluster:[259,3,1,""],clusterSizes:[259,3,1,""],featuresCol:[259,3,1,""],k:[259,3,1,""],logLikelihood:[259,3,1,""],numIter:[259,3,1,""],predictionCol:[259,3,1,""],predictions:[259,3,1,""],probability:[259,3,1,""],probabilityCol:[259,3,1,""]},"pyspark.ml.clustering.KMeans":{clear:[260,2,1,""],copy:[260,2,1,""],distanceMeasure:[260,3,1,""],explainParam:[260,2,1,""],explainParams:[260,2,1,""],extractParamMap:[260,2,1,""],featuresCol:[260,3,1,""],fit:[260,2,1,""],fitMultiple:[260,2,1,""],getDistanceMeasure:[260,2,1,""],getFeaturesCol:[260,2,1,""],getInitMode:[260,2,1,""],getInitSteps:[260,2,1,""],getK:[260,2,1,""],getMaxIter:[260,2,1,""],getOrDefault:[260,2,1,""],getParam:[260,2,1,""],getPredictionCol:[260,2,1,""],getSeed:[260,2,1,""],getTol:[260,2,1,""],getWeightCol:[260,2,1,""],hasDefault:[260,2,1,""],hasParam:[260,2,1,""],initMode:[260,3,1,""],initSteps:[260,3,1,""],isDefined:[260,2,1,""],isSet:[260,2,1,""],k:[260,3,1,""],load:[260,2,1,""],maxIter:[260,3,1,""],params:[260,3,1,""],predictionCol:[260,3,1,""],read:[260,2,1,""],save:[260,2,1,""],seed:[260,3,1,""],set:[260,2,1,""],setDistanceMeasure:[260,2,1,""],setFeaturesCol:[260,2,1,""],setInitMode:[260,2,1,""],setInitSteps:[260,2,1,""],setK:[260,2,1,""],setMaxIter:[260,2,1,""],setParams:[260,2,1,""],setPredictionCol:[260,2,1,""],setSeed:[260,2,1,""],setTol:[260,2,1,""],setWeightCol:[260,2,1,""],tol:[260,3,1,""],weightCol:[260,3,1,""],write:[260,2,1,""]},"pyspark.ml.clustering.KMeansModel":{clear:[261,2,1,""],clusterCenters:[261,2,1,""],copy:[261,2,1,""],distanceMeasure:[261,3,1,""],explainParam:[261,2,1,""],explainParams:[261,2,1,""],extractParamMap:[261,2,1,""],featuresCol:[261,3,1,""],getDistanceMeasure:[261,2,1,""],getFeaturesCol:[261,2,1,""],getInitMode:[261,2,1,""],getInitSteps:[261,2,1,""],getK:[261,2,1,""],getMaxIter:[261,2,1,""],getOrDefault:[261,2,1,""],getParam:[261,2,1,""],getPredictionCol:[261,2,1,""],getSeed:[261,2,1,""],getTol:[261,2,1,""],getWeightCol:[261,2,1,""],hasDefault:[261,2,1,""],hasParam:[261,2,1,""],hasSummary:[261,3,1,""],initMode:[261,3,1,""],initSteps:[261,3,1,""],isDefined:[261,2,1,""],isSet:[261,2,1,""],k:[261,3,1,""],load:[261,2,1,""],maxIter:[261,3,1,""],params:[261,3,1,""],predict:[261,2,1,""],predictionCol:[261,3,1,""],read:[261,2,1,""],save:[261,2,1,""],seed:[261,3,1,""],set:[261,2,1,""],setFeaturesCol:[261,2,1,""],setPredictionCol:[261,2,1,""],summary:[261,3,1,""],tol:[261,3,1,""],transform:[261,2,1,""],weightCol:[261,3,1,""],write:[261,2,1,""]},"pyspark.ml.clustering.LDA":{checkpointInterval:[262,3,1,""],clear:[262,2,1,""],copy:[262,2,1,""],docConcentration:[262,3,1,""],explainParam:[262,2,1,""],explainParams:[262,2,1,""],extractParamMap:[262,2,1,""],featuresCol:[262,3,1,""],fit:[262,2,1,""],fitMultiple:[262,2,1,""],getCheckpointInterval:[262,2,1,""],getDocConcentration:[262,2,1,""],getFeaturesCol:[262,2,1,""],getK:[262,2,1,""],getKeepLastCheckpoint:[262,2,1,""],getLearningDecay:[262,2,1,""],getLearningOffset:[262,2,1,""],getMaxIter:[262,2,1,""],getOptimizeDocConcentration:[262,2,1,""],getOptimizer:[262,2,1,""],getOrDefault:[262,2,1,""],getParam:[262,2,1,""],getSeed:[262,2,1,""],getSubsamplingRate:[262,2,1,""],getTopicConcentration:[262,2,1,""],getTopicDistributionCol:[262,2,1,""],hasDefault:[262,2,1,""],hasParam:[262,2,1,""],isDefined:[262,2,1,""],isSet:[262,2,1,""],k:[262,3,1,""],keepLastCheckpoint:[262,3,1,""],learningDecay:[262,3,1,""],learningOffset:[262,3,1,""],load:[262,2,1,""],maxIter:[262,3,1,""],optimizeDocConcentration:[262,3,1,""],optimizer:[262,3,1,""],params:[262,3,1,""],read:[262,2,1,""],save:[262,2,1,""],seed:[262,3,1,""],set:[262,2,1,""],setCheckpointInterval:[262,2,1,""],setDocConcentration:[262,2,1,""],setFeaturesCol:[262,2,1,""],setK:[262,2,1,""],setKeepLastCheckpoint:[262,2,1,""],setLearningDecay:[262,2,1,""],setLearningOffset:[262,2,1,""],setMaxIter:[262,2,1,""],setOptimizeDocConcentration:[262,2,1,""],setOptimizer:[262,2,1,""],setParams:[262,2,1,""],setSeed:[262,2,1,""],setSubsamplingRate:[262,2,1,""],setTopicConcentration:[262,2,1,""],setTopicDistributionCol:[262,2,1,""],subsamplingRate:[262,3,1,""],topicConcentration:[262,3,1,""],topicDistributionCol:[262,3,1,""],write:[262,2,1,""]},"pyspark.ml.clustering.LDAModel":{checkpointInterval:[263,3,1,""],clear:[263,2,1,""],copy:[263,2,1,""],describeTopics:[263,2,1,""],docConcentration:[263,3,1,""],estimatedDocConcentration:[263,2,1,""],explainParam:[263,2,1,""],explainParams:[263,2,1,""],extractParamMap:[263,2,1,""],featuresCol:[263,3,1,""],getCheckpointInterval:[263,2,1,""],getDocConcentration:[263,2,1,""],getFeaturesCol:[263,2,1,""],getK:[263,2,1,""],getKeepLastCheckpoint:[263,2,1,""],getLearningDecay:[263,2,1,""],getLearningOffset:[263,2,1,""],getMaxIter:[263,2,1,""],getOptimizeDocConcentration:[263,2,1,""],getOptimizer:[263,2,1,""],getOrDefault:[263,2,1,""],getParam:[263,2,1,""],getSeed:[263,2,1,""],getSubsamplingRate:[263,2,1,""],getTopicConcentration:[263,2,1,""],getTopicDistributionCol:[263,2,1,""],hasDefault:[263,2,1,""],hasParam:[263,2,1,""],isDefined:[263,2,1,""],isDistributed:[263,2,1,""],isSet:[263,2,1,""],k:[263,3,1,""],keepLastCheckpoint:[263,3,1,""],learningDecay:[263,3,1,""],learningOffset:[263,3,1,""],logLikelihood:[263,2,1,""],logPerplexity:[263,2,1,""],maxIter:[263,3,1,""],optimizeDocConcentration:[263,3,1,""],optimizer:[263,3,1,""],params:[263,3,1,""],seed:[263,3,1,""],set:[263,2,1,""],setFeaturesCol:[263,2,1,""],setSeed:[263,2,1,""],setTopicDistributionCol:[263,2,1,""],subsamplingRate:[263,3,1,""],topicConcentration:[263,3,1,""],topicDistributionCol:[263,3,1,""],topicsMatrix:[263,2,1,""],transform:[263,2,1,""],vocabSize:[263,2,1,""]},"pyspark.ml.clustering.LocalLDAModel":{checkpointInterval:[264,3,1,""],clear:[264,2,1,""],copy:[264,2,1,""],describeTopics:[264,2,1,""],docConcentration:[264,3,1,""],estimatedDocConcentration:[264,2,1,""],explainParam:[264,2,1,""],explainParams:[264,2,1,""],extractParamMap:[264,2,1,""],featuresCol:[264,3,1,""],getCheckpointInterval:[264,2,1,""],getDocConcentration:[264,2,1,""],getFeaturesCol:[264,2,1,""],getK:[264,2,1,""],getKeepLastCheckpoint:[264,2,1,""],getLearningDecay:[264,2,1,""],getLearningOffset:[264,2,1,""],getMaxIter:[264,2,1,""],getOptimizeDocConcentration:[264,2,1,""],getOptimizer:[264,2,1,""],getOrDefault:[264,2,1,""],getParam:[264,2,1,""],getSeed:[264,2,1,""],getSubsamplingRate:[264,2,1,""],getTopicConcentration:[264,2,1,""],getTopicDistributionCol:[264,2,1,""],hasDefault:[264,2,1,""],hasParam:[264,2,1,""],isDefined:[264,2,1,""],isDistributed:[264,2,1,""],isSet:[264,2,1,""],k:[264,3,1,""],keepLastCheckpoint:[264,3,1,""],learningDecay:[264,3,1,""],learningOffset:[264,3,1,""],load:[264,2,1,""],logLikelihood:[264,2,1,""],logPerplexity:[264,2,1,""],maxIter:[264,3,1,""],optimizeDocConcentration:[264,3,1,""],optimizer:[264,3,1,""],params:[264,3,1,""],read:[264,2,1,""],save:[264,2,1,""],seed:[264,3,1,""],set:[264,2,1,""],setFeaturesCol:[264,2,1,""],setSeed:[264,2,1,""],setTopicDistributionCol:[264,2,1,""],subsamplingRate:[264,3,1,""],topicConcentration:[264,3,1,""],topicDistributionCol:[264,3,1,""],topicsMatrix:[264,2,1,""],transform:[264,2,1,""],vocabSize:[264,2,1,""],write:[264,2,1,""]},"pyspark.ml.clustering.PowerIterationClustering":{assignClusters:[265,2,1,""],clear:[265,2,1,""],copy:[265,2,1,""],dstCol:[265,3,1,""],explainParam:[265,2,1,""],explainParams:[265,2,1,""],extractParamMap:[265,2,1,""],getDstCol:[265,2,1,""],getInitMode:[265,2,1,""],getK:[265,2,1,""],getMaxIter:[265,2,1,""],getOrDefault:[265,2,1,""],getParam:[265,2,1,""],getSrcCol:[265,2,1,""],getWeightCol:[265,2,1,""],hasDefault:[265,2,1,""],hasParam:[265,2,1,""],initMode:[265,3,1,""],isDefined:[265,2,1,""],isSet:[265,2,1,""],k:[265,3,1,""],load:[265,2,1,""],maxIter:[265,3,1,""],params:[265,3,1,""],read:[265,2,1,""],save:[265,2,1,""],set:[265,2,1,""],setDstCol:[265,2,1,""],setInitMode:[265,2,1,""],setK:[265,2,1,""],setMaxIter:[265,2,1,""],setParams:[265,2,1,""],setSrcCol:[265,2,1,""],setWeightCol:[265,2,1,""],srcCol:[265,3,1,""],weightCol:[265,3,1,""],write:[265,2,1,""]},"pyspark.ml.evaluation":{BinaryClassificationEvaluator:[266,1,1,""],ClusteringEvaluator:[267,1,1,""],Evaluator:[268,1,1,""],MulticlassClassificationEvaluator:[269,1,1,""],MultilabelClassificationEvaluator:[270,1,1,""],RankingEvaluator:[271,1,1,""],RegressionEvaluator:[272,1,1,""]},"pyspark.ml.evaluation.BinaryClassificationEvaluator":{clear:[266,2,1,""],copy:[266,2,1,""],evaluate:[266,2,1,""],explainParam:[266,2,1,""],explainParams:[266,2,1,""],extractParamMap:[266,2,1,""],getLabelCol:[266,2,1,""],getMetricName:[266,2,1,""],getNumBins:[266,2,1,""],getOrDefault:[266,2,1,""],getParam:[266,2,1,""],getRawPredictionCol:[266,2,1,""],getWeightCol:[266,2,1,""],hasDefault:[266,2,1,""],hasParam:[266,2,1,""],isDefined:[266,2,1,""],isLargerBetter:[266,2,1,""],isSet:[266,2,1,""],labelCol:[266,3,1,""],load:[266,2,1,""],metricName:[266,3,1,""],numBins:[266,3,1,""],params:[266,3,1,""],rawPredictionCol:[266,3,1,""],read:[266,2,1,""],save:[266,2,1,""],set:[266,2,1,""],setLabelCol:[266,2,1,""],setMetricName:[266,2,1,""],setNumBins:[266,2,1,""],setParams:[266,2,1,""],setRawPredictionCol:[266,2,1,""],setWeightCol:[266,2,1,""],weightCol:[266,3,1,""],write:[266,2,1,""]},"pyspark.ml.evaluation.ClusteringEvaluator":{clear:[267,2,1,""],copy:[267,2,1,""],distanceMeasure:[267,3,1,""],evaluate:[267,2,1,""],explainParam:[267,2,1,""],explainParams:[267,2,1,""],extractParamMap:[267,2,1,""],featuresCol:[267,3,1,""],getDistanceMeasure:[267,2,1,""],getFeaturesCol:[267,2,1,""],getMetricName:[267,2,1,""],getOrDefault:[267,2,1,""],getParam:[267,2,1,""],getPredictionCol:[267,2,1,""],hasDefault:[267,2,1,""],hasParam:[267,2,1,""],isDefined:[267,2,1,""],isLargerBetter:[267,2,1,""],isSet:[267,2,1,""],load:[267,2,1,""],metricName:[267,3,1,""],params:[267,3,1,""],predictionCol:[267,3,1,""],read:[267,2,1,""],save:[267,2,1,""],set:[267,2,1,""],setDistanceMeasure:[267,2,1,""],setFeaturesCol:[267,2,1,""],setMetricName:[267,2,1,""],setParams:[267,2,1,""],setPredictionCol:[267,2,1,""],write:[267,2,1,""]},"pyspark.ml.evaluation.Evaluator":{clear:[268,2,1,""],copy:[268,2,1,""],evaluate:[268,2,1,""],explainParam:[268,2,1,""],explainParams:[268,2,1,""],extractParamMap:[268,2,1,""],getOrDefault:[268,2,1,""],getParam:[268,2,1,""],hasDefault:[268,2,1,""],hasParam:[268,2,1,""],isDefined:[268,2,1,""],isLargerBetter:[268,2,1,""],isSet:[268,2,1,""],params:[268,3,1,""],set:[268,2,1,""]},"pyspark.ml.evaluation.MulticlassClassificationEvaluator":{beta:[269,3,1,""],clear:[269,2,1,""],copy:[269,2,1,""],eps:[269,3,1,""],evaluate:[269,2,1,""],explainParam:[269,2,1,""],explainParams:[269,2,1,""],extractParamMap:[269,2,1,""],getBeta:[269,2,1,""],getEps:[269,2,1,""],getLabelCol:[269,2,1,""],getMetricLabel:[269,2,1,""],getMetricName:[269,2,1,""],getOrDefault:[269,2,1,""],getParam:[269,2,1,""],getPredictionCol:[269,2,1,""],getProbabilityCol:[269,2,1,""],getWeightCol:[269,2,1,""],hasDefault:[269,2,1,""],hasParam:[269,2,1,""],isDefined:[269,2,1,""],isLargerBetter:[269,2,1,""],isSet:[269,2,1,""],labelCol:[269,3,1,""],load:[269,2,1,""],metricLabel:[269,3,1,""],metricName:[269,3,1,""],params:[269,3,1,""],predictionCol:[269,3,1,""],probabilityCol:[269,3,1,""],read:[269,2,1,""],save:[269,2,1,""],set:[269,2,1,""],setBeta:[269,2,1,""],setEps:[269,2,1,""],setLabelCol:[269,2,1,""],setMetricLabel:[269,2,1,""],setMetricName:[269,2,1,""],setParams:[269,2,1,""],setPredictionCol:[269,2,1,""],setProbabilityCol:[269,2,1,""],setWeightCol:[269,2,1,""],weightCol:[269,3,1,""],write:[269,2,1,""]},"pyspark.ml.evaluation.MultilabelClassificationEvaluator":{clear:[270,2,1,""],copy:[270,2,1,""],evaluate:[270,2,1,""],explainParam:[270,2,1,""],explainParams:[270,2,1,""],extractParamMap:[270,2,1,""],getLabelCol:[270,2,1,""],getMetricLabel:[270,2,1,""],getMetricName:[270,2,1,""],getOrDefault:[270,2,1,""],getParam:[270,2,1,""],getPredictionCol:[270,2,1,""],hasDefault:[270,2,1,""],hasParam:[270,2,1,""],isDefined:[270,2,1,""],isLargerBetter:[270,2,1,""],isSet:[270,2,1,""],labelCol:[270,3,1,""],load:[270,2,1,""],metricLabel:[270,3,1,""],metricName:[270,3,1,""],params:[270,3,1,""],predictionCol:[270,3,1,""],read:[270,2,1,""],save:[270,2,1,""],set:[270,2,1,""],setLabelCol:[270,2,1,""],setMetricLabel:[270,2,1,""],setMetricName:[270,2,1,""],setParams:[270,2,1,""],setPredictionCol:[270,2,1,""],write:[270,2,1,""]},"pyspark.ml.evaluation.RankingEvaluator":{clear:[271,2,1,""],copy:[271,2,1,""],evaluate:[271,2,1,""],explainParam:[271,2,1,""],explainParams:[271,2,1,""],extractParamMap:[271,2,1,""],getK:[271,2,1,""],getLabelCol:[271,2,1,""],getMetricName:[271,2,1,""],getOrDefault:[271,2,1,""],getParam:[271,2,1,""],getPredictionCol:[271,2,1,""],hasDefault:[271,2,1,""],hasParam:[271,2,1,""],isDefined:[271,2,1,""],isLargerBetter:[271,2,1,""],isSet:[271,2,1,""],k:[271,3,1,""],labelCol:[271,3,1,""],load:[271,2,1,""],metricName:[271,3,1,""],params:[271,3,1,""],predictionCol:[271,3,1,""],read:[271,2,1,""],save:[271,2,1,""],set:[271,2,1,""],setK:[271,2,1,""],setLabelCol:[271,2,1,""],setMetricName:[271,2,1,""],setParams:[271,2,1,""],setPredictionCol:[271,2,1,""],write:[271,2,1,""]},"pyspark.ml.evaluation.RegressionEvaluator":{clear:[272,2,1,""],copy:[272,2,1,""],evaluate:[272,2,1,""],explainParam:[272,2,1,""],explainParams:[272,2,1,""],extractParamMap:[272,2,1,""],getLabelCol:[272,2,1,""],getMetricName:[272,2,1,""],getOrDefault:[272,2,1,""],getParam:[272,2,1,""],getPredictionCol:[272,2,1,""],getThroughOrigin:[272,2,1,""],getWeightCol:[272,2,1,""],hasDefault:[272,2,1,""],hasParam:[272,2,1,""],isDefined:[272,2,1,""],isLargerBetter:[272,2,1,""],isSet:[272,2,1,""],labelCol:[272,3,1,""],load:[272,2,1,""],metricName:[272,3,1,""],params:[272,3,1,""],predictionCol:[272,3,1,""],read:[272,2,1,""],save:[272,2,1,""],set:[272,2,1,""],setLabelCol:[272,2,1,""],setMetricName:[272,2,1,""],setParams:[272,2,1,""],setPredictionCol:[272,2,1,""],setThroughOrigin:[272,2,1,""],setWeightCol:[272,2,1,""],throughOrigin:[272,3,1,""],weightCol:[272,3,1,""],write:[272,2,1,""]},"pyspark.ml.feature":{Binarizer:[275,1,1,""],BucketedRandomProjectionLSH:[276,1,1,""],BucketedRandomProjectionLSHModel:[277,1,1,""],Bucketizer:[278,1,1,""],ChiSqSelector:[279,1,1,""],ChiSqSelectorModel:[280,1,1,""],CountVectorizer:[281,1,1,""],CountVectorizerModel:[282,1,1,""],DCT:[283,1,1,""],ElementwiseProduct:[284,1,1,""],FeatureHasher:[287,1,1,""],HashingTF:[288,1,1,""],IDF:[289,1,1,""],IDFModel:[290,1,1,""],Imputer:[291,1,1,""],ImputerModel:[292,1,1,""],IndexToString:[293,1,1,""],Interaction:[294,1,1,""],MaxAbsScaler:[295,1,1,""],MaxAbsScalerModel:[296,1,1,""],MinHashLSH:[297,1,1,""],MinHashLSHModel:[298,1,1,""],MinMaxScaler:[299,1,1,""],MinMaxScalerModel:[300,1,1,""],NGram:[301,1,1,""],Normalizer:[302,1,1,""],OneHotEncoder:[303,1,1,""],OneHotEncoderModel:[304,1,1,""],PCA:[305,1,1,""],PCAModel:[306,1,1,""],PolynomialExpansion:[307,1,1,""],QuantileDiscretizer:[308,1,1,""],RFormula:[309,1,1,""],RFormulaModel:[310,1,1,""],RegexTokenizer:[311,1,1,""],RobustScaler:[312,1,1,""],RobustScalerModel:[313,1,1,""],SQLTransformer:[314,1,1,""],StandardScaler:[315,1,1,""],StandardScalerModel:[316,1,1,""],StopWordsRemover:[317,1,1,""],StringIndexer:[318,1,1,""],StringIndexerModel:[319,1,1,""],Tokenizer:[320,1,1,""],VectorAssembler:[323,1,1,""],VectorIndexer:[324,1,1,""],VectorIndexerModel:[325,1,1,""],VectorSizeHint:[326,1,1,""],VectorSlicer:[327,1,1,""],Word2Vec:[328,1,1,""],Word2VecModel:[329,1,1,""]},"pyspark.ml.feature.Binarizer":{clear:[275,2,1,""],copy:[275,2,1,""],explainParam:[275,2,1,""],explainParams:[275,2,1,""],extractParamMap:[275,2,1,""],getInputCol:[275,2,1,""],getInputCols:[275,2,1,""],getOrDefault:[275,2,1,""],getOutputCol:[275,2,1,""],getOutputCols:[275,2,1,""],getParam:[275,2,1,""],getThreshold:[275,2,1,""],getThresholds:[275,2,1,""],hasDefault:[275,2,1,""],hasParam:[275,2,1,""],inputCol:[275,3,1,""],inputCols:[275,3,1,""],isDefined:[275,2,1,""],isSet:[275,2,1,""],load:[275,2,1,""],outputCol:[275,3,1,""],outputCols:[275,3,1,""],params:[275,3,1,""],read:[275,2,1,""],save:[275,2,1,""],set:[275,2,1,""],setInputCol:[275,2,1,""],setInputCols:[275,2,1,""],setOutputCol:[275,2,1,""],setOutputCols:[275,2,1,""],setParams:[275,2,1,""],setThreshold:[275,2,1,""],setThresholds:[275,2,1,""],threshold:[275,3,1,""],thresholds:[275,3,1,""],transform:[275,2,1,""],write:[275,2,1,""]},"pyspark.ml.feature.BucketedRandomProjectionLSH":{bucketLength:[276,3,1,""],clear:[276,2,1,""],copy:[276,2,1,""],explainParam:[276,2,1,""],explainParams:[276,2,1,""],extractParamMap:[276,2,1,""],fit:[276,2,1,""],fitMultiple:[276,2,1,""],getBucketLength:[276,2,1,""],getInputCol:[276,2,1,""],getNumHashTables:[276,2,1,""],getOrDefault:[276,2,1,""],getOutputCol:[276,2,1,""],getParam:[276,2,1,""],getSeed:[276,2,1,""],hasDefault:[276,2,1,""],hasParam:[276,2,1,""],inputCol:[276,3,1,""],isDefined:[276,2,1,""],isSet:[276,2,1,""],load:[276,2,1,""],numHashTables:[276,3,1,""],outputCol:[276,3,1,""],params:[276,3,1,""],read:[276,2,1,""],save:[276,2,1,""],seed:[276,3,1,""],set:[276,2,1,""],setBucketLength:[276,2,1,""],setInputCol:[276,2,1,""],setNumHashTables:[276,2,1,""],setOutputCol:[276,2,1,""],setParams:[276,2,1,""],setSeed:[276,2,1,""],write:[276,2,1,""]},"pyspark.ml.feature.BucketedRandomProjectionLSHModel":{approxNearestNeighbors:[277,2,1,""],approxSimilarityJoin:[277,2,1,""],bucketLength:[277,3,1,""],clear:[277,2,1,""],copy:[277,2,1,""],explainParam:[277,2,1,""],explainParams:[277,2,1,""],extractParamMap:[277,2,1,""],getBucketLength:[277,2,1,""],getInputCol:[277,2,1,""],getNumHashTables:[277,2,1,""],getOrDefault:[277,2,1,""],getOutputCol:[277,2,1,""],getParam:[277,2,1,""],hasDefault:[277,2,1,""],hasParam:[277,2,1,""],inputCol:[277,3,1,""],isDefined:[277,2,1,""],isSet:[277,2,1,""],load:[277,2,1,""],numHashTables:[277,3,1,""],outputCol:[277,3,1,""],params:[277,3,1,""],read:[277,2,1,""],save:[277,2,1,""],set:[277,2,1,""],setInputCol:[277,2,1,""],setOutputCol:[277,2,1,""],transform:[277,2,1,""],write:[277,2,1,""]},"pyspark.ml.feature.Bucketizer":{clear:[278,2,1,""],copy:[278,2,1,""],explainParam:[278,2,1,""],explainParams:[278,2,1,""],extractParamMap:[278,2,1,""],getHandleInvalid:[278,2,1,""],getInputCol:[278,2,1,""],getInputCols:[278,2,1,""],getOrDefault:[278,2,1,""],getOutputCol:[278,2,1,""],getOutputCols:[278,2,1,""],getParam:[278,2,1,""],getSplits:[278,2,1,""],getSplitsArray:[278,2,1,""],handleInvalid:[278,3,1,""],hasDefault:[278,2,1,""],hasParam:[278,2,1,""],inputCol:[278,3,1,""],inputCols:[278,3,1,""],isDefined:[278,2,1,""],isSet:[278,2,1,""],load:[278,2,1,""],outputCol:[278,3,1,""],outputCols:[278,3,1,""],params:[278,3,1,""],read:[278,2,1,""],save:[278,2,1,""],set:[278,2,1,""],setHandleInvalid:[278,2,1,""],setInputCol:[278,2,1,""],setInputCols:[278,2,1,""],setOutputCol:[278,2,1,""],setOutputCols:[278,2,1,""],setParams:[278,2,1,""],setSplits:[278,2,1,""],setSplitsArray:[278,2,1,""],splits:[278,3,1,""],splitsArray:[278,3,1,""],transform:[278,2,1,""],write:[278,2,1,""]},"pyspark.ml.feature.ChiSqSelector":{clear:[279,2,1,""],copy:[279,2,1,""],explainParam:[279,2,1,""],explainParams:[279,2,1,""],extractParamMap:[279,2,1,""],fdr:[279,3,1,""],featuresCol:[279,3,1,""],fit:[279,2,1,""],fitMultiple:[279,2,1,""],fpr:[279,3,1,""],fwe:[279,3,1,""],getFdr:[279,2,1,""],getFeaturesCol:[279,2,1,""],getFpr:[279,2,1,""],getFwe:[279,2,1,""],getLabelCol:[279,2,1,""],getNumTopFeatures:[279,2,1,""],getOrDefault:[279,2,1,""],getOutputCol:[279,2,1,""],getParam:[279,2,1,""],getPercentile:[279,2,1,""],getSelectorType:[279,2,1,""],hasDefault:[279,2,1,""],hasParam:[279,2,1,""],isDefined:[279,2,1,""],isSet:[279,2,1,""],labelCol:[279,3,1,""],load:[279,2,1,""],numTopFeatures:[279,3,1,""],outputCol:[279,3,1,""],params:[279,3,1,""],percentile:[279,3,1,""],read:[279,2,1,""],save:[279,2,1,""],selectorType:[279,3,1,""],set:[279,2,1,""],setFdr:[279,2,1,""],setFeaturesCol:[279,2,1,""],setFpr:[279,2,1,""],setFwe:[279,2,1,""],setLabelCol:[279,2,1,""],setNumTopFeatures:[279,2,1,""],setOutputCol:[279,2,1,""],setParams:[279,2,1,""],setPercentile:[279,2,1,""],setSelectorType:[279,2,1,""],write:[279,2,1,""]},"pyspark.ml.feature.ChiSqSelectorModel":{clear:[280,2,1,""],copy:[280,2,1,""],explainParam:[280,2,1,""],explainParams:[280,2,1,""],extractParamMap:[280,2,1,""],fdr:[280,3,1,""],featuresCol:[280,3,1,""],fpr:[280,3,1,""],fwe:[280,3,1,""],getFdr:[280,2,1,""],getFeaturesCol:[280,2,1,""],getFpr:[280,2,1,""],getFwe:[280,2,1,""],getLabelCol:[280,2,1,""],getNumTopFeatures:[280,2,1,""],getOrDefault:[280,2,1,""],getOutputCol:[280,2,1,""],getParam:[280,2,1,""],getPercentile:[280,2,1,""],getSelectorType:[280,2,1,""],hasDefault:[280,2,1,""],hasParam:[280,2,1,""],isDefined:[280,2,1,""],isSet:[280,2,1,""],labelCol:[280,3,1,""],load:[280,2,1,""],numTopFeatures:[280,3,1,""],outputCol:[280,3,1,""],params:[280,3,1,""],percentile:[280,3,1,""],read:[280,2,1,""],save:[280,2,1,""],selectedFeatures:[280,3,1,""],selectorType:[280,3,1,""],set:[280,2,1,""],setFeaturesCol:[280,2,1,""],setOutputCol:[280,2,1,""],transform:[280,2,1,""],write:[280,2,1,""]},"pyspark.ml.feature.CountVectorizer":{binary:[281,3,1,""],clear:[281,2,1,""],copy:[281,2,1,""],explainParam:[281,2,1,""],explainParams:[281,2,1,""],extractParamMap:[281,2,1,""],fit:[281,2,1,""],fitMultiple:[281,2,1,""],getBinary:[281,2,1,""],getInputCol:[281,2,1,""],getMaxDF:[281,2,1,""],getMinDF:[281,2,1,""],getMinTF:[281,2,1,""],getOrDefault:[281,2,1,""],getOutputCol:[281,2,1,""],getParam:[281,2,1,""],getVocabSize:[281,2,1,""],hasDefault:[281,2,1,""],hasParam:[281,2,1,""],inputCol:[281,3,1,""],isDefined:[281,2,1,""],isSet:[281,2,1,""],load:[281,2,1,""],maxDF:[281,3,1,""],minDF:[281,3,1,""],minTF:[281,3,1,""],outputCol:[281,3,1,""],params:[281,3,1,""],read:[281,2,1,""],save:[281,2,1,""],set:[281,2,1,""],setBinary:[281,2,1,""],setInputCol:[281,2,1,""],setMaxDF:[281,2,1,""],setMinDF:[281,2,1,""],setMinTF:[281,2,1,""],setOutputCol:[281,2,1,""],setParams:[281,2,1,""],setVocabSize:[281,2,1,""],vocabSize:[281,3,1,""],write:[281,2,1,""]},"pyspark.ml.feature.CountVectorizerModel":{binary:[282,3,1,""],clear:[282,2,1,""],copy:[282,2,1,""],explainParam:[282,2,1,""],explainParams:[282,2,1,""],extractParamMap:[282,2,1,""],from_vocabulary:[282,2,1,""],getBinary:[282,2,1,""],getInputCol:[282,2,1,""],getMaxDF:[282,2,1,""],getMinDF:[282,2,1,""],getMinTF:[282,2,1,""],getOrDefault:[282,2,1,""],getOutputCol:[282,2,1,""],getParam:[282,2,1,""],getVocabSize:[282,2,1,""],hasDefault:[282,2,1,""],hasParam:[282,2,1,""],inputCol:[282,3,1,""],isDefined:[282,2,1,""],isSet:[282,2,1,""],load:[282,2,1,""],maxDF:[282,3,1,""],minDF:[282,3,1,""],minTF:[282,3,1,""],outputCol:[282,3,1,""],params:[282,3,1,""],read:[282,2,1,""],save:[282,2,1,""],set:[282,2,1,""],setBinary:[282,2,1,""],setInputCol:[282,2,1,""],setMinTF:[282,2,1,""],setOutputCol:[282,2,1,""],transform:[282,2,1,""],vocabSize:[282,3,1,""],vocabulary:[282,3,1,""],write:[282,2,1,""]},"pyspark.ml.feature.DCT":{clear:[283,2,1,""],copy:[283,2,1,""],explainParam:[283,2,1,""],explainParams:[283,2,1,""],extractParamMap:[283,2,1,""],getInputCol:[283,2,1,""],getInverse:[283,2,1,""],getOrDefault:[283,2,1,""],getOutputCol:[283,2,1,""],getParam:[283,2,1,""],hasDefault:[283,2,1,""],hasParam:[283,2,1,""],inputCol:[283,3,1,""],inverse:[283,3,1,""],isDefined:[283,2,1,""],isSet:[283,2,1,""],load:[283,2,1,""],outputCol:[283,3,1,""],params:[283,3,1,""],read:[283,2,1,""],save:[283,2,1,""],set:[283,2,1,""],setInputCol:[283,2,1,""],setInverse:[283,2,1,""],setOutputCol:[283,2,1,""],setParams:[283,2,1,""],transform:[283,2,1,""],write:[283,2,1,""]},"pyspark.ml.feature.ElementwiseProduct":{clear:[284,2,1,""],copy:[284,2,1,""],explainParam:[284,2,1,""],explainParams:[284,2,1,""],extractParamMap:[284,2,1,""],getInputCol:[284,2,1,""],getOrDefault:[284,2,1,""],getOutputCol:[284,2,1,""],getParam:[284,2,1,""],getScalingVec:[284,2,1,""],hasDefault:[284,2,1,""],hasParam:[284,2,1,""],inputCol:[284,3,1,""],isDefined:[284,2,1,""],isSet:[284,2,1,""],load:[284,2,1,""],outputCol:[284,3,1,""],params:[284,3,1,""],read:[284,2,1,""],save:[284,2,1,""],scalingVec:[284,3,1,""],set:[284,2,1,""],setInputCol:[284,2,1,""],setOutputCol:[284,2,1,""],setParams:[284,2,1,""],setScalingVec:[284,2,1,""],transform:[284,2,1,""],write:[284,2,1,""]},"pyspark.ml.feature.FeatureHasher":{categoricalCols:[287,3,1,""],clear:[287,2,1,""],copy:[287,2,1,""],explainParam:[287,2,1,""],explainParams:[287,2,1,""],extractParamMap:[287,2,1,""],getCategoricalCols:[287,2,1,""],getInputCols:[287,2,1,""],getNumFeatures:[287,2,1,""],getOrDefault:[287,2,1,""],getOutputCol:[287,2,1,""],getParam:[287,2,1,""],hasDefault:[287,2,1,""],hasParam:[287,2,1,""],inputCols:[287,3,1,""],isDefined:[287,2,1,""],isSet:[287,2,1,""],load:[287,2,1,""],numFeatures:[287,3,1,""],outputCol:[287,3,1,""],params:[287,3,1,""],read:[287,2,1,""],save:[287,2,1,""],set:[287,2,1,""],setCategoricalCols:[287,2,1,""],setInputCols:[287,2,1,""],setNumFeatures:[287,2,1,""],setOutputCol:[287,2,1,""],setParams:[287,2,1,""],transform:[287,2,1,""],write:[287,2,1,""]},"pyspark.ml.feature.HashingTF":{binary:[288,3,1,""],clear:[288,2,1,""],copy:[288,2,1,""],explainParam:[288,2,1,""],explainParams:[288,2,1,""],extractParamMap:[288,2,1,""],getBinary:[288,2,1,""],getInputCol:[288,2,1,""],getNumFeatures:[288,2,1,""],getOrDefault:[288,2,1,""],getOutputCol:[288,2,1,""],getParam:[288,2,1,""],hasDefault:[288,2,1,""],hasParam:[288,2,1,""],indexOf:[288,2,1,""],inputCol:[288,3,1,""],isDefined:[288,2,1,""],isSet:[288,2,1,""],load:[288,2,1,""],numFeatures:[288,3,1,""],outputCol:[288,3,1,""],params:[288,3,1,""],read:[288,2,1,""],save:[288,2,1,""],set:[288,2,1,""],setBinary:[288,2,1,""],setInputCol:[288,2,1,""],setNumFeatures:[288,2,1,""],setOutputCol:[288,2,1,""],setParams:[288,2,1,""],transform:[288,2,1,""],write:[288,2,1,""]},"pyspark.ml.feature.IDF":{clear:[289,2,1,""],copy:[289,2,1,""],explainParam:[289,2,1,""],explainParams:[289,2,1,""],extractParamMap:[289,2,1,""],fit:[289,2,1,""],fitMultiple:[289,2,1,""],getInputCol:[289,2,1,""],getMinDocFreq:[289,2,1,""],getOrDefault:[289,2,1,""],getOutputCol:[289,2,1,""],getParam:[289,2,1,""],hasDefault:[289,2,1,""],hasParam:[289,2,1,""],inputCol:[289,3,1,""],isDefined:[289,2,1,""],isSet:[289,2,1,""],load:[289,2,1,""],minDocFreq:[289,3,1,""],outputCol:[289,3,1,""],params:[289,3,1,""],read:[289,2,1,""],save:[289,2,1,""],set:[289,2,1,""],setInputCol:[289,2,1,""],setMinDocFreq:[289,2,1,""],setOutputCol:[289,2,1,""],setParams:[289,2,1,""],write:[289,2,1,""]},"pyspark.ml.feature.IDFModel":{clear:[290,2,1,""],copy:[290,2,1,""],docFreq:[290,3,1,""],explainParam:[290,2,1,""],explainParams:[290,2,1,""],extractParamMap:[290,2,1,""],getInputCol:[290,2,1,""],getMinDocFreq:[290,2,1,""],getOrDefault:[290,2,1,""],getOutputCol:[290,2,1,""],getParam:[290,2,1,""],hasDefault:[290,2,1,""],hasParam:[290,2,1,""],idf:[290,3,1,""],inputCol:[290,3,1,""],isDefined:[290,2,1,""],isSet:[290,2,1,""],load:[290,2,1,""],minDocFreq:[290,3,1,""],numDocs:[290,3,1,""],outputCol:[290,3,1,""],params:[290,3,1,""],read:[290,2,1,""],save:[290,2,1,""],set:[290,2,1,""],setInputCol:[290,2,1,""],setOutputCol:[290,2,1,""],transform:[290,2,1,""],write:[290,2,1,""]},"pyspark.ml.feature.Imputer":{clear:[291,2,1,""],copy:[291,2,1,""],explainParam:[291,2,1,""],explainParams:[291,2,1,""],extractParamMap:[291,2,1,""],fit:[291,2,1,""],fitMultiple:[291,2,1,""],getInputCol:[291,2,1,""],getInputCols:[291,2,1,""],getMissingValue:[291,2,1,""],getOrDefault:[291,2,1,""],getOutputCol:[291,2,1,""],getOutputCols:[291,2,1,""],getParam:[291,2,1,""],getRelativeError:[291,2,1,""],getStrategy:[291,2,1,""],hasDefault:[291,2,1,""],hasParam:[291,2,1,""],inputCol:[291,3,1,""],inputCols:[291,3,1,""],isDefined:[291,2,1,""],isSet:[291,2,1,""],load:[291,2,1,""],missingValue:[291,3,1,""],outputCol:[291,3,1,""],outputCols:[291,3,1,""],params:[291,3,1,""],read:[291,2,1,""],relativeError:[291,3,1,""],save:[291,2,1,""],set:[291,2,1,""],setInputCol:[291,2,1,""],setInputCols:[291,2,1,""],setMissingValue:[291,2,1,""],setOutputCol:[291,2,1,""],setOutputCols:[291,2,1,""],setParams:[291,2,1,""],setRelativeError:[291,2,1,""],setStrategy:[291,2,1,""],strategy:[291,3,1,""],write:[291,2,1,""]},"pyspark.ml.feature.ImputerModel":{clear:[292,2,1,""],copy:[292,2,1,""],explainParam:[292,2,1,""],explainParams:[292,2,1,""],extractParamMap:[292,2,1,""],getInputCol:[292,2,1,""],getInputCols:[292,2,1,""],getMissingValue:[292,2,1,""],getOrDefault:[292,2,1,""],getOutputCol:[292,2,1,""],getOutputCols:[292,2,1,""],getParam:[292,2,1,""],getRelativeError:[292,2,1,""],getStrategy:[292,2,1,""],hasDefault:[292,2,1,""],hasParam:[292,2,1,""],inputCol:[292,3,1,""],inputCols:[292,3,1,""],isDefined:[292,2,1,""],isSet:[292,2,1,""],load:[292,2,1,""],missingValue:[292,3,1,""],outputCol:[292,3,1,""],outputCols:[292,3,1,""],params:[292,3,1,""],read:[292,2,1,""],relativeError:[292,3,1,""],save:[292,2,1,""],set:[292,2,1,""],setInputCol:[292,2,1,""],setInputCols:[292,2,1,""],setOutputCol:[292,2,1,""],setOutputCols:[292,2,1,""],strategy:[292,3,1,""],surrogateDF:[292,3,1,""],transform:[292,2,1,""],write:[292,2,1,""]},"pyspark.ml.feature.IndexToString":{clear:[293,2,1,""],copy:[293,2,1,""],explainParam:[293,2,1,""],explainParams:[293,2,1,""],extractParamMap:[293,2,1,""],getInputCol:[293,2,1,""],getLabels:[293,2,1,""],getOrDefault:[293,2,1,""],getOutputCol:[293,2,1,""],getParam:[293,2,1,""],hasDefault:[293,2,1,""],hasParam:[293,2,1,""],inputCol:[293,3,1,""],isDefined:[293,2,1,""],isSet:[293,2,1,""],labels:[293,3,1,""],load:[293,2,1,""],outputCol:[293,3,1,""],params:[293,3,1,""],read:[293,2,1,""],save:[293,2,1,""],set:[293,2,1,""],setInputCol:[293,2,1,""],setLabels:[293,2,1,""],setOutputCol:[293,2,1,""],setParams:[293,2,1,""],transform:[293,2,1,""],write:[293,2,1,""]},"pyspark.ml.feature.Interaction":{clear:[294,2,1,""],copy:[294,2,1,""],explainParam:[294,2,1,""],explainParams:[294,2,1,""],extractParamMap:[294,2,1,""],getInputCols:[294,2,1,""],getOrDefault:[294,2,1,""],getOutputCol:[294,2,1,""],getParam:[294,2,1,""],hasDefault:[294,2,1,""],hasParam:[294,2,1,""],inputCols:[294,3,1,""],isDefined:[294,2,1,""],isSet:[294,2,1,""],load:[294,2,1,""],outputCol:[294,3,1,""],params:[294,3,1,""],read:[294,2,1,""],save:[294,2,1,""],set:[294,2,1,""],setInputCols:[294,2,1,""],setOutputCol:[294,2,1,""],setParams:[294,2,1,""],transform:[294,2,1,""],write:[294,2,1,""]},"pyspark.ml.feature.MaxAbsScaler":{clear:[295,2,1,""],copy:[295,2,1,""],explainParam:[295,2,1,""],explainParams:[295,2,1,""],extractParamMap:[295,2,1,""],fit:[295,2,1,""],fitMultiple:[295,2,1,""],getInputCol:[295,2,1,""],getOrDefault:[295,2,1,""],getOutputCol:[295,2,1,""],getParam:[295,2,1,""],hasDefault:[295,2,1,""],hasParam:[295,2,1,""],inputCol:[295,3,1,""],isDefined:[295,2,1,""],isSet:[295,2,1,""],load:[295,2,1,""],outputCol:[295,3,1,""],params:[295,3,1,""],read:[295,2,1,""],save:[295,2,1,""],set:[295,2,1,""],setInputCol:[295,2,1,""],setOutputCol:[295,2,1,""],setParams:[295,2,1,""],write:[295,2,1,""]},"pyspark.ml.feature.MaxAbsScalerModel":{clear:[296,2,1,""],copy:[296,2,1,""],explainParam:[296,2,1,""],explainParams:[296,2,1,""],extractParamMap:[296,2,1,""],getInputCol:[296,2,1,""],getOrDefault:[296,2,1,""],getOutputCol:[296,2,1,""],getParam:[296,2,1,""],hasDefault:[296,2,1,""],hasParam:[296,2,1,""],inputCol:[296,3,1,""],isDefined:[296,2,1,""],isSet:[296,2,1,""],load:[296,2,1,""],maxAbs:[296,3,1,""],outputCol:[296,3,1,""],params:[296,3,1,""],read:[296,2,1,""],save:[296,2,1,""],set:[296,2,1,""],setInputCol:[296,2,1,""],setOutputCol:[296,2,1,""],transform:[296,2,1,""],write:[296,2,1,""]},"pyspark.ml.feature.MinHashLSH":{clear:[297,2,1,""],copy:[297,2,1,""],explainParam:[297,2,1,""],explainParams:[297,2,1,""],extractParamMap:[297,2,1,""],fit:[297,2,1,""],fitMultiple:[297,2,1,""],getInputCol:[297,2,1,""],getNumHashTables:[297,2,1,""],getOrDefault:[297,2,1,""],getOutputCol:[297,2,1,""],getParam:[297,2,1,""],getSeed:[297,2,1,""],hasDefault:[297,2,1,""],hasParam:[297,2,1,""],inputCol:[297,3,1,""],isDefined:[297,2,1,""],isSet:[297,2,1,""],load:[297,2,1,""],numHashTables:[297,3,1,""],outputCol:[297,3,1,""],params:[297,3,1,""],read:[297,2,1,""],save:[297,2,1,""],seed:[297,3,1,""],set:[297,2,1,""],setInputCol:[297,2,1,""],setNumHashTables:[297,2,1,""],setOutputCol:[297,2,1,""],setParams:[297,2,1,""],setSeed:[297,2,1,""],write:[297,2,1,""]},"pyspark.ml.feature.MinHashLSHModel":{approxNearestNeighbors:[298,2,1,""],approxSimilarityJoin:[298,2,1,""],clear:[298,2,1,""],copy:[298,2,1,""],explainParam:[298,2,1,""],explainParams:[298,2,1,""],extractParamMap:[298,2,1,""],getInputCol:[298,2,1,""],getNumHashTables:[298,2,1,""],getOrDefault:[298,2,1,""],getOutputCol:[298,2,1,""],getParam:[298,2,1,""],hasDefault:[298,2,1,""],hasParam:[298,2,1,""],inputCol:[298,3,1,""],isDefined:[298,2,1,""],isSet:[298,2,1,""],load:[298,2,1,""],numHashTables:[298,3,1,""],outputCol:[298,3,1,""],params:[298,3,1,""],read:[298,2,1,""],save:[298,2,1,""],set:[298,2,1,""],setInputCol:[298,2,1,""],setOutputCol:[298,2,1,""],transform:[298,2,1,""],write:[298,2,1,""]},"pyspark.ml.feature.MinMaxScaler":{clear:[299,2,1,""],copy:[299,2,1,""],explainParam:[299,2,1,""],explainParams:[299,2,1,""],extractParamMap:[299,2,1,""],fit:[299,2,1,""],fitMultiple:[299,2,1,""],getInputCol:[299,2,1,""],getMax:[299,2,1,""],getMin:[299,2,1,""],getOrDefault:[299,2,1,""],getOutputCol:[299,2,1,""],getParam:[299,2,1,""],hasDefault:[299,2,1,""],hasParam:[299,2,1,""],inputCol:[299,3,1,""],isDefined:[299,2,1,""],isSet:[299,2,1,""],load:[299,2,1,""],max:[299,3,1,""],min:[299,3,1,""],outputCol:[299,3,1,""],params:[299,3,1,""],read:[299,2,1,""],save:[299,2,1,""],set:[299,2,1,""],setInputCol:[299,2,1,""],setMax:[299,2,1,""],setMin:[299,2,1,""],setOutputCol:[299,2,1,""],setParams:[299,2,1,""],write:[299,2,1,""]},"pyspark.ml.feature.MinMaxScalerModel":{clear:[300,2,1,""],copy:[300,2,1,""],explainParam:[300,2,1,""],explainParams:[300,2,1,""],extractParamMap:[300,2,1,""],getInputCol:[300,2,1,""],getMax:[300,2,1,""],getMin:[300,2,1,""],getOrDefault:[300,2,1,""],getOutputCol:[300,2,1,""],getParam:[300,2,1,""],hasDefault:[300,2,1,""],hasParam:[300,2,1,""],inputCol:[300,3,1,""],isDefined:[300,2,1,""],isSet:[300,2,1,""],load:[300,2,1,""],max:[300,3,1,""],min:[300,3,1,""],originalMax:[300,3,1,""],originalMin:[300,3,1,""],outputCol:[300,3,1,""],params:[300,3,1,""],read:[300,2,1,""],save:[300,2,1,""],set:[300,2,1,""],setInputCol:[300,2,1,""],setMax:[300,2,1,""],setMin:[300,2,1,""],setOutputCol:[300,2,1,""],transform:[300,2,1,""],write:[300,2,1,""]},"pyspark.ml.feature.NGram":{clear:[301,2,1,""],copy:[301,2,1,""],explainParam:[301,2,1,""],explainParams:[301,2,1,""],extractParamMap:[301,2,1,""],getInputCol:[301,2,1,""],getN:[301,2,1,""],getOrDefault:[301,2,1,""],getOutputCol:[301,2,1,""],getParam:[301,2,1,""],hasDefault:[301,2,1,""],hasParam:[301,2,1,""],inputCol:[301,3,1,""],isDefined:[301,2,1,""],isSet:[301,2,1,""],load:[301,2,1,""],n:[301,3,1,""],outputCol:[301,3,1,""],params:[301,3,1,""],read:[301,2,1,""],save:[301,2,1,""],set:[301,2,1,""],setInputCol:[301,2,1,""],setN:[301,2,1,""],setOutputCol:[301,2,1,""],setParams:[301,2,1,""],transform:[301,2,1,""],write:[301,2,1,""]},"pyspark.ml.feature.Normalizer":{clear:[302,2,1,""],copy:[302,2,1,""],explainParam:[302,2,1,""],explainParams:[302,2,1,""],extractParamMap:[302,2,1,""],getInputCol:[302,2,1,""],getOrDefault:[302,2,1,""],getOutputCol:[302,2,1,""],getP:[302,2,1,""],getParam:[302,2,1,""],hasDefault:[302,2,1,""],hasParam:[302,2,1,""],inputCol:[302,3,1,""],isDefined:[302,2,1,""],isSet:[302,2,1,""],load:[302,2,1,""],outputCol:[302,3,1,""],p:[302,3,1,""],params:[302,3,1,""],read:[302,2,1,""],save:[302,2,1,""],set:[302,2,1,""],setInputCol:[302,2,1,""],setOutputCol:[302,2,1,""],setP:[302,2,1,""],setParams:[302,2,1,""],transform:[302,2,1,""],write:[302,2,1,""]},"pyspark.ml.feature.OneHotEncoder":{clear:[303,2,1,""],copy:[303,2,1,""],dropLast:[303,3,1,""],explainParam:[303,2,1,""],explainParams:[303,2,1,""],extractParamMap:[303,2,1,""],fit:[303,2,1,""],fitMultiple:[303,2,1,""],getDropLast:[303,2,1,""],getHandleInvalid:[303,2,1,""],getInputCol:[303,2,1,""],getInputCols:[303,2,1,""],getOrDefault:[303,2,1,""],getOutputCol:[303,2,1,""],getOutputCols:[303,2,1,""],getParam:[303,2,1,""],handleInvalid:[303,3,1,""],hasDefault:[303,2,1,""],hasParam:[303,2,1,""],inputCol:[303,3,1,""],inputCols:[303,3,1,""],isDefined:[303,2,1,""],isSet:[303,2,1,""],load:[303,2,1,""],outputCol:[303,3,1,""],outputCols:[303,3,1,""],params:[303,3,1,""],read:[303,2,1,""],save:[303,2,1,""],set:[303,2,1,""],setDropLast:[303,2,1,""],setHandleInvalid:[303,2,1,""],setInputCol:[303,2,1,""],setInputCols:[303,2,1,""],setOutputCol:[303,2,1,""],setOutputCols:[303,2,1,""],setParams:[303,2,1,""],write:[303,2,1,""]},"pyspark.ml.feature.OneHotEncoderModel":{categorySizes:[304,3,1,""],clear:[304,2,1,""],copy:[304,2,1,""],dropLast:[304,3,1,""],explainParam:[304,2,1,""],explainParams:[304,2,1,""],extractParamMap:[304,2,1,""],getDropLast:[304,2,1,""],getHandleInvalid:[304,2,1,""],getInputCol:[304,2,1,""],getInputCols:[304,2,1,""],getOrDefault:[304,2,1,""],getOutputCol:[304,2,1,""],getOutputCols:[304,2,1,""],getParam:[304,2,1,""],handleInvalid:[304,3,1,""],hasDefault:[304,2,1,""],hasParam:[304,2,1,""],inputCol:[304,3,1,""],inputCols:[304,3,1,""],isDefined:[304,2,1,""],isSet:[304,2,1,""],load:[304,2,1,""],outputCol:[304,3,1,""],outputCols:[304,3,1,""],params:[304,3,1,""],read:[304,2,1,""],save:[304,2,1,""],set:[304,2,1,""],setDropLast:[304,2,1,""],setHandleInvalid:[304,2,1,""],setInputCol:[304,2,1,""],setInputCols:[304,2,1,""],setOutputCol:[304,2,1,""],setOutputCols:[304,2,1,""],transform:[304,2,1,""],write:[304,2,1,""]},"pyspark.ml.feature.PCA":{clear:[305,2,1,""],copy:[305,2,1,""],explainParam:[305,2,1,""],explainParams:[305,2,1,""],extractParamMap:[305,2,1,""],fit:[305,2,1,""],fitMultiple:[305,2,1,""],getInputCol:[305,2,1,""],getK:[305,2,1,""],getOrDefault:[305,2,1,""],getOutputCol:[305,2,1,""],getParam:[305,2,1,""],hasDefault:[305,2,1,""],hasParam:[305,2,1,""],inputCol:[305,3,1,""],isDefined:[305,2,1,""],isSet:[305,2,1,""],k:[305,3,1,""],load:[305,2,1,""],outputCol:[305,3,1,""],params:[305,3,1,""],read:[305,2,1,""],save:[305,2,1,""],set:[305,2,1,""],setInputCol:[305,2,1,""],setK:[305,2,1,""],setOutputCol:[305,2,1,""],setParams:[305,2,1,""],write:[305,2,1,""]},"pyspark.ml.feature.PCAModel":{clear:[306,2,1,""],copy:[306,2,1,""],explainParam:[306,2,1,""],explainParams:[306,2,1,""],explainedVariance:[306,3,1,""],extractParamMap:[306,2,1,""],getInputCol:[306,2,1,""],getK:[306,2,1,""],getOrDefault:[306,2,1,""],getOutputCol:[306,2,1,""],getParam:[306,2,1,""],hasDefault:[306,2,1,""],hasParam:[306,2,1,""],inputCol:[306,3,1,""],isDefined:[306,2,1,""],isSet:[306,2,1,""],k:[306,3,1,""],load:[306,2,1,""],outputCol:[306,3,1,""],params:[306,3,1,""],pc:[306,3,1,""],read:[306,2,1,""],save:[306,2,1,""],set:[306,2,1,""],setInputCol:[306,2,1,""],setOutputCol:[306,2,1,""],transform:[306,2,1,""],write:[306,2,1,""]},"pyspark.ml.feature.PolynomialExpansion":{clear:[307,2,1,""],copy:[307,2,1,""],degree:[307,3,1,""],explainParam:[307,2,1,""],explainParams:[307,2,1,""],extractParamMap:[307,2,1,""],getDegree:[307,2,1,""],getInputCol:[307,2,1,""],getOrDefault:[307,2,1,""],getOutputCol:[307,2,1,""],getParam:[307,2,1,""],hasDefault:[307,2,1,""],hasParam:[307,2,1,""],inputCol:[307,3,1,""],isDefined:[307,2,1,""],isSet:[307,2,1,""],load:[307,2,1,""],outputCol:[307,3,1,""],params:[307,3,1,""],read:[307,2,1,""],save:[307,2,1,""],set:[307,2,1,""],setDegree:[307,2,1,""],setInputCol:[307,2,1,""],setOutputCol:[307,2,1,""],setParams:[307,2,1,""],transform:[307,2,1,""],write:[307,2,1,""]},"pyspark.ml.feature.QuantileDiscretizer":{clear:[308,2,1,""],copy:[308,2,1,""],explainParam:[308,2,1,""],explainParams:[308,2,1,""],extractParamMap:[308,2,1,""],fit:[308,2,1,""],fitMultiple:[308,2,1,""],getHandleInvalid:[308,2,1,""],getInputCol:[308,2,1,""],getInputCols:[308,2,1,""],getNumBuckets:[308,2,1,""],getNumBucketsArray:[308,2,1,""],getOrDefault:[308,2,1,""],getOutputCol:[308,2,1,""],getOutputCols:[308,2,1,""],getParam:[308,2,1,""],getRelativeError:[308,2,1,""],handleInvalid:[308,3,1,""],hasDefault:[308,2,1,""],hasParam:[308,2,1,""],inputCol:[308,3,1,""],inputCols:[308,3,1,""],isDefined:[308,2,1,""],isSet:[308,2,1,""],load:[308,2,1,""],numBuckets:[308,3,1,""],numBucketsArray:[308,3,1,""],outputCol:[308,3,1,""],outputCols:[308,3,1,""],params:[308,3,1,""],read:[308,2,1,""],relativeError:[308,3,1,""],save:[308,2,1,""],set:[308,2,1,""],setHandleInvalid:[308,2,1,""],setInputCol:[308,2,1,""],setInputCols:[308,2,1,""],setNumBuckets:[308,2,1,""],setNumBucketsArray:[308,2,1,""],setOutputCol:[308,2,1,""],setOutputCols:[308,2,1,""],setParams:[308,2,1,""],setRelativeError:[308,2,1,""],write:[308,2,1,""]},"pyspark.ml.feature.RFormula":{clear:[309,2,1,""],copy:[309,2,1,""],explainParam:[309,2,1,""],explainParams:[309,2,1,""],extractParamMap:[309,2,1,""],featuresCol:[309,3,1,""],fit:[309,2,1,""],fitMultiple:[309,2,1,""],forceIndexLabel:[309,3,1,""],formula:[309,3,1,""],getFeaturesCol:[309,2,1,""],getForceIndexLabel:[309,2,1,""],getFormula:[309,2,1,""],getHandleInvalid:[309,2,1,""],getLabelCol:[309,2,1,""],getOrDefault:[309,2,1,""],getParam:[309,2,1,""],getStringIndexerOrderType:[309,2,1,""],handleInvalid:[309,3,1,""],hasDefault:[309,2,1,""],hasParam:[309,2,1,""],isDefined:[309,2,1,""],isSet:[309,2,1,""],labelCol:[309,3,1,""],load:[309,2,1,""],params:[309,3,1,""],read:[309,2,1,""],save:[309,2,1,""],set:[309,2,1,""],setFeaturesCol:[309,2,1,""],setForceIndexLabel:[309,2,1,""],setFormula:[309,2,1,""],setHandleInvalid:[309,2,1,""],setLabelCol:[309,2,1,""],setParams:[309,2,1,""],setStringIndexerOrderType:[309,2,1,""],stringIndexerOrderType:[309,3,1,""],write:[309,2,1,""]},"pyspark.ml.feature.RFormulaModel":{clear:[310,2,1,""],copy:[310,2,1,""],explainParam:[310,2,1,""],explainParams:[310,2,1,""],extractParamMap:[310,2,1,""],featuresCol:[310,3,1,""],forceIndexLabel:[310,3,1,""],formula:[310,3,1,""],getFeaturesCol:[310,2,1,""],getForceIndexLabel:[310,2,1,""],getFormula:[310,2,1,""],getHandleInvalid:[310,2,1,""],getLabelCol:[310,2,1,""],getOrDefault:[310,2,1,""],getParam:[310,2,1,""],getStringIndexerOrderType:[310,2,1,""],handleInvalid:[310,3,1,""],hasDefault:[310,2,1,""],hasParam:[310,2,1,""],isDefined:[310,2,1,""],isSet:[310,2,1,""],labelCol:[310,3,1,""],load:[310,2,1,""],params:[310,3,1,""],read:[310,2,1,""],save:[310,2,1,""],set:[310,2,1,""],stringIndexerOrderType:[310,3,1,""],transform:[310,2,1,""],write:[310,2,1,""]},"pyspark.ml.feature.RegexTokenizer":{clear:[311,2,1,""],copy:[311,2,1,""],explainParam:[311,2,1,""],explainParams:[311,2,1,""],extractParamMap:[311,2,1,""],gaps:[311,3,1,""],getGaps:[311,2,1,""],getInputCol:[311,2,1,""],getMinTokenLength:[311,2,1,""],getOrDefault:[311,2,1,""],getOutputCol:[311,2,1,""],getParam:[311,2,1,""],getPattern:[311,2,1,""],getToLowercase:[311,2,1,""],hasDefault:[311,2,1,""],hasParam:[311,2,1,""],inputCol:[311,3,1,""],isDefined:[311,2,1,""],isSet:[311,2,1,""],load:[311,2,1,""],minTokenLength:[311,3,1,""],outputCol:[311,3,1,""],params:[311,3,1,""],pattern:[311,3,1,""],read:[311,2,1,""],save:[311,2,1,""],set:[311,2,1,""],setGaps:[311,2,1,""],setInputCol:[311,2,1,""],setMinTokenLength:[311,2,1,""],setOutputCol:[311,2,1,""],setParams:[311,2,1,""],setPattern:[311,2,1,""],setToLowercase:[311,2,1,""],toLowercase:[311,3,1,""],transform:[311,2,1,""],write:[311,2,1,""]},"pyspark.ml.feature.RobustScaler":{clear:[312,2,1,""],copy:[312,2,1,""],explainParam:[312,2,1,""],explainParams:[312,2,1,""],extractParamMap:[312,2,1,""],fit:[312,2,1,""],fitMultiple:[312,2,1,""],getInputCol:[312,2,1,""],getLower:[312,2,1,""],getOrDefault:[312,2,1,""],getOutputCol:[312,2,1,""],getParam:[312,2,1,""],getRelativeError:[312,2,1,""],getUpper:[312,2,1,""],getWithCentering:[312,2,1,""],getWithScaling:[312,2,1,""],hasDefault:[312,2,1,""],hasParam:[312,2,1,""],inputCol:[312,3,1,""],isDefined:[312,2,1,""],isSet:[312,2,1,""],load:[312,2,1,""],lower:[312,3,1,""],outputCol:[312,3,1,""],params:[312,3,1,""],read:[312,2,1,""],relativeError:[312,3,1,""],save:[312,2,1,""],set:[312,2,1,""],setInputCol:[312,2,1,""],setLower:[312,2,1,""],setOutputCol:[312,2,1,""],setParams:[312,2,1,""],setRelativeError:[312,2,1,""],setUpper:[312,2,1,""],setWithCentering:[312,2,1,""],setWithScaling:[312,2,1,""],upper:[312,3,1,""],withCentering:[312,3,1,""],withScaling:[312,3,1,""],write:[312,2,1,""]},"pyspark.ml.feature.RobustScalerModel":{clear:[313,2,1,""],copy:[313,2,1,""],explainParam:[313,2,1,""],explainParams:[313,2,1,""],extractParamMap:[313,2,1,""],getInputCol:[313,2,1,""],getLower:[313,2,1,""],getOrDefault:[313,2,1,""],getOutputCol:[313,2,1,""],getParam:[313,2,1,""],getRelativeError:[313,2,1,""],getUpper:[313,2,1,""],getWithCentering:[313,2,1,""],getWithScaling:[313,2,1,""],hasDefault:[313,2,1,""],hasParam:[313,2,1,""],inputCol:[313,3,1,""],isDefined:[313,2,1,""],isSet:[313,2,1,""],load:[313,2,1,""],lower:[313,3,1,""],median:[313,3,1,""],outputCol:[313,3,1,""],params:[313,3,1,""],range:[313,3,1,""],read:[313,2,1,""],relativeError:[313,3,1,""],save:[313,2,1,""],set:[313,2,1,""],setInputCol:[313,2,1,""],setOutputCol:[313,2,1,""],transform:[313,2,1,""],upper:[313,3,1,""],withCentering:[313,3,1,""],withScaling:[313,3,1,""],write:[313,2,1,""]},"pyspark.ml.feature.SQLTransformer":{clear:[314,2,1,""],copy:[314,2,1,""],explainParam:[314,2,1,""],explainParams:[314,2,1,""],extractParamMap:[314,2,1,""],getOrDefault:[314,2,1,""],getParam:[314,2,1,""],getStatement:[314,2,1,""],hasDefault:[314,2,1,""],hasParam:[314,2,1,""],isDefined:[314,2,1,""],isSet:[314,2,1,""],load:[314,2,1,""],params:[314,3,1,""],read:[314,2,1,""],save:[314,2,1,""],set:[314,2,1,""],setParams:[314,2,1,""],setStatement:[314,2,1,""],statement:[314,3,1,""],transform:[314,2,1,""],write:[314,2,1,""]},"pyspark.ml.feature.StandardScaler":{clear:[315,2,1,""],copy:[315,2,1,""],explainParam:[315,2,1,""],explainParams:[315,2,1,""],extractParamMap:[315,2,1,""],fit:[315,2,1,""],fitMultiple:[315,2,1,""],getInputCol:[315,2,1,""],getOrDefault:[315,2,1,""],getOutputCol:[315,2,1,""],getParam:[315,2,1,""],getWithMean:[315,2,1,""],getWithStd:[315,2,1,""],hasDefault:[315,2,1,""],hasParam:[315,2,1,""],inputCol:[315,3,1,""],isDefined:[315,2,1,""],isSet:[315,2,1,""],load:[315,2,1,""],outputCol:[315,3,1,""],params:[315,3,1,""],read:[315,2,1,""],save:[315,2,1,""],set:[315,2,1,""],setInputCol:[315,2,1,""],setOutputCol:[315,2,1,""],setParams:[315,2,1,""],setWithMean:[315,2,1,""],setWithStd:[315,2,1,""],withMean:[315,3,1,""],withStd:[315,3,1,""],write:[315,2,1,""]},"pyspark.ml.feature.StandardScalerModel":{clear:[316,2,1,""],copy:[316,2,1,""],explainParam:[316,2,1,""],explainParams:[316,2,1,""],extractParamMap:[316,2,1,""],getInputCol:[316,2,1,""],getOrDefault:[316,2,1,""],getOutputCol:[316,2,1,""],getParam:[316,2,1,""],getWithMean:[316,2,1,""],getWithStd:[316,2,1,""],hasDefault:[316,2,1,""],hasParam:[316,2,1,""],inputCol:[316,3,1,""],isDefined:[316,2,1,""],isSet:[316,2,1,""],load:[316,2,1,""],mean:[316,3,1,""],outputCol:[316,3,1,""],params:[316,3,1,""],read:[316,2,1,""],save:[316,2,1,""],set:[316,2,1,""],setInputCol:[316,2,1,""],setOutputCol:[316,2,1,""],std:[316,3,1,""],transform:[316,2,1,""],withMean:[316,3,1,""],withStd:[316,3,1,""],write:[316,2,1,""]},"pyspark.ml.feature.StopWordsRemover":{caseSensitive:[317,3,1,""],clear:[317,2,1,""],copy:[317,2,1,""],explainParam:[317,2,1,""],explainParams:[317,2,1,""],extractParamMap:[317,2,1,""],getCaseSensitive:[317,2,1,""],getInputCol:[317,2,1,""],getInputCols:[317,2,1,""],getLocale:[317,2,1,""],getOrDefault:[317,2,1,""],getOutputCol:[317,2,1,""],getOutputCols:[317,2,1,""],getParam:[317,2,1,""],getStopWords:[317,2,1,""],hasDefault:[317,2,1,""],hasParam:[317,2,1,""],inputCol:[317,3,1,""],inputCols:[317,3,1,""],isDefined:[317,2,1,""],isSet:[317,2,1,""],load:[317,2,1,""],loadDefaultStopWords:[317,2,1,""],locale:[317,3,1,""],outputCol:[317,3,1,""],outputCols:[317,3,1,""],params:[317,3,1,""],read:[317,2,1,""],save:[317,2,1,""],set:[317,2,1,""],setCaseSensitive:[317,2,1,""],setInputCol:[317,2,1,""],setInputCols:[317,2,1,""],setLocale:[317,2,1,""],setOutputCol:[317,2,1,""],setOutputCols:[317,2,1,""],setParams:[317,2,1,""],setStopWords:[317,2,1,""],stopWords:[317,3,1,""],transform:[317,2,1,""],write:[317,2,1,""]},"pyspark.ml.feature.StringIndexer":{clear:[318,2,1,""],copy:[318,2,1,""],explainParam:[318,2,1,""],explainParams:[318,2,1,""],extractParamMap:[318,2,1,""],fit:[318,2,1,""],fitMultiple:[318,2,1,""],getHandleInvalid:[318,2,1,""],getInputCol:[318,2,1,""],getInputCols:[318,2,1,""],getOrDefault:[318,2,1,""],getOutputCol:[318,2,1,""],getOutputCols:[318,2,1,""],getParam:[318,2,1,""],getStringOrderType:[318,2,1,""],handleInvalid:[318,3,1,""],hasDefault:[318,2,1,""],hasParam:[318,2,1,""],inputCol:[318,3,1,""],inputCols:[318,3,1,""],isDefined:[318,2,1,""],isSet:[318,2,1,""],load:[318,2,1,""],outputCol:[318,3,1,""],outputCols:[318,3,1,""],params:[318,3,1,""],read:[318,2,1,""],save:[318,2,1,""],set:[318,2,1,""],setHandleInvalid:[318,2,1,""],setInputCol:[318,2,1,""],setInputCols:[318,2,1,""],setOutputCol:[318,2,1,""],setOutputCols:[318,2,1,""],setParams:[318,2,1,""],setStringOrderType:[318,2,1,""],stringOrderType:[318,3,1,""],write:[318,2,1,""]},"pyspark.ml.feature.StringIndexerModel":{clear:[319,2,1,""],copy:[319,2,1,""],explainParam:[319,2,1,""],explainParams:[319,2,1,""],extractParamMap:[319,2,1,""],from_arrays_of_labels:[319,2,1,""],from_labels:[319,2,1,""],getHandleInvalid:[319,2,1,""],getInputCol:[319,2,1,""],getInputCols:[319,2,1,""],getOrDefault:[319,2,1,""],getOutputCol:[319,2,1,""],getOutputCols:[319,2,1,""],getParam:[319,2,1,""],getStringOrderType:[319,2,1,""],handleInvalid:[319,3,1,""],hasDefault:[319,2,1,""],hasParam:[319,2,1,""],inputCol:[319,3,1,""],inputCols:[319,3,1,""],isDefined:[319,2,1,""],isSet:[319,2,1,""],labels:[319,3,1,""],load:[319,2,1,""],outputCol:[319,3,1,""],outputCols:[319,3,1,""],params:[319,3,1,""],read:[319,2,1,""],save:[319,2,1,""],set:[319,2,1,""],setHandleInvalid:[319,2,1,""],setInputCol:[319,2,1,""],setInputCols:[319,2,1,""],setOutputCol:[319,2,1,""],setOutputCols:[319,2,1,""],stringOrderType:[319,3,1,""],transform:[319,2,1,""],write:[319,2,1,""]},"pyspark.ml.feature.Tokenizer":{clear:[320,2,1,""],copy:[320,2,1,""],explainParam:[320,2,1,""],explainParams:[320,2,1,""],extractParamMap:[320,2,1,""],getInputCol:[320,2,1,""],getOrDefault:[320,2,1,""],getOutputCol:[320,2,1,""],getParam:[320,2,1,""],hasDefault:[320,2,1,""],hasParam:[320,2,1,""],inputCol:[320,3,1,""],isDefined:[320,2,1,""],isSet:[320,2,1,""],load:[320,2,1,""],outputCol:[320,3,1,""],params:[320,3,1,""],read:[320,2,1,""],save:[320,2,1,""],set:[320,2,1,""],setInputCol:[320,2,1,""],setOutputCol:[320,2,1,""],setParams:[320,2,1,""],transform:[320,2,1,""],write:[320,2,1,""]},"pyspark.ml.feature.VectorAssembler":{clear:[323,2,1,""],copy:[323,2,1,""],explainParam:[323,2,1,""],explainParams:[323,2,1,""],extractParamMap:[323,2,1,""],getHandleInvalid:[323,2,1,""],getInputCols:[323,2,1,""],getOrDefault:[323,2,1,""],getOutputCol:[323,2,1,""],getParam:[323,2,1,""],handleInvalid:[323,3,1,""],hasDefault:[323,2,1,""],hasParam:[323,2,1,""],inputCols:[323,3,1,""],isDefined:[323,2,1,""],isSet:[323,2,1,""],load:[323,2,1,""],outputCol:[323,3,1,""],params:[323,3,1,""],read:[323,2,1,""],save:[323,2,1,""],set:[323,2,1,""],setHandleInvalid:[323,2,1,""],setInputCols:[323,2,1,""],setOutputCol:[323,2,1,""],setParams:[323,2,1,""],transform:[323,2,1,""],write:[323,2,1,""]},"pyspark.ml.feature.VectorIndexer":{clear:[324,2,1,""],copy:[324,2,1,""],explainParam:[324,2,1,""],explainParams:[324,2,1,""],extractParamMap:[324,2,1,""],fit:[324,2,1,""],fitMultiple:[324,2,1,""],getHandleInvalid:[324,2,1,""],getInputCol:[324,2,1,""],getMaxCategories:[324,2,1,""],getOrDefault:[324,2,1,""],getOutputCol:[324,2,1,""],getParam:[324,2,1,""],handleInvalid:[324,3,1,""],hasDefault:[324,2,1,""],hasParam:[324,2,1,""],inputCol:[324,3,1,""],isDefined:[324,2,1,""],isSet:[324,2,1,""],load:[324,2,1,""],maxCategories:[324,3,1,""],outputCol:[324,3,1,""],params:[324,3,1,""],read:[324,2,1,""],save:[324,2,1,""],set:[324,2,1,""],setHandleInvalid:[324,2,1,""],setInputCol:[324,2,1,""],setMaxCategories:[324,2,1,""],setOutputCol:[324,2,1,""],setParams:[324,2,1,""],write:[324,2,1,""]},"pyspark.ml.feature.VectorIndexerModel":{categoryMaps:[325,3,1,""],clear:[325,2,1,""],copy:[325,2,1,""],explainParam:[325,2,1,""],explainParams:[325,2,1,""],extractParamMap:[325,2,1,""],getHandleInvalid:[325,2,1,""],getInputCol:[325,2,1,""],getMaxCategories:[325,2,1,""],getOrDefault:[325,2,1,""],getOutputCol:[325,2,1,""],getParam:[325,2,1,""],handleInvalid:[325,3,1,""],hasDefault:[325,2,1,""],hasParam:[325,2,1,""],inputCol:[325,3,1,""],isDefined:[325,2,1,""],isSet:[325,2,1,""],load:[325,2,1,""],maxCategories:[325,3,1,""],numFeatures:[325,3,1,""],outputCol:[325,3,1,""],params:[325,3,1,""],read:[325,2,1,""],save:[325,2,1,""],set:[325,2,1,""],setInputCol:[325,2,1,""],setOutputCol:[325,2,1,""],transform:[325,2,1,""],write:[325,2,1,""]},"pyspark.ml.feature.VectorSizeHint":{clear:[326,2,1,""],copy:[326,2,1,""],explainParam:[326,2,1,""],explainParams:[326,2,1,""],extractParamMap:[326,2,1,""],getHandleInvalid:[326,2,1,""],getInputCol:[326,2,1,""],getOrDefault:[326,2,1,""],getParam:[326,2,1,""],getSize:[326,2,1,""],handleInvalid:[326,3,1,""],hasDefault:[326,2,1,""],hasParam:[326,2,1,""],inputCol:[326,3,1,""],isDefined:[326,2,1,""],isSet:[326,2,1,""],load:[326,2,1,""],params:[326,3,1,""],read:[326,2,1,""],save:[326,2,1,""],set:[326,2,1,""],setHandleInvalid:[326,2,1,""],setInputCol:[326,2,1,""],setParams:[326,2,1,""],setSize:[326,2,1,""],size:[326,3,1,""],transform:[326,2,1,""],write:[326,2,1,""]},"pyspark.ml.feature.VectorSlicer":{clear:[327,2,1,""],copy:[327,2,1,""],explainParam:[327,2,1,""],explainParams:[327,2,1,""],extractParamMap:[327,2,1,""],getIndices:[327,2,1,""],getInputCol:[327,2,1,""],getNames:[327,2,1,""],getOrDefault:[327,2,1,""],getOutputCol:[327,2,1,""],getParam:[327,2,1,""],hasDefault:[327,2,1,""],hasParam:[327,2,1,""],indices:[327,3,1,""],inputCol:[327,3,1,""],isDefined:[327,2,1,""],isSet:[327,2,1,""],load:[327,2,1,""],names:[327,3,1,""],outputCol:[327,3,1,""],params:[327,3,1,""],read:[327,2,1,""],save:[327,2,1,""],set:[327,2,1,""],setIndices:[327,2,1,""],setInputCol:[327,2,1,""],setNames:[327,2,1,""],setOutputCol:[327,2,1,""],setParams:[327,2,1,""],transform:[327,2,1,""],write:[327,2,1,""]},"pyspark.ml.feature.Word2Vec":{clear:[328,2,1,""],copy:[328,2,1,""],explainParam:[328,2,1,""],explainParams:[328,2,1,""],extractParamMap:[328,2,1,""],fit:[328,2,1,""],fitMultiple:[328,2,1,""],getInputCol:[328,2,1,""],getMaxIter:[328,2,1,""],getMaxSentenceLength:[328,2,1,""],getMinCount:[328,2,1,""],getNumPartitions:[328,2,1,""],getOrDefault:[328,2,1,""],getOutputCol:[328,2,1,""],getParam:[328,2,1,""],getSeed:[328,2,1,""],getStepSize:[328,2,1,""],getVectorSize:[328,2,1,""],getWindowSize:[328,2,1,""],hasDefault:[328,2,1,""],hasParam:[328,2,1,""],inputCol:[328,3,1,""],isDefined:[328,2,1,""],isSet:[328,2,1,""],load:[328,2,1,""],maxIter:[328,3,1,""],maxSentenceLength:[328,3,1,""],minCount:[328,3,1,""],numPartitions:[328,3,1,""],outputCol:[328,3,1,""],params:[328,3,1,""],read:[328,2,1,""],save:[328,2,1,""],seed:[328,3,1,""],set:[328,2,1,""],setInputCol:[328,2,1,""],setMaxIter:[328,2,1,""],setMaxSentenceLength:[328,2,1,""],setMinCount:[328,2,1,""],setNumPartitions:[328,2,1,""],setOutputCol:[328,2,1,""],setParams:[328,2,1,""],setSeed:[328,2,1,""],setStepSize:[328,2,1,""],setVectorSize:[328,2,1,""],setWindowSize:[328,2,1,""],stepSize:[328,3,1,""],vectorSize:[328,3,1,""],windowSize:[328,3,1,""],write:[328,2,1,""]},"pyspark.ml.feature.Word2VecModel":{clear:[329,2,1,""],copy:[329,2,1,""],explainParam:[329,2,1,""],explainParams:[329,2,1,""],extractParamMap:[329,2,1,""],findSynonyms:[329,2,1,""],findSynonymsArray:[329,2,1,""],getInputCol:[329,2,1,""],getMaxIter:[329,2,1,""],getMaxSentenceLength:[329,2,1,""],getMinCount:[329,2,1,""],getNumPartitions:[329,2,1,""],getOrDefault:[329,2,1,""],getOutputCol:[329,2,1,""],getParam:[329,2,1,""],getSeed:[329,2,1,""],getStepSize:[329,2,1,""],getVectorSize:[329,2,1,""],getVectors:[329,2,1,""],getWindowSize:[329,2,1,""],hasDefault:[329,2,1,""],hasParam:[329,2,1,""],inputCol:[329,3,1,""],isDefined:[329,2,1,""],isSet:[329,2,1,""],load:[329,2,1,""],maxIter:[329,3,1,""],maxSentenceLength:[329,3,1,""],minCount:[329,3,1,""],numPartitions:[329,3,1,""],outputCol:[329,3,1,""],params:[329,3,1,""],read:[329,2,1,""],save:[329,2,1,""],seed:[329,3,1,""],set:[329,2,1,""],setInputCol:[329,2,1,""],setOutputCol:[329,2,1,""],stepSize:[329,3,1,""],transform:[329,2,1,""],vectorSize:[329,3,1,""],windowSize:[329,3,1,""],write:[329,2,1,""]},"pyspark.ml.fpm":{FPGrowth:[330,1,1,""],FPGrowthModel:[331,1,1,""],PrefixSpan:[332,1,1,""]},"pyspark.ml.fpm.FPGrowth":{clear:[330,2,1,""],copy:[330,2,1,""],explainParam:[330,2,1,""],explainParams:[330,2,1,""],extractParamMap:[330,2,1,""],fit:[330,2,1,""],fitMultiple:[330,2,1,""],getItemsCol:[330,2,1,""],getMinConfidence:[330,2,1,""],getMinSupport:[330,2,1,""],getNumPartitions:[330,2,1,""],getOrDefault:[330,2,1,""],getParam:[330,2,1,""],getPredictionCol:[330,2,1,""],hasDefault:[330,2,1,""],hasParam:[330,2,1,""],isDefined:[330,2,1,""],isSet:[330,2,1,""],itemsCol:[330,3,1,""],load:[330,2,1,""],minConfidence:[330,3,1,""],minSupport:[330,3,1,""],numPartitions:[330,3,1,""],params:[330,3,1,""],predictionCol:[330,3,1,""],read:[330,2,1,""],save:[330,2,1,""],set:[330,2,1,""],setItemsCol:[330,2,1,""],setMinConfidence:[330,2,1,""],setMinSupport:[330,2,1,""],setNumPartitions:[330,2,1,""],setParams:[330,2,1,""],setPredictionCol:[330,2,1,""],write:[330,2,1,""]},"pyspark.ml.fpm.FPGrowthModel":{associationRules:[331,3,1,""],clear:[331,2,1,""],copy:[331,2,1,""],explainParam:[331,2,1,""],explainParams:[331,2,1,""],extractParamMap:[331,2,1,""],freqItemsets:[331,3,1,""],getItemsCol:[331,2,1,""],getMinConfidence:[331,2,1,""],getMinSupport:[331,2,1,""],getNumPartitions:[331,2,1,""],getOrDefault:[331,2,1,""],getParam:[331,2,1,""],getPredictionCol:[331,2,1,""],hasDefault:[331,2,1,""],hasParam:[331,2,1,""],isDefined:[331,2,1,""],isSet:[331,2,1,""],itemsCol:[331,3,1,""],load:[331,2,1,""],minConfidence:[331,3,1,""],minSupport:[331,3,1,""],numPartitions:[331,3,1,""],params:[331,3,1,""],predictionCol:[331,3,1,""],read:[331,2,1,""],save:[331,2,1,""],set:[331,2,1,""],setItemsCol:[331,2,1,""],setMinConfidence:[331,2,1,""],setPredictionCol:[331,2,1,""],transform:[331,2,1,""],write:[331,2,1,""]},"pyspark.ml.fpm.PrefixSpan":{clear:[332,2,1,""],copy:[332,2,1,""],explainParam:[332,2,1,""],explainParams:[332,2,1,""],extractParamMap:[332,2,1,""],findFrequentSequentialPatterns:[332,2,1,""],getMaxLocalProjDBSize:[332,2,1,""],getMaxPatternLength:[332,2,1,""],getMinSupport:[332,2,1,""],getOrDefault:[332,2,1,""],getParam:[332,2,1,""],getSequenceCol:[332,2,1,""],hasDefault:[332,2,1,""],hasParam:[332,2,1,""],isDefined:[332,2,1,""],isSet:[332,2,1,""],maxLocalProjDBSize:[332,3,1,""],maxPatternLength:[332,3,1,""],minSupport:[332,3,1,""],params:[332,3,1,""],sequenceCol:[332,3,1,""],set:[332,2,1,""],setMaxLocalProjDBSize:[332,2,1,""],setMaxPatternLength:[332,2,1,""],setMinSupport:[332,2,1,""],setParams:[332,2,1,""],setSequenceCol:[332,2,1,""]},"pyspark.ml.functions":{vector_to_array:[333,4,1,""]},"pyspark.ml.image":{ImageSchema:[334,3,1,""],_ImageSchema:[335,1,1,""]},"pyspark.ml.image._ImageSchema":{columnSchema:[335,3,1,""],imageFields:[335,3,1,""],imageSchema:[335,3,1,""],ocvTypes:[335,3,1,""],toImage:[335,2,1,""],toNDArray:[335,2,1,""],undefinedImageType:[335,3,1,""]},"pyspark.ml.linalg":{DenseMatrix:[336,1,1,""],DenseVector:[337,1,1,""],Matrices:[338,1,1,""],Matrix:[339,1,1,""],SparseMatrix:[340,1,1,""],SparseVector:[341,1,1,""],Vector:[342,1,1,""],Vectors:[343,1,1,""]},"pyspark.ml.linalg.DenseMatrix":{toArray:[336,2,1,""],toSparse:[336,2,1,""]},"pyspark.ml.linalg.DenseVector":{dot:[337,2,1,""],norm:[337,2,1,""],numNonzeros:[337,2,1,""],squared_distance:[337,2,1,""],toArray:[337,2,1,""],values:[337,3,1,""]},"pyspark.ml.linalg.Matrices":{dense:[338,2,1,""],sparse:[338,2,1,""]},"pyspark.ml.linalg.Matrix":{toArray:[339,2,1,""]},"pyspark.ml.linalg.SparseMatrix":{toArray:[340,2,1,""],toDense:[340,2,1,""]},"pyspark.ml.linalg.SparseVector":{dot:[341,2,1,""],indices:[2,3,1,""],norm:[341,2,1,""],numNonzeros:[341,2,1,""],size:[2,3,1,""],squared_distance:[341,2,1,""],toArray:[341,2,1,""],values:[2,3,1,""]},"pyspark.ml.linalg.Vector":{toArray:[342,2,1,""]},"pyspark.ml.linalg.Vectors":{dense:[343,2,1,""],norm:[343,2,1,""],sparse:[343,2,1,""],squared_distance:[343,2,1,""],zeros:[343,2,1,""]},"pyspark.ml.param":{Param:[344,1,1,""],Params:[345,1,1,""],TypeConverters:[346,1,1,""]},"pyspark.ml.param.Params":{clear:[345,2,1,""],copy:[345,2,1,""],explainParam:[345,2,1,""],explainParams:[345,2,1,""],extractParamMap:[345,2,1,""],getOrDefault:[345,2,1,""],getParam:[345,2,1,""],hasDefault:[345,2,1,""],hasParam:[345,2,1,""],isDefined:[345,2,1,""],isSet:[345,2,1,""],params:[345,3,1,""],set:[345,2,1,""]},"pyspark.ml.param.TypeConverters":{identity:[346,2,1,""],toBoolean:[346,2,1,""],toFloat:[346,2,1,""],toInt:[346,2,1,""],toList:[346,2,1,""],toListFloat:[346,2,1,""],toListInt:[346,2,1,""],toListListFloat:[346,2,1,""],toListString:[346,2,1,""],toMatrix:[346,2,1,""],toString:[346,2,1,""],toVector:[346,2,1,""]},"pyspark.ml.recommendation":{ALS:[347,1,1,""],ALSModel:[348,1,1,""]},"pyspark.ml.recommendation.ALS":{alpha:[347,3,1,""],blockSize:[347,3,1,""],checkpointInterval:[347,3,1,""],clear:[347,2,1,""],coldStartStrategy:[347,3,1,""],copy:[347,2,1,""],explainParam:[347,2,1,""],explainParams:[347,2,1,""],extractParamMap:[347,2,1,""],finalStorageLevel:[347,3,1,""],fit:[347,2,1,""],fitMultiple:[347,2,1,""],getAlpha:[347,2,1,""],getBlockSize:[347,2,1,""],getCheckpointInterval:[347,2,1,""],getColdStartStrategy:[347,2,1,""],getFinalStorageLevel:[347,2,1,""],getImplicitPrefs:[347,2,1,""],getIntermediateStorageLevel:[347,2,1,""],getItemCol:[347,2,1,""],getMaxIter:[347,2,1,""],getNonnegative:[347,2,1,""],getNumItemBlocks:[347,2,1,""],getNumUserBlocks:[347,2,1,""],getOrDefault:[347,2,1,""],getParam:[347,2,1,""],getPredictionCol:[347,2,1,""],getRank:[347,2,1,""],getRatingCol:[347,2,1,""],getRegParam:[347,2,1,""],getSeed:[347,2,1,""],getUserCol:[347,2,1,""],hasDefault:[347,2,1,""],hasParam:[347,2,1,""],implicitPrefs:[347,3,1,""],intermediateStorageLevel:[347,3,1,""],isDefined:[347,2,1,""],isSet:[347,2,1,""],itemCol:[347,3,1,""],load:[347,2,1,""],maxIter:[347,3,1,""],nonnegative:[347,3,1,""],numItemBlocks:[347,3,1,""],numUserBlocks:[347,3,1,""],params:[347,3,1,""],predictionCol:[347,3,1,""],rank:[347,3,1,""],ratingCol:[347,3,1,""],read:[347,2,1,""],regParam:[347,3,1,""],save:[347,2,1,""],seed:[347,3,1,""],set:[347,2,1,""],setAlpha:[347,2,1,""],setBlockSize:[347,2,1,""],setCheckpointInterval:[347,2,1,""],setColdStartStrategy:[347,2,1,""],setFinalStorageLevel:[347,2,1,""],setImplicitPrefs:[347,2,1,""],setIntermediateStorageLevel:[347,2,1,""],setItemCol:[347,2,1,""],setMaxIter:[347,2,1,""],setNonnegative:[347,2,1,""],setNumBlocks:[347,2,1,""],setNumItemBlocks:[347,2,1,""],setNumUserBlocks:[347,2,1,""],setParams:[347,2,1,""],setPredictionCol:[347,2,1,""],setRank:[347,2,1,""],setRatingCol:[347,2,1,""],setRegParam:[347,2,1,""],setSeed:[347,2,1,""],setUserCol:[347,2,1,""],userCol:[347,3,1,""],write:[347,2,1,""]},"pyspark.ml.recommendation.ALSModel":{blockSize:[348,3,1,""],clear:[348,2,1,""],coldStartStrategy:[348,3,1,""],copy:[348,2,1,""],explainParam:[348,2,1,""],explainParams:[348,2,1,""],extractParamMap:[348,2,1,""],getBlockSize:[348,2,1,""],getColdStartStrategy:[348,2,1,""],getItemCol:[348,2,1,""],getOrDefault:[348,2,1,""],getParam:[348,2,1,""],getPredictionCol:[348,2,1,""],getUserCol:[348,2,1,""],hasDefault:[348,2,1,""],hasParam:[348,2,1,""],isDefined:[348,2,1,""],isSet:[348,2,1,""],itemCol:[348,3,1,""],itemFactors:[348,3,1,""],load:[348,2,1,""],params:[348,3,1,""],predictionCol:[348,3,1,""],rank:[348,3,1,""],read:[348,2,1,""],recommendForAllItems:[348,2,1,""],recommendForAllUsers:[348,2,1,""],recommendForItemSubset:[348,2,1,""],recommendForUserSubset:[348,2,1,""],save:[348,2,1,""],set:[348,2,1,""],setBlockSize:[348,2,1,""],setColdStartStrategy:[348,2,1,""],setItemCol:[348,2,1,""],setPredictionCol:[348,2,1,""],setUserCol:[348,2,1,""],transform:[348,2,1,""],userCol:[348,3,1,""],userFactors:[348,3,1,""],write:[348,2,1,""]},"pyspark.ml.regression":{AFTSurvivalRegression:[349,1,1,""],AFTSurvivalRegressionModel:[350,1,1,""],DecisionTreeRegressionModel:[351,1,1,""],DecisionTreeRegressor:[352,1,1,""],FMRegressionModel:[353,1,1,""],FMRegressor:[354,1,1,""],GBTRegressionModel:[355,1,1,""],GBTRegressor:[356,1,1,""],GeneralizedLinearRegression:[357,1,1,""],GeneralizedLinearRegressionModel:[358,1,1,""],GeneralizedLinearRegressionSummary:[359,1,1,""],GeneralizedLinearRegressionTrainingSummary:[360,1,1,""],IsotonicRegression:[361,1,1,""],IsotonicRegressionModel:[362,1,1,""],LinearRegression:[363,1,1,""],LinearRegressionModel:[364,1,1,""],LinearRegressionSummary:[365,1,1,""],LinearRegressionTrainingSummary:[366,1,1,""],RandomForestRegressionModel:[367,1,1,""],RandomForestRegressor:[368,1,1,""]},"pyspark.ml.regression.AFTSurvivalRegression":{aggregationDepth:[349,3,1,""],censorCol:[349,3,1,""],clear:[349,2,1,""],copy:[349,2,1,""],explainParam:[349,2,1,""],explainParams:[349,2,1,""],extractParamMap:[349,2,1,""],featuresCol:[349,3,1,""],fit:[349,2,1,""],fitIntercept:[349,3,1,""],fitMultiple:[349,2,1,""],getAggregationDepth:[349,2,1,""],getCensorCol:[349,2,1,""],getFeaturesCol:[349,2,1,""],getFitIntercept:[349,2,1,""],getLabelCol:[349,2,1,""],getMaxIter:[349,2,1,""],getOrDefault:[349,2,1,""],getParam:[349,2,1,""],getPredictionCol:[349,2,1,""],getQuantileProbabilities:[349,2,1,""],getQuantilesCol:[349,2,1,""],getTol:[349,2,1,""],hasDefault:[349,2,1,""],hasParam:[349,2,1,""],isDefined:[349,2,1,""],isSet:[349,2,1,""],labelCol:[349,3,1,""],load:[349,2,1,""],maxIter:[349,3,1,""],params:[349,3,1,""],predictionCol:[349,3,1,""],quantileProbabilities:[349,3,1,""],quantilesCol:[349,3,1,""],read:[349,2,1,""],save:[349,2,1,""],set:[349,2,1,""],setAggregationDepth:[349,2,1,""],setCensorCol:[349,2,1,""],setFeaturesCol:[349,2,1,""],setFitIntercept:[349,2,1,""],setLabelCol:[349,2,1,""],setMaxIter:[349,2,1,""],setParams:[349,2,1,""],setPredictionCol:[349,2,1,""],setQuantileProbabilities:[349,2,1,""],setQuantilesCol:[349,2,1,""],setTol:[349,2,1,""],tol:[349,3,1,""],write:[349,2,1,""]},"pyspark.ml.regression.AFTSurvivalRegressionModel":{aggregationDepth:[350,3,1,""],censorCol:[350,3,1,""],clear:[350,2,1,""],coefficients:[350,3,1,""],copy:[350,2,1,""],explainParam:[350,2,1,""],explainParams:[350,2,1,""],extractParamMap:[350,2,1,""],featuresCol:[350,3,1,""],fitIntercept:[350,3,1,""],getAggregationDepth:[350,2,1,""],getCensorCol:[350,2,1,""],getFeaturesCol:[350,2,1,""],getFitIntercept:[350,2,1,""],getLabelCol:[350,2,1,""],getMaxIter:[350,2,1,""],getOrDefault:[350,2,1,""],getParam:[350,2,1,""],getPredictionCol:[350,2,1,""],getQuantileProbabilities:[350,2,1,""],getQuantilesCol:[350,2,1,""],getTol:[350,2,1,""],hasDefault:[350,2,1,""],hasParam:[350,2,1,""],intercept:[350,3,1,""],isDefined:[350,2,1,""],isSet:[350,2,1,""],labelCol:[350,3,1,""],load:[350,2,1,""],maxIter:[350,3,1,""],numFeatures:[350,3,1,""],params:[350,3,1,""],predict:[350,2,1,""],predictQuantiles:[350,2,1,""],predictionCol:[350,3,1,""],quantileProbabilities:[350,3,1,""],quantilesCol:[350,3,1,""],read:[350,2,1,""],save:[350,2,1,""],scale:[350,3,1,""],set:[350,2,1,""],setFeaturesCol:[350,2,1,""],setPredictionCol:[350,2,1,""],setQuantileProbabilities:[350,2,1,""],setQuantilesCol:[350,2,1,""],tol:[350,3,1,""],transform:[350,2,1,""],write:[350,2,1,""]},"pyspark.ml.regression.DecisionTreeRegressionModel":{cacheNodeIds:[351,3,1,""],checkpointInterval:[351,3,1,""],clear:[351,2,1,""],copy:[351,2,1,""],depth:[351,3,1,""],explainParam:[351,2,1,""],explainParams:[351,2,1,""],extractParamMap:[351,2,1,""],featureImportances:[351,3,1,""],featuresCol:[351,3,1,""],getCacheNodeIds:[351,2,1,""],getCheckpointInterval:[351,2,1,""],getFeaturesCol:[351,2,1,""],getImpurity:[351,2,1,""],getLabelCol:[351,2,1,""],getLeafCol:[351,2,1,""],getMaxBins:[351,2,1,""],getMaxDepth:[351,2,1,""],getMaxMemoryInMB:[351,2,1,""],getMinInfoGain:[351,2,1,""],getMinInstancesPerNode:[351,2,1,""],getMinWeightFractionPerNode:[351,2,1,""],getOrDefault:[351,2,1,""],getParam:[351,2,1,""],getPredictionCol:[351,2,1,""],getSeed:[351,2,1,""],getVarianceCol:[351,2,1,""],getWeightCol:[351,2,1,""],hasDefault:[351,2,1,""],hasParam:[351,2,1,""],impurity:[351,3,1,""],isDefined:[351,2,1,""],isSet:[351,2,1,""],labelCol:[351,3,1,""],leafCol:[351,3,1,""],load:[351,2,1,""],maxBins:[351,3,1,""],maxDepth:[351,3,1,""],maxMemoryInMB:[351,3,1,""],minInfoGain:[351,3,1,""],minInstancesPerNode:[351,3,1,""],minWeightFractionPerNode:[351,3,1,""],numFeatures:[351,3,1,""],numNodes:[351,3,1,""],params:[351,3,1,""],predict:[351,2,1,""],predictLeaf:[351,2,1,""],predictionCol:[351,3,1,""],read:[351,2,1,""],save:[351,2,1,""],seed:[351,3,1,""],set:[351,2,1,""],setFeaturesCol:[351,2,1,""],setLeafCol:[351,2,1,""],setPredictionCol:[351,2,1,""],setVarianceCol:[351,2,1,""],supportedImpurities:[351,3,1,""],toDebugString:[351,3,1,""],transform:[351,2,1,""],varianceCol:[351,3,1,""],weightCol:[351,3,1,""],write:[351,2,1,""]},"pyspark.ml.regression.DecisionTreeRegressor":{cacheNodeIds:[352,3,1,""],checkpointInterval:[352,3,1,""],clear:[352,2,1,""],copy:[352,2,1,""],explainParam:[352,2,1,""],explainParams:[352,2,1,""],extractParamMap:[352,2,1,""],featuresCol:[352,3,1,""],fit:[352,2,1,""],fitMultiple:[352,2,1,""],getCacheNodeIds:[352,2,1,""],getCheckpointInterval:[352,2,1,""],getFeaturesCol:[352,2,1,""],getImpurity:[352,2,1,""],getLabelCol:[352,2,1,""],getLeafCol:[352,2,1,""],getMaxBins:[352,2,1,""],getMaxDepth:[352,2,1,""],getMaxMemoryInMB:[352,2,1,""],getMinInfoGain:[352,2,1,""],getMinInstancesPerNode:[352,2,1,""],getMinWeightFractionPerNode:[352,2,1,""],getOrDefault:[352,2,1,""],getParam:[352,2,1,""],getPredictionCol:[352,2,1,""],getSeed:[352,2,1,""],getVarianceCol:[352,2,1,""],getWeightCol:[352,2,1,""],hasDefault:[352,2,1,""],hasParam:[352,2,1,""],impurity:[352,3,1,""],isDefined:[352,2,1,""],isSet:[352,2,1,""],labelCol:[352,3,1,""],leafCol:[352,3,1,""],load:[352,2,1,""],maxBins:[352,3,1,""],maxDepth:[352,3,1,""],maxMemoryInMB:[352,3,1,""],minInfoGain:[352,3,1,""],minInstancesPerNode:[352,3,1,""],minWeightFractionPerNode:[352,3,1,""],params:[352,3,1,""],predictionCol:[352,3,1,""],read:[352,2,1,""],save:[352,2,1,""],seed:[352,3,1,""],set:[352,2,1,""],setCacheNodeIds:[352,2,1,""],setCheckpointInterval:[352,2,1,""],setFeaturesCol:[352,2,1,""],setImpurity:[352,2,1,""],setLabelCol:[352,2,1,""],setLeafCol:[352,2,1,""],setMaxBins:[352,2,1,""],setMaxDepth:[352,2,1,""],setMaxMemoryInMB:[352,2,1,""],setMinInfoGain:[352,2,1,""],setMinInstancesPerNode:[352,2,1,""],setMinWeightFractionPerNode:[352,2,1,""],setParams:[352,2,1,""],setPredictionCol:[352,2,1,""],setSeed:[352,2,1,""],setVarianceCol:[352,2,1,""],setWeightCol:[352,2,1,""],supportedImpurities:[352,3,1,""],varianceCol:[352,3,1,""],weightCol:[352,3,1,""],write:[352,2,1,""]},"pyspark.ml.regression.FMRegressionModel":{clear:[353,2,1,""],copy:[353,2,1,""],explainParam:[353,2,1,""],explainParams:[353,2,1,""],extractParamMap:[353,2,1,""],factorSize:[353,3,1,""],factors:[353,3,1,""],featuresCol:[353,3,1,""],fitIntercept:[353,3,1,""],fitLinear:[353,3,1,""],getFactorSize:[353,2,1,""],getFeaturesCol:[353,2,1,""],getFitIntercept:[353,2,1,""],getFitLinear:[353,2,1,""],getInitStd:[353,2,1,""],getLabelCol:[353,2,1,""],getMaxIter:[353,2,1,""],getMiniBatchFraction:[353,2,1,""],getOrDefault:[353,2,1,""],getParam:[353,2,1,""],getPredictionCol:[353,2,1,""],getRegParam:[353,2,1,""],getSeed:[353,2,1,""],getSolver:[353,2,1,""],getStepSize:[353,2,1,""],getTol:[353,2,1,""],hasDefault:[353,2,1,""],hasParam:[353,2,1,""],initStd:[353,3,1,""],intercept:[353,3,1,""],isDefined:[353,2,1,""],isSet:[353,2,1,""],labelCol:[353,3,1,""],linear:[353,3,1,""],load:[353,2,1,""],maxIter:[353,3,1,""],miniBatchFraction:[353,3,1,""],numFeatures:[353,3,1,""],params:[353,3,1,""],predict:[353,2,1,""],predictionCol:[353,3,1,""],read:[353,2,1,""],regParam:[353,3,1,""],save:[353,2,1,""],seed:[353,3,1,""],set:[353,2,1,""],setFeaturesCol:[353,2,1,""],setPredictionCol:[353,2,1,""],solver:[353,3,1,""],stepSize:[353,3,1,""],tol:[353,3,1,""],transform:[353,2,1,""],write:[353,2,1,""]},"pyspark.ml.regression.FMRegressor":{clear:[354,2,1,""],copy:[354,2,1,""],explainParam:[354,2,1,""],explainParams:[354,2,1,""],extractParamMap:[354,2,1,""],factorSize:[354,3,1,""],featuresCol:[354,3,1,""],fit:[354,2,1,""],fitIntercept:[354,3,1,""],fitLinear:[354,3,1,""],fitMultiple:[354,2,1,""],getFactorSize:[354,2,1,""],getFeaturesCol:[354,2,1,""],getFitIntercept:[354,2,1,""],getFitLinear:[354,2,1,""],getInitStd:[354,2,1,""],getLabelCol:[354,2,1,""],getMaxIter:[354,2,1,""],getMiniBatchFraction:[354,2,1,""],getOrDefault:[354,2,1,""],getParam:[354,2,1,""],getPredictionCol:[354,2,1,""],getRegParam:[354,2,1,""],getSeed:[354,2,1,""],getSolver:[354,2,1,""],getStepSize:[354,2,1,""],getTol:[354,2,1,""],hasDefault:[354,2,1,""],hasParam:[354,2,1,""],initStd:[354,3,1,""],isDefined:[354,2,1,""],isSet:[354,2,1,""],labelCol:[354,3,1,""],load:[354,2,1,""],maxIter:[354,3,1,""],miniBatchFraction:[354,3,1,""],params:[354,3,1,""],predictionCol:[354,3,1,""],read:[354,2,1,""],regParam:[354,3,1,""],save:[354,2,1,""],seed:[354,3,1,""],set:[354,2,1,""],setFactorSize:[354,2,1,""],setFeaturesCol:[354,2,1,""],setFitIntercept:[354,2,1,""],setFitLinear:[354,2,1,""],setInitStd:[354,2,1,""],setLabelCol:[354,2,1,""],setMaxIter:[354,2,1,""],setMiniBatchFraction:[354,2,1,""],setParams:[354,2,1,""],setPredictionCol:[354,2,1,""],setRegParam:[354,2,1,""],setSeed:[354,2,1,""],setSolver:[354,2,1,""],setStepSize:[354,2,1,""],setTol:[354,2,1,""],solver:[354,3,1,""],stepSize:[354,3,1,""],tol:[354,3,1,""],write:[354,2,1,""]},"pyspark.ml.regression.GBTRegressionModel":{cacheNodeIds:[355,3,1,""],checkpointInterval:[355,3,1,""],clear:[355,2,1,""],copy:[355,2,1,""],evaluateEachIteration:[355,2,1,""],explainParam:[355,2,1,""],explainParams:[355,2,1,""],extractParamMap:[355,2,1,""],featureImportances:[355,3,1,""],featureSubsetStrategy:[355,3,1,""],featuresCol:[355,3,1,""],getCacheNodeIds:[355,2,1,""],getCheckpointInterval:[355,2,1,""],getFeatureSubsetStrategy:[355,2,1,""],getFeaturesCol:[355,2,1,""],getImpurity:[355,2,1,""],getLabelCol:[355,2,1,""],getLeafCol:[355,2,1,""],getLossType:[355,2,1,""],getMaxBins:[355,2,1,""],getMaxDepth:[355,2,1,""],getMaxIter:[355,2,1,""],getMaxMemoryInMB:[355,2,1,""],getMinInfoGain:[355,2,1,""],getMinInstancesPerNode:[355,2,1,""],getMinWeightFractionPerNode:[355,2,1,""],getNumTrees:[355,3,1,""],getOrDefault:[355,2,1,""],getParam:[355,2,1,""],getPredictionCol:[355,2,1,""],getSeed:[355,2,1,""],getStepSize:[355,2,1,""],getSubsamplingRate:[355,2,1,""],getValidationIndicatorCol:[355,2,1,""],getValidationTol:[355,2,1,""],getWeightCol:[355,2,1,""],hasDefault:[355,2,1,""],hasParam:[355,2,1,""],impurity:[355,3,1,""],isDefined:[355,2,1,""],isSet:[355,2,1,""],labelCol:[355,3,1,""],leafCol:[355,3,1,""],load:[355,2,1,""],lossType:[355,3,1,""],maxBins:[355,3,1,""],maxDepth:[355,3,1,""],maxIter:[355,3,1,""],maxMemoryInMB:[355,3,1,""],minInfoGain:[355,3,1,""],minInstancesPerNode:[355,3,1,""],minWeightFractionPerNode:[355,3,1,""],numFeatures:[355,3,1,""],params:[355,3,1,""],predict:[355,2,1,""],predictLeaf:[355,2,1,""],predictionCol:[355,3,1,""],read:[355,2,1,""],save:[355,2,1,""],seed:[355,3,1,""],set:[355,2,1,""],setFeaturesCol:[355,2,1,""],setLeafCol:[355,2,1,""],setPredictionCol:[355,2,1,""],stepSize:[355,3,1,""],subsamplingRate:[355,3,1,""],supportedFeatureSubsetStrategies:[355,3,1,""],supportedImpurities:[355,3,1,""],supportedLossTypes:[355,3,1,""],toDebugString:[355,3,1,""],totalNumNodes:[355,3,1,""],transform:[355,2,1,""],treeWeights:[355,3,1,""],trees:[355,3,1,""],validationIndicatorCol:[355,3,1,""],validationTol:[355,3,1,""],weightCol:[355,3,1,""],write:[355,2,1,""]},"pyspark.ml.regression.GBTRegressor":{cacheNodeIds:[356,3,1,""],checkpointInterval:[356,3,1,""],clear:[356,2,1,""],copy:[356,2,1,""],explainParam:[356,2,1,""],explainParams:[356,2,1,""],extractParamMap:[356,2,1,""],featureSubsetStrategy:[356,3,1,""],featuresCol:[356,3,1,""],fit:[356,2,1,""],fitMultiple:[356,2,1,""],getCacheNodeIds:[356,2,1,""],getCheckpointInterval:[356,2,1,""],getFeatureSubsetStrategy:[356,2,1,""],getFeaturesCol:[356,2,1,""],getImpurity:[356,2,1,""],getLabelCol:[356,2,1,""],getLeafCol:[356,2,1,""],getLossType:[356,2,1,""],getMaxBins:[356,2,1,""],getMaxDepth:[356,2,1,""],getMaxIter:[356,2,1,""],getMaxMemoryInMB:[356,2,1,""],getMinInfoGain:[356,2,1,""],getMinInstancesPerNode:[356,2,1,""],getMinWeightFractionPerNode:[356,2,1,""],getOrDefault:[356,2,1,""],getParam:[356,2,1,""],getPredictionCol:[356,2,1,""],getSeed:[356,2,1,""],getStepSize:[356,2,1,""],getSubsamplingRate:[356,2,1,""],getValidationIndicatorCol:[356,2,1,""],getValidationTol:[356,2,1,""],getWeightCol:[356,2,1,""],hasDefault:[356,2,1,""],hasParam:[356,2,1,""],impurity:[356,3,1,""],isDefined:[356,2,1,""],isSet:[356,2,1,""],labelCol:[356,3,1,""],leafCol:[356,3,1,""],load:[356,2,1,""],lossType:[356,3,1,""],maxBins:[356,3,1,""],maxDepth:[356,3,1,""],maxIter:[356,3,1,""],maxMemoryInMB:[356,3,1,""],minInfoGain:[356,3,1,""],minInstancesPerNode:[356,3,1,""],minWeightFractionPerNode:[356,3,1,""],params:[356,3,1,""],predictionCol:[356,3,1,""],read:[356,2,1,""],save:[356,2,1,""],seed:[356,3,1,""],set:[356,2,1,""],setCacheNodeIds:[356,2,1,""],setCheckpointInterval:[356,2,1,""],setFeatureSubsetStrategy:[356,2,1,""],setFeaturesCol:[356,2,1,""],setImpurity:[356,2,1,""],setLabelCol:[356,2,1,""],setLeafCol:[356,2,1,""],setLossType:[356,2,1,""],setMaxBins:[356,2,1,""],setMaxDepth:[356,2,1,""],setMaxIter:[356,2,1,""],setMaxMemoryInMB:[356,2,1,""],setMinInfoGain:[356,2,1,""],setMinInstancesPerNode:[356,2,1,""],setMinWeightFractionPerNode:[356,2,1,""],setParams:[356,2,1,""],setPredictionCol:[356,2,1,""],setSeed:[356,2,1,""],setStepSize:[356,2,1,""],setSubsamplingRate:[356,2,1,""],setValidationIndicatorCol:[356,2,1,""],setWeightCol:[356,2,1,""],stepSize:[356,3,1,""],subsamplingRate:[356,3,1,""],supportedFeatureSubsetStrategies:[356,3,1,""],supportedImpurities:[356,3,1,""],supportedLossTypes:[356,3,1,""],validationIndicatorCol:[356,3,1,""],validationTol:[356,3,1,""],weightCol:[356,3,1,""],write:[356,2,1,""]},"pyspark.ml.regression.GeneralizedLinearRegression":{aggregationDepth:[357,3,1,""],clear:[357,2,1,""],copy:[357,2,1,""],explainParam:[357,2,1,""],explainParams:[357,2,1,""],extractParamMap:[357,2,1,""],family:[357,3,1,""],featuresCol:[357,3,1,""],fit:[357,2,1,""],fitIntercept:[357,3,1,""],fitMultiple:[357,2,1,""],getAggregationDepth:[357,2,1,""],getFamily:[357,2,1,""],getFeaturesCol:[357,2,1,""],getFitIntercept:[357,2,1,""],getLabelCol:[357,2,1,""],getLink:[357,2,1,""],getLinkPower:[357,2,1,""],getLinkPredictionCol:[357,2,1,""],getMaxIter:[357,2,1,""],getOffsetCol:[357,2,1,""],getOrDefault:[357,2,1,""],getParam:[357,2,1,""],getPredictionCol:[357,2,1,""],getRegParam:[357,2,1,""],getSolver:[357,2,1,""],getTol:[357,2,1,""],getVariancePower:[357,2,1,""],getWeightCol:[357,2,1,""],hasDefault:[357,2,1,""],hasParam:[357,2,1,""],isDefined:[357,2,1,""],isSet:[357,2,1,""],labelCol:[357,3,1,""],link:[357,3,1,""],linkPower:[357,3,1,""],linkPredictionCol:[357,3,1,""],load:[357,2,1,""],maxIter:[357,3,1,""],offsetCol:[357,3,1,""],params:[357,3,1,""],predictionCol:[357,3,1,""],read:[357,2,1,""],regParam:[357,3,1,""],save:[357,2,1,""],set:[357,2,1,""],setAggregationDepth:[357,2,1,""],setFamily:[357,2,1,""],setFeaturesCol:[357,2,1,""],setFitIntercept:[357,2,1,""],setLabelCol:[357,2,1,""],setLink:[357,2,1,""],setLinkPower:[357,2,1,""],setLinkPredictionCol:[357,2,1,""],setMaxIter:[357,2,1,""],setOffsetCol:[357,2,1,""],setParams:[357,2,1,""],setPredictionCol:[357,2,1,""],setRegParam:[357,2,1,""],setSolver:[357,2,1,""],setTol:[357,2,1,""],setVariancePower:[357,2,1,""],setWeightCol:[357,2,1,""],solver:[357,3,1,""],tol:[357,3,1,""],variancePower:[357,3,1,""],weightCol:[357,3,1,""],write:[357,2,1,""]},"pyspark.ml.regression.GeneralizedLinearRegressionModel":{aggregationDepth:[358,3,1,""],clear:[358,2,1,""],coefficients:[358,3,1,""],copy:[358,2,1,""],evaluate:[358,2,1,""],explainParam:[358,2,1,""],explainParams:[358,2,1,""],extractParamMap:[358,2,1,""],family:[358,3,1,""],featuresCol:[358,3,1,""],fitIntercept:[358,3,1,""],getAggregationDepth:[358,2,1,""],getFamily:[358,2,1,""],getFeaturesCol:[358,2,1,""],getFitIntercept:[358,2,1,""],getLabelCol:[358,2,1,""],getLink:[358,2,1,""],getLinkPower:[358,2,1,""],getLinkPredictionCol:[358,2,1,""],getMaxIter:[358,2,1,""],getOffsetCol:[358,2,1,""],getOrDefault:[358,2,1,""],getParam:[358,2,1,""],getPredictionCol:[358,2,1,""],getRegParam:[358,2,1,""],getSolver:[358,2,1,""],getTol:[358,2,1,""],getVariancePower:[358,2,1,""],getWeightCol:[358,2,1,""],hasDefault:[358,2,1,""],hasParam:[358,2,1,""],hasSummary:[358,3,1,""],intercept:[358,3,1,""],isDefined:[358,2,1,""],isSet:[358,2,1,""],labelCol:[358,3,1,""],link:[358,3,1,""],linkPower:[358,3,1,""],linkPredictionCol:[358,3,1,""],load:[358,2,1,""],maxIter:[358,3,1,""],numFeatures:[358,3,1,""],offsetCol:[358,3,1,""],params:[358,3,1,""],predict:[358,2,1,""],predictionCol:[358,3,1,""],read:[358,2,1,""],regParam:[358,3,1,""],save:[358,2,1,""],set:[358,2,1,""],setFeaturesCol:[358,2,1,""],setLinkPredictionCol:[358,2,1,""],setPredictionCol:[358,2,1,""],solver:[358,3,1,""],summary:[358,3,1,""],tol:[358,3,1,""],transform:[358,2,1,""],variancePower:[358,3,1,""],weightCol:[358,3,1,""],write:[358,2,1,""]},"pyspark.ml.regression.GeneralizedLinearRegressionSummary":{aic:[359,3,1,""],degreesOfFreedom:[359,3,1,""],deviance:[359,3,1,""],dispersion:[359,3,1,""],nullDeviance:[359,3,1,""],numInstances:[359,3,1,""],predictionCol:[359,3,1,""],predictions:[359,3,1,""],rank:[359,3,1,""],residualDegreeOfFreedom:[359,3,1,""],residualDegreeOfFreedomNull:[359,3,1,""],residuals:[359,2,1,""]},"pyspark.ml.regression.GeneralizedLinearRegressionTrainingSummary":{aic:[360,3,1,""],coefficientStandardErrors:[360,3,1,""],degreesOfFreedom:[360,3,1,""],deviance:[360,3,1,""],dispersion:[360,3,1,""],nullDeviance:[360,3,1,""],numInstances:[360,3,1,""],numIterations:[360,3,1,""],pValues:[360,3,1,""],predictionCol:[360,3,1,""],predictions:[360,3,1,""],rank:[360,3,1,""],residualDegreeOfFreedom:[360,3,1,""],residualDegreeOfFreedomNull:[360,3,1,""],residuals:[360,2,1,""],solver:[360,3,1,""],tValues:[360,3,1,""]},"pyspark.ml.regression.IsotonicRegression":{clear:[361,2,1,""],copy:[361,2,1,""],explainParam:[361,2,1,""],explainParams:[361,2,1,""],extractParamMap:[361,2,1,""],featureIndex:[361,3,1,""],featuresCol:[361,3,1,""],fit:[361,2,1,""],fitMultiple:[361,2,1,""],getFeatureIndex:[361,2,1,""],getFeaturesCol:[361,2,1,""],getIsotonic:[361,2,1,""],getLabelCol:[361,2,1,""],getOrDefault:[361,2,1,""],getParam:[361,2,1,""],getPredictionCol:[361,2,1,""],getWeightCol:[361,2,1,""],hasDefault:[361,2,1,""],hasParam:[361,2,1,""],isDefined:[361,2,1,""],isSet:[361,2,1,""],isotonic:[361,3,1,""],labelCol:[361,3,1,""],load:[361,2,1,""],params:[361,3,1,""],predictionCol:[361,3,1,""],read:[361,2,1,""],save:[361,2,1,""],set:[361,2,1,""],setFeatureIndex:[361,2,1,""],setFeaturesCol:[361,2,1,""],setIsotonic:[361,2,1,""],setLabelCol:[361,2,1,""],setParams:[361,2,1,""],setPredictionCol:[361,2,1,""],setWeightCol:[361,2,1,""],weightCol:[361,3,1,""],write:[361,2,1,""]},"pyspark.ml.regression.IsotonicRegressionModel":{boundaries:[362,3,1,""],clear:[362,2,1,""],copy:[362,2,1,""],explainParam:[362,2,1,""],explainParams:[362,2,1,""],extractParamMap:[362,2,1,""],featureIndex:[362,3,1,""],featuresCol:[362,3,1,""],getFeatureIndex:[362,2,1,""],getFeaturesCol:[362,2,1,""],getIsotonic:[362,2,1,""],getLabelCol:[362,2,1,""],getOrDefault:[362,2,1,""],getParam:[362,2,1,""],getPredictionCol:[362,2,1,""],getWeightCol:[362,2,1,""],hasDefault:[362,2,1,""],hasParam:[362,2,1,""],isDefined:[362,2,1,""],isSet:[362,2,1,""],isotonic:[362,3,1,""],labelCol:[362,3,1,""],load:[362,2,1,""],numFeatures:[362,3,1,""],params:[362,3,1,""],predict:[362,2,1,""],predictionCol:[362,3,1,""],predictions:[362,3,1,""],read:[362,2,1,""],save:[362,2,1,""],set:[362,2,1,""],setFeatureIndex:[362,2,1,""],setFeaturesCol:[362,2,1,""],setPredictionCol:[362,2,1,""],transform:[362,2,1,""],weightCol:[362,3,1,""],write:[362,2,1,""]},"pyspark.ml.regression.LinearRegression":{aggregationDepth:[363,3,1,""],clear:[363,2,1,""],copy:[363,2,1,""],elasticNetParam:[363,3,1,""],epsilon:[363,3,1,""],explainParam:[363,2,1,""],explainParams:[363,2,1,""],extractParamMap:[363,2,1,""],featuresCol:[363,3,1,""],fit:[363,2,1,""],fitIntercept:[363,3,1,""],fitMultiple:[363,2,1,""],getAggregationDepth:[363,2,1,""],getElasticNetParam:[363,2,1,""],getEpsilon:[363,2,1,""],getFeaturesCol:[363,2,1,""],getFitIntercept:[363,2,1,""],getLabelCol:[363,2,1,""],getLoss:[363,2,1,""],getMaxIter:[363,2,1,""],getOrDefault:[363,2,1,""],getParam:[363,2,1,""],getPredictionCol:[363,2,1,""],getRegParam:[363,2,1,""],getSolver:[363,2,1,""],getStandardization:[363,2,1,""],getTol:[363,2,1,""],getWeightCol:[363,2,1,""],hasDefault:[363,2,1,""],hasParam:[363,2,1,""],isDefined:[363,2,1,""],isSet:[363,2,1,""],labelCol:[363,3,1,""],load:[363,2,1,""],loss:[363,3,1,""],maxIter:[363,3,1,""],params:[363,3,1,""],predictionCol:[363,3,1,""],read:[363,2,1,""],regParam:[363,3,1,""],save:[363,2,1,""],set:[363,2,1,""],setAggregationDepth:[363,2,1,""],setElasticNetParam:[363,2,1,""],setEpsilon:[363,2,1,""],setFeaturesCol:[363,2,1,""],setFitIntercept:[363,2,1,""],setLabelCol:[363,2,1,""],setLoss:[363,2,1,""],setMaxIter:[363,2,1,""],setParams:[363,2,1,""],setPredictionCol:[363,2,1,""],setRegParam:[363,2,1,""],setSolver:[363,2,1,""],setStandardization:[363,2,1,""],setTol:[363,2,1,""],setWeightCol:[363,2,1,""],solver:[363,3,1,""],standardization:[363,3,1,""],tol:[363,3,1,""],weightCol:[363,3,1,""],write:[363,2,1,""]},"pyspark.ml.regression.LinearRegressionModel":{aggregationDepth:[364,3,1,""],clear:[364,2,1,""],coefficients:[364,3,1,""],copy:[364,2,1,""],elasticNetParam:[364,3,1,""],epsilon:[364,3,1,""],evaluate:[364,2,1,""],explainParam:[364,2,1,""],explainParams:[364,2,1,""],extractParamMap:[364,2,1,""],featuresCol:[364,3,1,""],fitIntercept:[364,3,1,""],getAggregationDepth:[364,2,1,""],getElasticNetParam:[364,2,1,""],getEpsilon:[364,2,1,""],getFeaturesCol:[364,2,1,""],getFitIntercept:[364,2,1,""],getLabelCol:[364,2,1,""],getLoss:[364,2,1,""],getMaxIter:[364,2,1,""],getOrDefault:[364,2,1,""],getParam:[364,2,1,""],getPredictionCol:[364,2,1,""],getRegParam:[364,2,1,""],getSolver:[364,2,1,""],getStandardization:[364,2,1,""],getTol:[364,2,1,""],getWeightCol:[364,2,1,""],hasDefault:[364,2,1,""],hasParam:[364,2,1,""],hasSummary:[364,3,1,""],intercept:[364,3,1,""],isDefined:[364,2,1,""],isSet:[364,2,1,""],labelCol:[364,3,1,""],load:[364,2,1,""],loss:[364,3,1,""],maxIter:[364,3,1,""],numFeatures:[364,3,1,""],params:[364,3,1,""],predict:[364,2,1,""],predictionCol:[364,3,1,""],read:[364,2,1,""],regParam:[364,3,1,""],save:[364,2,1,""],scale:[364,3,1,""],set:[364,2,1,""],setFeaturesCol:[364,2,1,""],setPredictionCol:[364,2,1,""],solver:[364,3,1,""],standardization:[364,3,1,""],summary:[364,3,1,""],tol:[364,3,1,""],transform:[364,2,1,""],weightCol:[364,3,1,""],write:[364,2,1,""]},"pyspark.ml.regression.LinearRegressionSummary":{coefficientStandardErrors:[365,3,1,""],degreesOfFreedom:[365,3,1,""],devianceResiduals:[365,3,1,""],explainedVariance:[365,3,1,""],featuresCol:[365,3,1,""],labelCol:[365,3,1,""],meanAbsoluteError:[365,3,1,""],meanSquaredError:[365,3,1,""],numInstances:[365,3,1,""],pValues:[365,3,1,""],predictionCol:[365,3,1,""],predictions:[365,3,1,""],r2:[365,3,1,""],r2adj:[365,3,1,""],residuals:[365,3,1,""],rootMeanSquaredError:[365,3,1,""],tValues:[365,3,1,""]},"pyspark.ml.regression.LinearRegressionTrainingSummary":{coefficientStandardErrors:[366,3,1,""],degreesOfFreedom:[366,3,1,""],devianceResiduals:[366,3,1,""],explainedVariance:[366,3,1,""],featuresCol:[366,3,1,""],labelCol:[366,3,1,""],meanAbsoluteError:[366,3,1,""],meanSquaredError:[366,3,1,""],numInstances:[366,3,1,""],objectiveHistory:[366,3,1,""],pValues:[366,3,1,""],predictionCol:[366,3,1,""],predictions:[366,3,1,""],r2:[366,3,1,""],r2adj:[366,3,1,""],residuals:[366,3,1,""],rootMeanSquaredError:[366,3,1,""],tValues:[366,3,1,""],totalIterations:[366,3,1,""]},"pyspark.ml.regression.RandomForestRegressionModel":{bootstrap:[367,3,1,""],cacheNodeIds:[367,3,1,""],checkpointInterval:[367,3,1,""],clear:[367,2,1,""],copy:[367,2,1,""],explainParam:[367,2,1,""],explainParams:[367,2,1,""],extractParamMap:[367,2,1,""],featureImportances:[367,3,1,""],featureSubsetStrategy:[367,3,1,""],featuresCol:[367,3,1,""],getBootstrap:[367,2,1,""],getCacheNodeIds:[367,2,1,""],getCheckpointInterval:[367,2,1,""],getFeatureSubsetStrategy:[367,2,1,""],getFeaturesCol:[367,2,1,""],getImpurity:[367,2,1,""],getLabelCol:[367,2,1,""],getLeafCol:[367,2,1,""],getMaxBins:[367,2,1,""],getMaxDepth:[367,2,1,""],getMaxMemoryInMB:[367,2,1,""],getMinInfoGain:[367,2,1,""],getMinInstancesPerNode:[367,2,1,""],getMinWeightFractionPerNode:[367,2,1,""],getNumTrees:[367,3,1,""],getOrDefault:[367,2,1,""],getParam:[367,2,1,""],getPredictionCol:[367,2,1,""],getSeed:[367,2,1,""],getSubsamplingRate:[367,2,1,""],getWeightCol:[367,2,1,""],hasDefault:[367,2,1,""],hasParam:[367,2,1,""],impurity:[367,3,1,""],isDefined:[367,2,1,""],isSet:[367,2,1,""],labelCol:[367,3,1,""],leafCol:[367,3,1,""],load:[367,2,1,""],maxBins:[367,3,1,""],maxDepth:[367,3,1,""],maxMemoryInMB:[367,3,1,""],minInfoGain:[367,3,1,""],minInstancesPerNode:[367,3,1,""],minWeightFractionPerNode:[367,3,1,""],numFeatures:[367,3,1,""],numTrees:[367,3,1,""],params:[367,3,1,""],predict:[367,2,1,""],predictLeaf:[367,2,1,""],predictionCol:[367,3,1,""],read:[367,2,1,""],save:[367,2,1,""],seed:[367,3,1,""],set:[367,2,1,""],setFeaturesCol:[367,2,1,""],setLeafCol:[367,2,1,""],setPredictionCol:[367,2,1,""],subsamplingRate:[367,3,1,""],supportedFeatureSubsetStrategies:[367,3,1,""],supportedImpurities:[367,3,1,""],toDebugString:[367,3,1,""],totalNumNodes:[367,3,1,""],transform:[367,2,1,""],treeWeights:[367,3,1,""],trees:[367,3,1,""],weightCol:[367,3,1,""],write:[367,2,1,""]},"pyspark.ml.regression.RandomForestRegressor":{bootstrap:[368,3,1,""],cacheNodeIds:[368,3,1,""],checkpointInterval:[368,3,1,""],clear:[368,2,1,""],copy:[368,2,1,""],explainParam:[368,2,1,""],explainParams:[368,2,1,""],extractParamMap:[368,2,1,""],featureSubsetStrategy:[368,3,1,""],featuresCol:[368,3,1,""],fit:[368,2,1,""],fitMultiple:[368,2,1,""],getBootstrap:[368,2,1,""],getCacheNodeIds:[368,2,1,""],getCheckpointInterval:[368,2,1,""],getFeatureSubsetStrategy:[368,2,1,""],getFeaturesCol:[368,2,1,""],getImpurity:[368,2,1,""],getLabelCol:[368,2,1,""],getLeafCol:[368,2,1,""],getMaxBins:[368,2,1,""],getMaxDepth:[368,2,1,""],getMaxMemoryInMB:[368,2,1,""],getMinInfoGain:[368,2,1,""],getMinInstancesPerNode:[368,2,1,""],getMinWeightFractionPerNode:[368,2,1,""],getNumTrees:[368,2,1,""],getOrDefault:[368,2,1,""],getParam:[368,2,1,""],getPredictionCol:[368,2,1,""],getSeed:[368,2,1,""],getSubsamplingRate:[368,2,1,""],getWeightCol:[368,2,1,""],hasDefault:[368,2,1,""],hasParam:[368,2,1,""],impurity:[368,3,1,""],isDefined:[368,2,1,""],isSet:[368,2,1,""],labelCol:[368,3,1,""],leafCol:[368,3,1,""],load:[368,2,1,""],maxBins:[368,3,1,""],maxDepth:[368,3,1,""],maxMemoryInMB:[368,3,1,""],minInfoGain:[368,3,1,""],minInstancesPerNode:[368,3,1,""],minWeightFractionPerNode:[368,3,1,""],numTrees:[368,3,1,""],params:[368,3,1,""],predictionCol:[368,3,1,""],read:[368,2,1,""],save:[368,2,1,""],seed:[368,3,1,""],set:[368,2,1,""],setBootstrap:[368,2,1,""],setCacheNodeIds:[368,2,1,""],setCheckpointInterval:[368,2,1,""],setFeatureSubsetStrategy:[368,2,1,""],setFeaturesCol:[368,2,1,""],setImpurity:[368,2,1,""],setLabelCol:[368,2,1,""],setLeafCol:[368,2,1,""],setMaxBins:[368,2,1,""],setMaxDepth:[368,2,1,""],setMaxMemoryInMB:[368,2,1,""],setMinInfoGain:[368,2,1,""],setMinInstancesPerNode:[368,2,1,""],setMinWeightFractionPerNode:[368,2,1,""],setNumTrees:[368,2,1,""],setParams:[368,2,1,""],setPredictionCol:[368,2,1,""],setSeed:[368,2,1,""],setSubsamplingRate:[368,2,1,""],setWeightCol:[368,2,1,""],subsamplingRate:[368,3,1,""],supportedFeatureSubsetStrategies:[368,3,1,""],supportedImpurities:[368,3,1,""],weightCol:[368,3,1,""],write:[368,2,1,""]},"pyspark.ml.stat":{ChiSquareTest:[370,1,1,""],Correlation:[371,1,1,""],KolmogorovSmirnovTest:[373,1,1,""],MultivariateGaussian:[374,1,1,""],Summarizer:[375,1,1,""],SummaryBuilder:[376,1,1,""]},"pyspark.ml.stat.ChiSquareTest":{test:[370,2,1,""]},"pyspark.ml.stat.Correlation":{corr:[371,2,1,""]},"pyspark.ml.stat.KolmogorovSmirnovTest":{test:[373,2,1,""]},"pyspark.ml.stat.Summarizer":{count:[375,2,1,""],max:[375,2,1,""],mean:[375,2,1,""],metrics:[375,2,1,""],min:[375,2,1,""],normL1:[375,2,1,""],normL2:[375,2,1,""],numNonZeros:[375,2,1,""],std:[375,2,1,""],sum:[375,2,1,""],variance:[375,2,1,""]},"pyspark.ml.stat.SummaryBuilder":{summary:[376,2,1,""]},"pyspark.ml.tuning":{CrossValidator:[377,1,1,""],CrossValidatorModel:[378,1,1,""],ParamGridBuilder:[379,1,1,""],TrainValidationSplit:[380,1,1,""],TrainValidationSplitModel:[381,1,1,""]},"pyspark.ml.tuning.CrossValidator":{clear:[377,2,1,""],collectSubModels:[377,3,1,""],copy:[377,2,1,""],estimator:[377,3,1,""],estimatorParamMaps:[377,3,1,""],evaluator:[377,3,1,""],explainParam:[377,2,1,""],explainParams:[377,2,1,""],extractParamMap:[377,2,1,""],fit:[377,2,1,""],fitMultiple:[377,2,1,""],getCollectSubModels:[377,2,1,""],getEstimator:[377,2,1,""],getEstimatorParamMaps:[377,2,1,""],getEvaluator:[377,2,1,""],getNumFolds:[377,2,1,""],getOrDefault:[377,2,1,""],getParallelism:[377,2,1,""],getParam:[377,2,1,""],getSeed:[377,2,1,""],hasDefault:[377,2,1,""],hasParam:[377,2,1,""],isDefined:[377,2,1,""],isSet:[377,2,1,""],load:[377,2,1,""],numFolds:[377,3,1,""],parallelism:[377,3,1,""],params:[377,3,1,""],read:[377,2,1,""],save:[377,2,1,""],seed:[377,3,1,""],set:[377,2,1,""],setCollectSubModels:[377,2,1,""],setEstimator:[377,2,1,""],setEstimatorParamMaps:[377,2,1,""],setEvaluator:[377,2,1,""],setNumFolds:[377,2,1,""],setParallelism:[377,2,1,""],setParams:[377,2,1,""],setSeed:[377,2,1,""],write:[377,2,1,""]},"pyspark.ml.tuning.CrossValidatorModel":{avgMetrics:[2,3,1,""],bestModel:[2,3,1,""],clear:[378,2,1,""],copy:[378,2,1,""],estimator:[378,3,1,""],estimatorParamMaps:[378,3,1,""],evaluator:[378,3,1,""],explainParam:[378,2,1,""],explainParams:[378,2,1,""],extractParamMap:[378,2,1,""],getEstimator:[378,2,1,""],getEstimatorParamMaps:[378,2,1,""],getEvaluator:[378,2,1,""],getNumFolds:[378,2,1,""],getOrDefault:[378,2,1,""],getParam:[378,2,1,""],getSeed:[378,2,1,""],hasDefault:[378,2,1,""],hasParam:[378,2,1,""],isDefined:[378,2,1,""],isSet:[378,2,1,""],load:[378,2,1,""],numFolds:[378,3,1,""],params:[378,3,1,""],read:[378,2,1,""],save:[378,2,1,""],seed:[378,3,1,""],set:[378,2,1,""],subModels:[2,3,1,""],transform:[378,2,1,""],write:[378,2,1,""]},"pyspark.ml.tuning.ParamGridBuilder":{addGrid:[379,2,1,""],baseOn:[379,2,1,""],build:[379,2,1,""]},"pyspark.ml.tuning.TrainValidationSplit":{clear:[380,2,1,""],collectSubModels:[380,3,1,""],copy:[380,2,1,""],estimator:[380,3,1,""],estimatorParamMaps:[380,3,1,""],evaluator:[380,3,1,""],explainParam:[380,2,1,""],explainParams:[380,2,1,""],extractParamMap:[380,2,1,""],fit:[380,2,1,""],fitMultiple:[380,2,1,""],getCollectSubModels:[380,2,1,""],getEstimator:[380,2,1,""],getEstimatorParamMaps:[380,2,1,""],getEvaluator:[380,2,1,""],getOrDefault:[380,2,1,""],getParallelism:[380,2,1,""],getParam:[380,2,1,""],getSeed:[380,2,1,""],getTrainRatio:[380,2,1,""],hasDefault:[380,2,1,""],hasParam:[380,2,1,""],isDefined:[380,2,1,""],isSet:[380,2,1,""],load:[380,2,1,""],parallelism:[380,3,1,""],params:[380,3,1,""],read:[380,2,1,""],save:[380,2,1,""],seed:[380,3,1,""],set:[380,2,1,""],setCollectSubModels:[380,2,1,""],setEstimator:[380,2,1,""],setEstimatorParamMaps:[380,2,1,""],setEvaluator:[380,2,1,""],setParallelism:[380,2,1,""],setParams:[380,2,1,""],setSeed:[380,2,1,""],setTrainRatio:[380,2,1,""],trainRatio:[380,3,1,""],write:[380,2,1,""]},"pyspark.ml.tuning.TrainValidationSplitModel":{bestModel:[2,3,1,""],clear:[381,2,1,""],copy:[381,2,1,""],estimator:[381,3,1,""],estimatorParamMaps:[381,3,1,""],evaluator:[381,3,1,""],explainParam:[381,2,1,""],explainParams:[381,2,1,""],extractParamMap:[381,2,1,""],getEstimator:[381,2,1,""],getEstimatorParamMaps:[381,2,1,""],getEvaluator:[381,2,1,""],getOrDefault:[381,2,1,""],getParam:[381,2,1,""],getSeed:[381,2,1,""],getTrainRatio:[381,2,1,""],hasDefault:[381,2,1,""],hasParam:[381,2,1,""],isDefined:[381,2,1,""],isSet:[381,2,1,""],load:[381,2,1,""],params:[381,3,1,""],read:[381,2,1,""],save:[381,2,1,""],seed:[381,3,1,""],set:[381,2,1,""],subModels:[2,3,1,""],trainRatio:[381,3,1,""],transform:[381,2,1,""],validationMetrics:[2,3,1,""],write:[381,2,1,""]},"pyspark.ml.util":{BaseReadWrite:[382,1,1,""],DefaultParamsReadable:[383,1,1,""],DefaultParamsReader:[384,1,1,""],DefaultParamsWritable:[385,1,1,""],DefaultParamsWriter:[386,1,1,""],GeneralJavaMLWritable:[2,1,1,""],GeneralJavaMLWriter:[2,1,1,""],GeneralMLWriter:[387,1,1,""],HasTrainingSummary:[388,1,1,""],Identifiable:[389,1,1,""],JavaMLReadable:[2,1,1,""],JavaMLReader:[2,1,1,""],JavaMLWritable:[2,1,1,""],JavaMLWriter:[2,1,1,""],MLReadable:[390,1,1,""],MLReader:[391,1,1,""],MLWritable:[392,1,1,""],MLWriter:[393,1,1,""]},"pyspark.ml.util.BaseReadWrite":{sc:[382,3,1,""],session:[382,2,1,""],sparkSession:[382,3,1,""]},"pyspark.ml.util.DefaultParamsReadable":{load:[383,2,1,""],read:[383,2,1,""]},"pyspark.ml.util.DefaultParamsReader":{getAndSetParams:[384,2,1,""],load:[384,2,1,""],loadMetadata:[384,2,1,""],loadParamsInstance:[384,2,1,""],sc:[384,3,1,""],session:[384,2,1,""],sparkSession:[384,3,1,""]},"pyspark.ml.util.DefaultParamsWritable":{save:[385,2,1,""],write:[385,2,1,""]},"pyspark.ml.util.DefaultParamsWriter":{overwrite:[386,2,1,""],save:[386,2,1,""],saveImpl:[386,2,1,""],saveMetadata:[386,2,1,""],sc:[386,3,1,""],session:[386,2,1,""],sparkSession:[386,3,1,""]},"pyspark.ml.util.GeneralJavaMLWritable":{save:[2,2,1,""],write:[2,2,1,""]},"pyspark.ml.util.GeneralJavaMLWriter":{format:[2,2,1,""],option:[2,2,1,""],overwrite:[2,2,1,""],save:[2,2,1,""],saveImpl:[2,2,1,""],sc:[2,2,1,""],session:[2,2,1,""],sparkSession:[2,2,1,""]},"pyspark.ml.util.GeneralMLWriter":{format:[387,2,1,""],overwrite:[387,2,1,""],save:[387,2,1,""],saveImpl:[387,2,1,""],sc:[387,3,1,""],session:[387,2,1,""],sparkSession:[387,3,1,""]},"pyspark.ml.util.HasTrainingSummary":{hasSummary:[388,3,1,""],summary:[388,3,1,""]},"pyspark.ml.util.Identifiable":{uid:[2,3,1,""]},"pyspark.ml.util.JavaMLReadable":{load:[2,2,1,""],read:[2,2,1,""]},"pyspark.ml.util.JavaMLReader":{load:[2,2,1,""],sc:[2,2,1,""],session:[2,2,1,""],sparkSession:[2,2,1,""]},"pyspark.ml.util.JavaMLWritable":{save:[2,2,1,""],write:[2,2,1,""]},"pyspark.ml.util.JavaMLWriter":{option:[2,2,1,""],overwrite:[2,2,1,""],save:[2,2,1,""],saveImpl:[2,2,1,""],sc:[2,2,1,""],session:[2,2,1,""],sparkSession:[2,2,1,""]},"pyspark.ml.util.MLReadable":{load:[390,2,1,""],read:[390,2,1,""]},"pyspark.ml.util.MLReader":{load:[391,2,1,""],sc:[391,3,1,""],session:[391,2,1,""],sparkSession:[391,3,1,""]},"pyspark.ml.util.MLWritable":{save:[392,2,1,""],write:[392,2,1,""]},"pyspark.ml.util.MLWriter":{overwrite:[393,2,1,""],save:[393,2,1,""],saveImpl:[393,2,1,""],sc:[393,3,1,""],session:[393,2,1,""],sparkSession:[393,3,1,""]},"pyspark.mllib":{classification:[3,0,0,"-"],clustering:[3,0,0,"-"],evaluation:[3,0,0,"-"],feature:[3,0,0,"-"],fpm:[3,0,0,"-"],linalg:[3,0,0,"-"],random:[3,0,0,"-"],recommendation:[3,0,0,"-"],regression:[3,0,0,"-"],stat:[3,0,0,"-"],tree:[3,0,0,"-"],util:[3,0,0,"-"]},"pyspark.mllib.classification":{LogisticRegressionModel:[394,1,1,""],LogisticRegressionWithLBFGS:[395,1,1,""],LogisticRegressionWithSGD:[396,1,1,""],NaiveBayes:[397,1,1,""],NaiveBayesModel:[398,1,1,""],SVMModel:[399,1,1,""],SVMWithSGD:[400,1,1,""],StreamingLogisticRegressionWithSGD:[401,1,1,""]},"pyspark.mllib.classification.LogisticRegressionModel":{clearThreshold:[394,2,1,""],intercept:[394,3,1,""],load:[394,2,1,""],numClasses:[394,3,1,""],numFeatures:[394,3,1,""],predict:[394,2,1,""],save:[394,2,1,""],setThreshold:[394,2,1,""],threshold:[394,3,1,""],weights:[394,3,1,""]},"pyspark.mllib.classification.LogisticRegressionWithLBFGS":{train:[395,2,1,""]},"pyspark.mllib.classification.LogisticRegressionWithSGD":{train:[396,2,1,""]},"pyspark.mllib.classification.NaiveBayes":{train:[397,2,1,""]},"pyspark.mllib.classification.NaiveBayesModel":{load:[398,2,1,""],predict:[398,2,1,""],save:[398,2,1,""]},"pyspark.mllib.classification.SVMModel":{clearThreshold:[399,2,1,""],intercept:[399,3,1,""],load:[399,2,1,""],predict:[399,2,1,""],save:[399,2,1,""],setThreshold:[399,2,1,""],threshold:[399,3,1,""],weights:[399,3,1,""]},"pyspark.mllib.classification.SVMWithSGD":{train:[400,2,1,""]},"pyspark.mllib.classification.StreamingLogisticRegressionWithSGD":{latestModel:[401,2,1,""],predictOn:[401,2,1,""],predictOnValues:[401,2,1,""],setInitialWeights:[401,2,1,""],trainOn:[401,2,1,""]},"pyspark.mllib.clustering":{BisectingKMeans:[402,1,1,""],BisectingKMeansModel:[403,1,1,""],GaussianMixture:[404,1,1,""],GaussianMixtureModel:[405,1,1,""],KMeans:[406,1,1,""],KMeansModel:[407,1,1,""],LDA:[408,1,1,""],LDAModel:[409,1,1,""],PowerIterationClustering:[410,1,1,""],PowerIterationClusteringModel:[411,1,1,""],StreamingKMeans:[412,1,1,""],StreamingKMeansModel:[413,1,1,""]},"pyspark.mllib.clustering.BisectingKMeans":{train:[402,2,1,""]},"pyspark.mllib.clustering.BisectingKMeansModel":{call:[403,2,1,""],clusterCenters:[403,3,1,""],computeCost:[403,2,1,""],k:[403,3,1,""],predict:[403,2,1,""]},"pyspark.mllib.clustering.GaussianMixture":{train:[404,2,1,""]},"pyspark.mllib.clustering.GaussianMixtureModel":{call:[405,2,1,""],gaussians:[405,3,1,""],k:[405,3,1,""],load:[405,2,1,""],predict:[405,2,1,""],predictSoft:[405,2,1,""],save:[405,2,1,""],weights:[405,3,1,""]},"pyspark.mllib.clustering.KMeans":{train:[406,2,1,""]},"pyspark.mllib.clustering.KMeansModel":{clusterCenters:[407,3,1,""],computeCost:[407,2,1,""],k:[407,3,1,""],load:[407,2,1,""],predict:[407,2,1,""],save:[407,2,1,""]},"pyspark.mllib.clustering.LDA":{train:[408,2,1,""]},"pyspark.mllib.clustering.LDAModel":{call:[409,2,1,""],describeTopics:[409,2,1,""],load:[409,2,1,""],save:[409,2,1,""],topicsMatrix:[409,2,1,""],vocabSize:[409,2,1,""]},"pyspark.mllib.clustering.PowerIterationClustering":{Assignment:[3,1,1,""],train:[410,2,1,""]},"pyspark.mllib.clustering.PowerIterationClusteringModel":{assignments:[411,2,1,""],call:[411,2,1,""],k:[411,3,1,""],load:[411,2,1,""],save:[411,2,1,""]},"pyspark.mllib.clustering.StreamingKMeans":{latestModel:[412,2,1,""],predictOn:[412,2,1,""],predictOnValues:[412,2,1,""],setDecayFactor:[412,2,1,""],setHalfLife:[412,2,1,""],setInitialCenters:[412,2,1,""],setK:[412,2,1,""],setRandomCenters:[412,2,1,""],trainOn:[412,2,1,""]},"pyspark.mllib.clustering.StreamingKMeansModel":{clusterCenters:[413,3,1,""],clusterWeights:[413,3,1,""],computeCost:[413,2,1,""],k:[413,3,1,""],load:[413,2,1,""],predict:[413,2,1,""],save:[413,2,1,""],update:[413,2,1,""]},"pyspark.mllib.evaluation":{BinaryClassificationMetrics:[414,1,1,""],MulticlassMetrics:[415,1,1,""],RankingMetrics:[416,1,1,""],RegressionMetrics:[417,1,1,""]},"pyspark.mllib.evaluation.BinaryClassificationMetrics":{areaUnderPR:[414,3,1,""],areaUnderROC:[414,3,1,""],call:[414,2,1,""],unpersist:[414,2,1,""]},"pyspark.mllib.evaluation.MulticlassMetrics":{accuracy:[415,3,1,""],call:[415,2,1,""],confusionMatrix:[415,2,1,""],fMeasure:[415,2,1,""],falsePositiveRate:[415,2,1,""],logLoss:[415,2,1,""],precision:[415,2,1,""],recall:[415,2,1,""],truePositiveRate:[415,2,1,""],weightedFMeasure:[415,2,1,""],weightedFalsePositiveRate:[415,3,1,""],weightedPrecision:[415,3,1,""],weightedRecall:[415,3,1,""],weightedTruePositiveRate:[415,3,1,""]},"pyspark.mllib.evaluation.RankingMetrics":{call:[416,2,1,""],meanAveragePrecision:[416,3,1,""],meanAveragePrecisionAt:[416,2,1,""],ndcgAt:[416,2,1,""],precisionAt:[416,2,1,""],recallAt:[416,2,1,""]},"pyspark.mllib.evaluation.RegressionMetrics":{call:[417,2,1,""],explainedVariance:[417,3,1,""],meanAbsoluteError:[417,3,1,""],meanSquaredError:[417,3,1,""],r2:[417,3,1,""],rootMeanSquaredError:[417,3,1,""]},"pyspark.mllib.feature":{ChiSqSelector:[418,1,1,""],ChiSqSelectorModel:[419,1,1,""],ElementwiseProduct:[420,1,1,""],HashingTF:[421,1,1,""],IDF:[422,1,1,""],IDFModel:[423,1,1,""],Normalizer:[424,1,1,""],StandardScaler:[425,1,1,""],StandardScalerModel:[426,1,1,""],Word2Vec:[427,1,1,""],Word2VecModel:[428,1,1,""]},"pyspark.mllib.feature.ChiSqSelector":{fit:[418,2,1,""],setFdr:[418,2,1,""],setFpr:[418,2,1,""],setFwe:[418,2,1,""],setNumTopFeatures:[418,2,1,""],setPercentile:[418,2,1,""],setSelectorType:[418,2,1,""]},"pyspark.mllib.feature.ChiSqSelectorModel":{call:[419,2,1,""],transform:[419,2,1,""]},"pyspark.mllib.feature.ElementwiseProduct":{transform:[420,2,1,""]},"pyspark.mllib.feature.HashingTF":{indexOf:[421,2,1,""],setBinary:[421,2,1,""],transform:[421,2,1,""]},"pyspark.mllib.feature.IDF":{fit:[422,2,1,""]},"pyspark.mllib.feature.IDFModel":{call:[423,2,1,""],docFreq:[423,2,1,""],idf:[423,2,1,""],numDocs:[423,2,1,""],transform:[423,2,1,""]},"pyspark.mllib.feature.Normalizer":{transform:[424,2,1,""]},"pyspark.mllib.feature.StandardScaler":{fit:[425,2,1,""]},"pyspark.mllib.feature.StandardScalerModel":{call:[426,2,1,""],mean:[426,3,1,""],setWithMean:[426,2,1,""],setWithStd:[426,2,1,""],std:[426,3,1,""],transform:[426,2,1,""],withMean:[426,3,1,""],withStd:[426,3,1,""]},"pyspark.mllib.feature.Word2Vec":{fit:[427,2,1,""],setLearningRate:[427,2,1,""],setMinCount:[427,2,1,""],setNumIterations:[427,2,1,""],setNumPartitions:[427,2,1,""],setSeed:[427,2,1,""],setVectorSize:[427,2,1,""],setWindowSize:[427,2,1,""]},"pyspark.mllib.feature.Word2VecModel":{call:[428,2,1,""],findSynonyms:[428,2,1,""],getVectors:[428,2,1,""],load:[428,2,1,""],save:[428,2,1,""],transform:[428,2,1,""]},"pyspark.mllib.fpm":{FPGrowth:[429,1,1,""],FPGrowthModel:[430,1,1,""],PrefixSpan:[431,1,1,""],PrefixSpanModel:[432,1,1,""]},"pyspark.mllib.fpm.FPGrowth":{FreqItemset:[3,1,1,""],train:[429,2,1,""]},"pyspark.mllib.fpm.FPGrowthModel":{call:[430,2,1,""],freqItemsets:[430,2,1,""],load:[430,2,1,""],save:[430,2,1,""]},"pyspark.mllib.fpm.PrefixSpan":{FreqSequence:[3,1,1,""],train:[431,2,1,""]},"pyspark.mllib.fpm.PrefixSpanModel":{call:[432,2,1,""],freqSequences:[432,2,1,""]},"pyspark.mllib.linalg":{DenseMatrix:[433,1,1,""],DenseVector:[434,1,1,""],Matrices:[435,1,1,""],Matrix:[436,1,1,""],QRDecomposition:[437,1,1,""],SparseMatrix:[438,1,1,""],SparseVector:[439,1,1,""],Vector:[440,1,1,""],Vectors:[441,1,1,""],distributed:[3,0,0,"-"]},"pyspark.mllib.linalg.DenseMatrix":{asML:[433,2,1,""],toArray:[433,2,1,""],toSparse:[433,2,1,""]},"pyspark.mllib.linalg.DenseVector":{asML:[434,2,1,""],dot:[434,2,1,""],norm:[434,2,1,""],numNonzeros:[434,2,1,""],parse:[434,2,1,""],squared_distance:[434,2,1,""],toArray:[434,2,1,""],values:[434,3,1,""]},"pyspark.mllib.linalg.Matrices":{dense:[435,2,1,""],fromML:[435,2,1,""],sparse:[435,2,1,""]},"pyspark.mllib.linalg.Matrix":{asML:[436,2,1,""],toArray:[436,2,1,""]},"pyspark.mllib.linalg.QRDecomposition":{Q:[437,3,1,""],R:[437,3,1,""]},"pyspark.mllib.linalg.SparseMatrix":{asML:[438,2,1,""],toArray:[438,2,1,""],toDense:[438,2,1,""]},"pyspark.mllib.linalg.SparseVector":{asML:[439,2,1,""],dot:[439,2,1,""],indices:[3,3,1,""],norm:[439,2,1,""],numNonzeros:[439,2,1,""],parse:[439,2,1,""],size:[3,3,1,""],squared_distance:[439,2,1,""],toArray:[439,2,1,""],values:[3,3,1,""]},"pyspark.mllib.linalg.Vector":{asML:[440,2,1,""],toArray:[440,2,1,""]},"pyspark.mllib.linalg.Vectors":{dense:[441,2,1,""],fromML:[441,2,1,""],norm:[441,2,1,""],parse:[441,2,1,""],sparse:[441,2,1,""],squared_distance:[441,2,1,""],stringify:[441,2,1,""],zeros:[441,2,1,""]},"pyspark.mllib.linalg.distributed":{BlockMatrix:[442,1,1,""],CoordinateMatrix:[443,1,1,""],DistributedMatrix:[444,1,1,""],IndexedRow:[445,1,1,""],IndexedRowMatrix:[446,1,1,""],MatrixEntry:[447,1,1,""],RowMatrix:[448,1,1,""],SingularValueDecomposition:[449,1,1,""]},"pyspark.mllib.linalg.distributed.BlockMatrix":{add:[442,2,1,""],blocks:[442,3,1,""],cache:[442,2,1,""],colsPerBlock:[442,3,1,""],multiply:[442,2,1,""],numColBlocks:[442,3,1,""],numCols:[442,2,1,""],numRowBlocks:[442,3,1,""],numRows:[442,2,1,""],persist:[442,2,1,""],rowsPerBlock:[442,3,1,""],subtract:[442,2,1,""],toCoordinateMatrix:[442,2,1,""],toIndexedRowMatrix:[442,2,1,""],toLocalMatrix:[442,2,1,""],transpose:[442,2,1,""],validate:[442,2,1,""]},"pyspark.mllib.linalg.distributed.CoordinateMatrix":{entries:[443,3,1,""],numCols:[443,2,1,""],numRows:[443,2,1,""],toBlockMatrix:[443,2,1,""],toIndexedRowMatrix:[443,2,1,""],toRowMatrix:[443,2,1,""],transpose:[443,2,1,""]},"pyspark.mllib.linalg.distributed.DistributedMatrix":{numCols:[444,2,1,""],numRows:[444,2,1,""]},"pyspark.mllib.linalg.distributed.IndexedRowMatrix":{columnSimilarities:[446,2,1,""],computeGramianMatrix:[446,2,1,""],computeSVD:[446,2,1,""],multiply:[446,2,1,""],numCols:[446,2,1,""],numRows:[446,2,1,""],rows:[446,3,1,""],toBlockMatrix:[446,2,1,""],toCoordinateMatrix:[446,2,1,""],toRowMatrix:[446,2,1,""]},"pyspark.mllib.linalg.distributed.RowMatrix":{columnSimilarities:[448,2,1,""],computeColumnSummaryStatistics:[448,2,1,""],computeCovariance:[448,2,1,""],computeGramianMatrix:[448,2,1,""],computePrincipalComponents:[448,2,1,""],computeSVD:[448,2,1,""],multiply:[448,2,1,""],numCols:[448,2,1,""],numRows:[448,2,1,""],rows:[448,3,1,""],tallSkinnyQR:[448,2,1,""]},"pyspark.mllib.linalg.distributed.SingularValueDecomposition":{U:[449,3,1,""],V:[449,3,1,""],call:[449,2,1,""],s:[449,3,1,""]},"pyspark.mllib.random":{RandomRDDs:[450,1,1,""]},"pyspark.mllib.random.RandomRDDs":{exponentialRDD:[450,2,1,""],exponentialVectorRDD:[450,2,1,""],gammaRDD:[450,2,1,""],gammaVectorRDD:[450,2,1,""],logNormalRDD:[450,2,1,""],logNormalVectorRDD:[450,2,1,""],normalRDD:[450,2,1,""],normalVectorRDD:[450,2,1,""],poissonRDD:[450,2,1,""],poissonVectorRDD:[450,2,1,""],uniformRDD:[450,2,1,""],uniformVectorRDD:[450,2,1,""]},"pyspark.mllib.recommendation":{ALS:[451,1,1,""],MatrixFactorizationModel:[452,1,1,""],Rating:[453,1,1,""]},"pyspark.mllib.recommendation.ALS":{train:[451,2,1,""],trainImplicit:[451,2,1,""]},"pyspark.mllib.recommendation.MatrixFactorizationModel":{call:[452,2,1,""],load:[452,2,1,""],predict:[452,2,1,""],predictAll:[452,2,1,""],productFeatures:[452,2,1,""],rank:[452,3,1,""],recommendProducts:[452,2,1,""],recommendProductsForUsers:[452,2,1,""],recommendUsers:[452,2,1,""],recommendUsersForProducts:[452,2,1,""],save:[452,2,1,""],userFeatures:[452,2,1,""]},"pyspark.mllib.recommendation.Rating":{count:[453,2,1,""],index:[453,2,1,""],product:[453,3,1,""],rating:[453,3,1,""],user:[453,3,1,""]},"pyspark.mllib.regression":{IsotonicRegression:[454,1,1,""],IsotonicRegressionModel:[455,1,1,""],LabeledPoint:[456,1,1,""],LassoModel:[457,1,1,""],LassoWithSGD:[458,1,1,""],LinearModel:[459,1,1,""],LinearRegressionModel:[460,1,1,""],LinearRegressionWithSGD:[461,1,1,""],RidgeRegressionModel:[462,1,1,""],RidgeRegressionWithSGD:[463,1,1,""],StreamingLinearAlgorithm:[464,1,1,""],StreamingLinearRegressionWithSGD:[465,1,1,""]},"pyspark.mllib.regression.IsotonicRegression":{train:[454,2,1,""]},"pyspark.mllib.regression.IsotonicRegressionModel":{load:[455,2,1,""],predict:[455,2,1,""],save:[455,2,1,""]},"pyspark.mllib.regression.LassoModel":{intercept:[457,3,1,""],load:[457,2,1,""],predict:[457,2,1,""],save:[457,2,1,""],weights:[457,3,1,""]},"pyspark.mllib.regression.LassoWithSGD":{train:[458,2,1,""]},"pyspark.mllib.regression.LinearModel":{intercept:[459,3,1,""],weights:[459,3,1,""]},"pyspark.mllib.regression.LinearRegressionModel":{intercept:[460,3,1,""],load:[460,2,1,""],predict:[460,2,1,""],save:[460,2,1,""],weights:[460,3,1,""]},"pyspark.mllib.regression.LinearRegressionWithSGD":{train:[461,2,1,""]},"pyspark.mllib.regression.RidgeRegressionModel":{intercept:[462,3,1,""],load:[462,2,1,""],predict:[462,2,1,""],save:[462,2,1,""],weights:[462,3,1,""]},"pyspark.mllib.regression.RidgeRegressionWithSGD":{train:[463,2,1,""]},"pyspark.mllib.regression.StreamingLinearAlgorithm":{latestModel:[464,2,1,""],predictOn:[464,2,1,""],predictOnValues:[464,2,1,""]},"pyspark.mllib.regression.StreamingLinearRegressionWithSGD":{latestModel:[465,2,1,""],predictOn:[465,2,1,""],predictOnValues:[465,2,1,""],setInitialWeights:[465,2,1,""],trainOn:[465,2,1,""]},"pyspark.mllib.stat":{ChiSqTestResult:[466,1,1,""],KernelDensity:[467,1,1,""],MultivariateGaussian:[468,1,1,""],MultivariateStatisticalSummary:[469,1,1,""],Statistics:[470,1,1,""]},"pyspark.mllib.stat.ChiSqTestResult":{call:[466,2,1,""],degreesOfFreedom:[466,3,1,""],method:[466,3,1,""],nullHypothesis:[466,3,1,""],pValue:[466,3,1,""],statistic:[466,3,1,""]},"pyspark.mllib.stat.KernelDensity":{estimate:[467,2,1,""],setBandwidth:[467,2,1,""],setSample:[467,2,1,""]},"pyspark.mllib.stat.MultivariateGaussian":{count:[468,2,1,""],index:[468,2,1,""],mu:[468,3,1,""],sigma:[468,3,1,""]},"pyspark.mllib.stat.MultivariateStatisticalSummary":{call:[469,2,1,""],count:[469,2,1,""],max:[469,2,1,""],mean:[469,2,1,""],min:[469,2,1,""],normL1:[469,2,1,""],normL2:[469,2,1,""],numNonzeros:[469,2,1,""],variance:[469,2,1,""]},"pyspark.mllib.stat.Statistics":{chiSqTest:[470,2,1,""],colStats:[470,2,1,""],corr:[470,2,1,""],kolmogorovSmirnovTest:[470,2,1,""]},"pyspark.mllib.tree":{DecisionTree:[471,1,1,""],DecisionTreeModel:[472,1,1,""],GradientBoostedTrees:[473,1,1,""],GradientBoostedTreesModel:[474,1,1,""],RandomForest:[475,1,1,""],RandomForestModel:[476,1,1,""]},"pyspark.mllib.tree.DecisionTree":{trainClassifier:[471,2,1,""],trainRegressor:[471,2,1,""]},"pyspark.mllib.tree.DecisionTreeModel":{call:[472,2,1,""],depth:[472,2,1,""],load:[472,2,1,""],numNodes:[472,2,1,""],predict:[472,2,1,""],save:[472,2,1,""],toDebugString:[472,2,1,""]},"pyspark.mllib.tree.GradientBoostedTrees":{trainClassifier:[473,2,1,""],trainRegressor:[473,2,1,""]},"pyspark.mllib.tree.GradientBoostedTreesModel":{call:[474,2,1,""],load:[474,2,1,""],numTrees:[474,2,1,""],predict:[474,2,1,""],save:[474,2,1,""],toDebugString:[474,2,1,""],totalNumNodes:[474,2,1,""]},"pyspark.mllib.tree.RandomForest":{supportedFeatureSubsetStrategies:[475,3,1,""],trainClassifier:[475,2,1,""],trainRegressor:[475,2,1,""]},"pyspark.mllib.tree.RandomForestModel":{call:[476,2,1,""],load:[476,2,1,""],numTrees:[476,2,1,""],predict:[476,2,1,""],save:[476,2,1,""],toDebugString:[476,2,1,""],totalNumNodes:[476,2,1,""]},"pyspark.mllib.util":{JavaLoader:[477,1,1,""],JavaSaveable:[478,1,1,""],LinearDataGenerator:[479,1,1,""],Loader:[480,1,1,""],MLUtils:[481,1,1,""],Saveable:[482,1,1,""]},"pyspark.mllib.util.JavaLoader":{load:[477,2,1,""]},"pyspark.mllib.util.JavaSaveable":{save:[478,2,1,""]},"pyspark.mllib.util.LinearDataGenerator":{generateLinearInput:[479,2,1,""],generateLinearRDD:[479,2,1,""]},"pyspark.mllib.util.Loader":{load:[480,2,1,""]},"pyspark.mllib.util.MLUtils":{appendBias:[481,2,1,""],convertMatrixColumnsFromML:[481,2,1,""],convertMatrixColumnsToML:[481,2,1,""],convertVectorColumnsFromML:[481,2,1,""],convertVectorColumnsToML:[481,2,1,""],loadLabeledPoints:[481,2,1,""],loadLibSVMFile:[481,2,1,""],loadVectors:[481,2,1,""],saveAsLibSVMFile:[481,2,1,""]},"pyspark.mllib.util.Saveable":{save:[482,2,1,""]},"pyspark.resource":{ResourceInformation:[485,1,1,""]},"pyspark.resource.ResourceInformation":{__init__:[485,2,1,""],addresses:[4,2,1,""],name:[4,2,1,""]},"pyspark.sql":{Catalog:[5,1,1,""],Column:[490,1,1,""],DataFrame:[491,1,1,""],DataFrameNaFunctions:[581,1,1,""],DataFrameReader:[5,1,1,""],DataFrameStatFunctions:[596,1,1,""],DataFrameWriter:[5,1,1,""],GroupedData:[619,1,1,""],HiveContext:[5,1,1,""],PandasCogroupedOps:[5,1,1,""],Row:[631,1,1,""],SQLContext:[5,1,1,""],SparkSession:[633,1,1,""],UDFRegistration:[5,1,1,""],Window:[654,1,1,""],WindowSpec:[5,1,1,""],functions:[5,0,0,"-"],streaming:[5,0,0,"-"],types:[5,0,0,"-"]},"pyspark.sql.Catalog":{cacheTable:[5,2,1,""],clearCache:[5,2,1,""],createExternalTable:[5,2,1,""],createTable:[5,2,1,""],currentDatabase:[5,2,1,""],dropGlobalTempView:[5,2,1,""],dropTempView:[5,2,1,""],isCached:[5,2,1,""],listColumns:[5,2,1,""],listDatabases:[5,2,1,""],listFunctions:[5,2,1,""],listTables:[5,2,1,""],recoverPartitions:[5,2,1,""],refreshByPath:[5,2,1,""],refreshTable:[5,2,1,""],registerFunction:[5,2,1,""],setCurrentDatabase:[5,2,1,""],uncacheTable:[5,2,1,""]},"pyspark.sql.Column":{__init__:[490,2,1,""],alias:[5,2,1,""],asc:[5,2,1,""],asc_nulls_first:[5,2,1,""],asc_nulls_last:[5,2,1,""],astype:[5,2,1,""],between:[5,2,1,""],bitwiseAND:[5,2,1,""],bitwiseOR:[5,2,1,""],bitwiseXOR:[5,2,1,""],cast:[5,2,1,""],contains:[5,2,1,""],desc:[5,2,1,""],desc_nulls_first:[5,2,1,""],desc_nulls_last:[5,2,1,""],endswith:[5,2,1,""],eqNullSafe:[5,2,1,""],getField:[5,2,1,""],getItem:[5,2,1,""],isNotNull:[5,2,1,""],isNull:[5,2,1,""],isin:[5,2,1,""],like:[5,2,1,""],name:[5,2,1,""],otherwise:[5,2,1,""],over:[5,2,1,""],rlike:[5,2,1,""],startswith:[5,2,1,""],substr:[5,2,1,""],when:[5,2,1,""]},"pyspark.sql.DataFrame":{__init__:[491,2,1,""],agg:[492,2,1,""],alias:[493,2,1,""],approxQuantile:[494,2,1,""],cache:[495,2,1,""],checkpoint:[496,2,1,""],coalesce:[497,2,1,""],colRegex:[498,2,1,""],collect:[499,2,1,""],columns:[500,2,1,""],corr:[501,2,1,""],count:[502,2,1,""],cov:[503,2,1,""],createGlobalTempView:[504,2,1,""],createOrReplaceGlobalTempView:[505,2,1,""],createOrReplaceTempView:[506,2,1,""],createTempView:[507,2,1,""],crossJoin:[508,2,1,""],crosstab:[509,2,1,""],cube:[510,2,1,""],describe:[511,2,1,""],distinct:[512,2,1,""],drop:[513,2,1,""],dropDuplicates:[514,2,1,""],drop_duplicates:[515,2,1,""],dropna:[516,2,1,""],dtypes:[517,2,1,""],exceptAll:[518,2,1,""],explain:[519,2,1,""],fillna:[520,2,1,""],filter:[521,2,1,""],first:[522,2,1,""],foreach:[523,2,1,""],foreachPartition:[524,2,1,""],freqItems:[525,2,1,""],groupBy:[526,2,1,""],groupby:[5,2,1,""],head:[527,2,1,""],hint:[528,2,1,""],intersect:[530,2,1,""],intersectAll:[531,2,1,""],isLocal:[532,2,1,""],isStreaming:[533,2,1,""],join:[534,2,1,""],limit:[535,2,1,""],localCheckpoint:[536,2,1,""],mapInPandas:[537,2,1,""],na:[538,2,1,""],orderBy:[539,2,1,""],persist:[540,2,1,""],printSchema:[541,2,1,""],randomSplit:[542,2,1,""],rdd:[543,2,1,""],registerTempTable:[544,2,1,""],repartition:[545,2,1,""],repartitionByRange:[546,2,1,""],replace:[547,2,1,""],rollup:[548,2,1,""],sample:[550,2,1,""],sampleBy:[551,2,1,""],schema:[552,2,1,""],select:[553,2,1,""],selectExpr:[554,2,1,""],show:[556,2,1,""],sort:[557,2,1,""],sortWithinPartitions:[558,2,1,""],stat:[559,2,1,""],storageLevel:[560,2,1,""],subtract:[561,2,1,""],summary:[562,2,1,""],tail:[563,2,1,""],take:[564,2,1,""],toDF:[565,2,1,""],toJSON:[566,2,1,""],toLocalIterator:[567,2,1,""],toPandas:[568,2,1,""],transform:[569,2,1,""],union:[570,2,1,""],unionAll:[571,2,1,""],unionByName:[572,2,1,""],unpersist:[573,2,1,""],where:[574,2,1,""],withColumn:[575,2,1,""],withColumnRenamed:[576,2,1,""],withWatermark:[577,2,1,""],write:[578,2,1,""],writeStream:[579,2,1,""]},"pyspark.sql.DataFrameNaFunctions":{__init__:[581,2,1,""],drop:[582,2,1,""],fill:[583,2,1,""],replace:[584,2,1,""]},"pyspark.sql.DataFrameReader":{csv:[585,2,1,""],format:[586,2,1,""],jdbc:[587,2,1,""],json:[588,2,1,""],load:[589,2,1,""],option:[590,2,1,""],options:[591,2,1,""],orc:[592,2,1,""],parquet:[593,2,1,""],schema:[594,2,1,""],table:[595,2,1,""],text:[5,2,1,""]},"pyspark.sql.DataFrameStatFunctions":{__init__:[596,2,1,""],approxQuantile:[597,2,1,""],corr:[598,2,1,""],cov:[599,2,1,""],crosstab:[600,2,1,""],freqItems:[601,2,1,""],sampleBy:[602,2,1,""]},"pyspark.sql.DataFrameWriter":{bucketBy:[603,2,1,""],csv:[604,2,1,""],format:[605,2,1,""],insertInto:[606,2,1,""],jdbc:[607,2,1,""],json:[608,2,1,""],mode:[609,2,1,""],option:[610,2,1,""],options:[611,2,1,""],orc:[612,2,1,""],parquet:[613,2,1,""],partitionBy:[614,2,1,""],save:[615,2,1,""],saveAsTable:[616,2,1,""],sortBy:[617,2,1,""],text:[618,2,1,""]},"pyspark.sql.GroupedData":{__init__:[619,2,1,""],agg:[620,2,1,""],apply:[621,2,1,""],applyInPandas:[622,2,1,""],avg:[623,2,1,""],cogroup:[624,2,1,""],count:[625,2,1,""],max:[626,2,1,""],mean:[627,2,1,""],min:[628,2,1,""],pivot:[629,2,1,""],sum:[630,2,1,""]},"pyspark.sql.HiveContext":{cacheTable:[5,2,1,""],clearCache:[5,2,1,""],createDataFrame:[5,2,1,""],createExternalTable:[5,2,1,""],dropTempTable:[5,2,1,""],getConf:[5,2,1,""],getOrCreate:[5,2,1,""],newSession:[5,2,1,""],range:[5,2,1,""],read:[5,2,1,""],readStream:[5,2,1,""],refreshTable:[5,2,1,""],registerDataFrameAsTable:[5,2,1,""],registerFunction:[5,2,1,""],registerJavaFunction:[5,2,1,""],setConf:[5,2,1,""],sql:[5,2,1,""],streams:[5,2,1,""],table:[5,2,1,""],tableNames:[5,2,1,""],tables:[5,2,1,""],udf:[5,2,1,""],uncacheTable:[5,2,1,""]},"pyspark.sql.PandasCogroupedOps":{applyInPandas:[5,2,1,""]},"pyspark.sql.Row":{__init__:[631,2,1,""],asDict:[632,2,1,""],count:[5,2,1,""],index:[5,2,1,""]},"pyspark.sql.SQLContext":{cacheTable:[5,2,1,""],clearCache:[5,2,1,""],createDataFrame:[5,2,1,""],createExternalTable:[5,2,1,""],dropTempTable:[5,2,1,""],getConf:[5,2,1,""],getOrCreate:[5,2,1,""],newSession:[5,2,1,""],range:[5,2,1,""],read:[5,2,1,""],readStream:[5,2,1,""],registerDataFrameAsTable:[5,2,1,""],registerFunction:[5,2,1,""],registerJavaFunction:[5,2,1,""],setConf:[5,2,1,""],sql:[5,2,1,""],streams:[5,2,1,""],table:[5,2,1,""],tableNames:[5,2,1,""],tables:[5,2,1,""],udf:[5,2,1,""],uncacheTable:[5,2,1,""]},"pyspark.sql.SparkSession":{Builder:[5,1,1,""],__init__:[633,2,1,""],builder:[633,3,1,""],catalog:[639,2,1,""],conf:[640,2,1,""],createDataFrame:[641,2,1,""],getActiveSession:[642,2,1,""],newSession:[643,2,1,""],range:[644,2,1,""],read:[645,2,1,""],readStream:[646,2,1,""],sparkContext:[647,2,1,""],sql:[648,2,1,""],stop:[649,2,1,""],streams:[650,2,1,""],table:[651,2,1,""],udf:[652,2,1,""],version:[653,2,1,""]},"pyspark.sql.SparkSession.Builder":{appName:[5,2,1,""],config:[5,2,1,""],enableHiveSupport:[5,2,1,""],getOrCreate:[5,2,1,""],master:[5,2,1,""]},"pyspark.sql.SparkSession.builder":{appName:[634,2,1,""],config:[635,2,1,""],enableHiveSupport:[636,2,1,""],getOrCreate:[637,2,1,""],master:[638,2,1,""]},"pyspark.sql.UDFRegistration":{register:[5,2,1,""],registerJavaFunction:[5,2,1,""],registerJavaUDAF:[5,2,1,""]},"pyspark.sql.Window":{__init__:[654,2,1,""],currentRow:[655,3,1,""],orderBy:[656,2,1,""],partitionBy:[657,2,1,""],rangeBetween:[658,2,1,""],rowsBetween:[659,2,1,""],unboundedFollowing:[660,3,1,""],unboundedPreceding:[661,3,1,""]},"pyspark.sql.WindowSpec":{orderBy:[662,2,1,""],partitionBy:[663,2,1,""],rangeBetween:[664,2,1,""],rowsBetween:[665,2,1,""]},"pyspark.sql.avro":{functions:[5,0,0,"-"]},"pyspark.sql.avro.functions":{from_avro:[666,4,1,""],to_avro:[667,4,1,""]},"pyspark.sql.functions":{PandasUDFType:[5,1,1,""],abs:[668,4,1,""],acos:[669,4,1,""],add_months:[670,4,1,""],approxCountDistinct:[672,4,1,""],approx_count_distinct:[673,4,1,""],array:[674,4,1,""],array_contains:[675,4,1,""],array_distinct:[676,4,1,""],array_except:[677,4,1,""],array_intersect:[678,4,1,""],array_join:[679,4,1,""],array_max:[680,4,1,""],array_min:[681,4,1,""],array_position:[682,4,1,""],array_remove:[683,4,1,""],array_repeat:[684,4,1,""],array_sort:[685,4,1,""],array_union:[686,4,1,""],arrays_overlap:[687,4,1,""],arrays_zip:[688,4,1,""],asc:[689,4,1,""],asc_nulls_first:[690,4,1,""],asc_nulls_last:[691,4,1,""],ascii:[692,4,1,""],asin:[693,4,1,""],atan2:[695,4,1,""],atan:[694,4,1,""],avg:[696,4,1,""],base64:[697,4,1,""],basestring:[5,3,1,""],bin:[698,4,1,""],bitwiseNOT:[699,4,1,""],broadcast:[700,4,1,""],bround:[701,4,1,""],cbrt:[703,4,1,""],ceil:[704,4,1,""],coalesce:[705,4,1,""],col:[706,4,1,""],collect_list:[707,4,1,""],collect_set:[708,4,1,""],column:[709,4,1,""],concat:[710,4,1,""],concat_ws:[711,4,1,""],conv:[712,4,1,""],corr:[713,4,1,""],cos:[714,4,1,""],cosh:[715,4,1,""],count:[716,4,1,""],countDistinct:[717,4,1,""],covar_pop:[718,4,1,""],covar_samp:[719,4,1,""],crc32:[720,4,1,""],create_map:[721,4,1,""],cume_dist:[722,4,1,""],current_date:[723,4,1,""],current_timestamp:[724,4,1,""],date_add:[725,4,1,""],date_format:[726,4,1,""],date_sub:[727,4,1,""],date_trunc:[728,4,1,""],datediff:[729,4,1,""],dayofmonth:[730,4,1,""],dayofweek:[731,4,1,""],dayofyear:[732,4,1,""],decode:[734,4,1,""],degrees:[735,4,1,""],dense_rank:[736,4,1,""],desc:[737,4,1,""],desc_nulls_first:[738,4,1,""],desc_nulls_last:[739,4,1,""],element_at:[740,4,1,""],encode:[741,4,1,""],exp:[743,4,1,""],explode:[744,4,1,""],explode_outer:[745,4,1,""],expm1:[746,4,1,""],expr:[747,4,1,""],factorial:[748,4,1,""],first:[750,4,1,""],flatten:[751,4,1,""],floor:[752,4,1,""],format_number:[754,4,1,""],format_string:[755,4,1,""],from_csv:[756,4,1,""],from_json:[757,4,1,""],from_unixtime:[758,4,1,""],from_utc_timestamp:[759,4,1,""],get_json_object:[760,4,1,""],greatest:[761,4,1,""],grouping:[762,4,1,""],grouping_id:[763,4,1,""],hash:[764,4,1,""],hex:[765,4,1,""],hour:[766,4,1,""],hypot:[768,4,1,""],initcap:[769,4,1,""],input_file_name:[770,4,1,""],instr:[771,4,1,""],isnan:[772,4,1,""],isnull:[773,4,1,""],json_tuple:[774,4,1,""],kurtosis:[775,4,1,""],lag:[776,4,1,""],last:[777,4,1,""],last_day:[778,4,1,""],lead:[779,4,1,""],least:[780,4,1,""],length:[781,4,1,""],levenshtein:[782,4,1,""],lit:[783,4,1,""],locate:[784,4,1,""],log10:[786,4,1,""],log1p:[787,4,1,""],log2:[788,4,1,""],log:[785,4,1,""],lower:[789,4,1,""],lpad:[790,4,1,""],ltrim:[791,4,1,""],map_concat:[792,4,1,""],map_entries:[793,4,1,""],map_from_arrays:[795,4,1,""],map_from_entries:[796,4,1,""],map_keys:[797,4,1,""],map_values:[798,4,1,""],max:[800,4,1,""],md5:[801,4,1,""],mean:[802,4,1,""],min:[803,4,1,""],minute:[804,4,1,""],monotonically_increasing_id:[805,4,1,""],month:[806,4,1,""],months_between:[808,4,1,""],nanvl:[809,4,1,""],next_day:[810,4,1,""],ntile:[811,4,1,""],overlay:[812,4,1,""],pandas_udf:[813,4,1,""],percent_rank:[814,4,1,""],posexplode:[816,4,1,""],posexplode_outer:[817,4,1,""],pow:[818,4,1,""],quarter:[819,4,1,""],radians:[820,4,1,""],rand:[821,4,1,""],randn:[822,4,1,""],rank:[823,4,1,""],regexp_extract:[824,4,1,""],regexp_replace:[825,4,1,""],repeat:[826,4,1,""],reverse:[827,4,1,""],rint:[828,4,1,""],round:[829,4,1,""],row_number:[830,4,1,""],rpad:[831,4,1,""],rtrim:[832,4,1,""],schema_of_csv:[833,4,1,""],schema_of_json:[834,4,1,""],second:[835,4,1,""],sequence:[836,4,1,""],sha1:[837,4,1,""],sha2:[838,4,1,""],shiftLeft:[839,4,1,""],shiftRight:[840,4,1,""],shiftRightUnsigned:[841,4,1,""],shuffle:[842,4,1,""],signum:[843,4,1,""],sin:[844,4,1,""],sinh:[845,4,1,""],size:[846,4,1,""],skewness:[847,4,1,""],slice:[848,4,1,""],sort_array:[849,4,1,""],soundex:[850,4,1,""],spark_partition_id:[851,4,1,""],split:[852,4,1,""],sqrt:[853,4,1,""],stddev:[854,4,1,""],stddev_pop:[855,4,1,""],stddev_samp:[856,4,1,""],struct:[857,4,1,""],substring:[858,4,1,""],substring_index:[859,4,1,""],sum:[860,4,1,""],sumDistinct:[861,4,1,""],tan:[862,4,1,""],tanh:[863,4,1,""],toDegrees:[865,4,1,""],toRadians:[866,4,1,""],to_csv:[867,4,1,""],to_date:[868,4,1,""],to_json:[869,4,1,""],to_str:[5,4,1,""],to_timestamp:[870,4,1,""],to_utc_timestamp:[871,4,1,""],translate:[875,4,1,""],trim:[876,4,1,""],trunc:[877,4,1,""],udf:[878,4,1,""],unbase64:[879,4,1,""],unhex:[880,4,1,""],unix_timestamp:[881,4,1,""],upper:[882,4,1,""],var_pop:[883,4,1,""],var_samp:[884,4,1,""],variance:[885,4,1,""],weekofyear:[886,4,1,""],when:[887,4,1,""],window:[888,4,1,""],xxhash64:[889,4,1,""],year:[890,4,1,""]},"pyspark.sql.functions.PandasUDFType":{GROUPED_AGG:[5,3,1,""],GROUPED_MAP:[5,3,1,""],SCALAR:[5,3,1,""],SCALAR_ITER:[5,3,1,""]},"pyspark.sql.streaming":{DataStreamReader:[893,1,1,""],DataStreamWriter:[904,1,1,""],ForeachBatchFunction:[915,1,1,""],StreamingQuery:[916,1,1,""],StreamingQueryException:[929,5,1,""],StreamingQueryManager:[930,1,1,""]},"pyspark.sql.streaming.DataStreamReader":{__init__:[893,2,1,""],csv:[894,2,1,""],format:[895,2,1,""],json:[896,2,1,""],load:[897,2,1,""],option:[898,2,1,""],options:[899,2,1,""],orc:[900,2,1,""],parquet:[901,2,1,""],schema:[902,2,1,""],text:[903,2,1,""]},"pyspark.sql.streaming.DataStreamWriter":{__init__:[904,2,1,""],foreach:[905,2,1,""],foreachBatch:[906,2,1,""],format:[907,2,1,""],option:[908,2,1,""],options:[909,2,1,""],outputMode:[910,2,1,""],partitionBy:[911,2,1,""],queryName:[912,2,1,""],start:[913,2,1,""],trigger:[914,2,1,""]},"pyspark.sql.streaming.ForeachBatchFunction":{__init__:[915,2,1,""]},"pyspark.sql.streaming.StreamingQuery":{__init__:[916,2,1,""],awaitTermination:[917,2,1,""],exception:[918,2,1,""],explain:[919,2,1,""],id:[920,2,1,""],isActive:[921,2,1,""],lastProgress:[922,2,1,""],name:[923,2,1,""],processAllAvailable:[924,2,1,""],recentProgress:[925,2,1,""],runId:[926,2,1,""],status:[927,2,1,""],stop:[928,2,1,""]},"pyspark.sql.streaming.StreamingQueryManager":{__init__:[930,2,1,""],active:[931,2,1,""],awaitAnyTermination:[932,2,1,""],get:[933,2,1,""],resetTerminated:[934,2,1,""]},"pyspark.sql.types":{ArrayType:[935,1,1,""],BinaryType:[936,1,1,""],BooleanType:[937,1,1,""],ByteType:[938,1,1,""],DataType:[939,1,1,""],DateType:[940,1,1,""],DecimalType:[941,1,1,""],DoubleType:[942,1,1,""],FloatType:[943,1,1,""],IntegerType:[944,1,1,""],LongType:[945,1,1,""],MapType:[946,1,1,""],NullType:[947,1,1,""],ShortType:[948,1,1,""],StringType:[949,1,1,""],StructField:[950,1,1,""],StructType:[951,1,1,""],TimestampType:[952,1,1,""]},"pyspark.sql.types.ArrayType":{fromInternal:[935,2,1,""],fromJson:[935,2,1,""],json:[935,2,1,""],jsonValue:[935,2,1,""],needConversion:[935,2,1,""],simpleString:[935,2,1,""],toInternal:[935,2,1,""],typeName:[935,2,1,""]},"pyspark.sql.types.BinaryType":{fromInternal:[936,2,1,""],json:[936,2,1,""],jsonValue:[936,2,1,""],needConversion:[936,2,1,""],simpleString:[936,2,1,""],toInternal:[936,2,1,""],typeName:[936,2,1,""]},"pyspark.sql.types.BooleanType":{fromInternal:[937,2,1,""],json:[937,2,1,""],jsonValue:[937,2,1,""],needConversion:[937,2,1,""],simpleString:[937,2,1,""],toInternal:[937,2,1,""],typeName:[937,2,1,""]},"pyspark.sql.types.ByteType":{fromInternal:[938,2,1,""],json:[938,2,1,""],jsonValue:[938,2,1,""],needConversion:[938,2,1,""],simpleString:[938,2,1,""],toInternal:[938,2,1,""],typeName:[938,2,1,""]},"pyspark.sql.types.DataType":{fromInternal:[939,2,1,""],json:[939,2,1,""],jsonValue:[939,2,1,""],needConversion:[939,2,1,""],simpleString:[939,2,1,""],toInternal:[939,2,1,""],typeName:[939,2,1,""]},"pyspark.sql.types.DateType":{EPOCH_ORDINAL:[940,3,1,""],fromInternal:[940,2,1,""],json:[940,2,1,""],jsonValue:[940,2,1,""],needConversion:[940,2,1,""],simpleString:[940,2,1,""],toInternal:[940,2,1,""],typeName:[940,2,1,""]},"pyspark.sql.types.DecimalType":{fromInternal:[941,2,1,""],json:[941,2,1,""],jsonValue:[941,2,1,""],needConversion:[941,2,1,""],simpleString:[941,2,1,""],toInternal:[941,2,1,""],typeName:[941,2,1,""]},"pyspark.sql.types.DoubleType":{fromInternal:[942,2,1,""],json:[942,2,1,""],jsonValue:[942,2,1,""],needConversion:[942,2,1,""],simpleString:[942,2,1,""],toInternal:[942,2,1,""],typeName:[942,2,1,""]},"pyspark.sql.types.FloatType":{fromInternal:[943,2,1,""],json:[943,2,1,""],jsonValue:[943,2,1,""],needConversion:[943,2,1,""],simpleString:[943,2,1,""],toInternal:[943,2,1,""],typeName:[943,2,1,""]},"pyspark.sql.types.IntegerType":{fromInternal:[944,2,1,""],json:[944,2,1,""],jsonValue:[944,2,1,""],needConversion:[944,2,1,""],simpleString:[944,2,1,""],toInternal:[944,2,1,""],typeName:[944,2,1,""]},"pyspark.sql.types.LongType":{fromInternal:[945,2,1,""],json:[945,2,1,""],jsonValue:[945,2,1,""],needConversion:[945,2,1,""],simpleString:[945,2,1,""],toInternal:[945,2,1,""],typeName:[945,2,1,""]},"pyspark.sql.types.MapType":{fromInternal:[946,2,1,""],fromJson:[946,2,1,""],json:[946,2,1,""],jsonValue:[946,2,1,""],needConversion:[946,2,1,""],simpleString:[946,2,1,""],toInternal:[946,2,1,""],typeName:[946,2,1,""]},"pyspark.sql.types.NullType":{fromInternal:[947,2,1,""],json:[947,2,1,""],jsonValue:[947,2,1,""],needConversion:[947,2,1,""],simpleString:[947,2,1,""],toInternal:[947,2,1,""],typeName:[947,2,1,""]},"pyspark.sql.types.ShortType":{fromInternal:[948,2,1,""],json:[948,2,1,""],jsonValue:[948,2,1,""],needConversion:[948,2,1,""],simpleString:[948,2,1,""],toInternal:[948,2,1,""],typeName:[948,2,1,""]},"pyspark.sql.types.StringType":{fromInternal:[949,2,1,""],json:[949,2,1,""],jsonValue:[949,2,1,""],needConversion:[949,2,1,""],simpleString:[949,2,1,""],toInternal:[949,2,1,""],typeName:[949,2,1,""]},"pyspark.sql.types.StructField":{fromInternal:[950,2,1,""],fromJson:[950,2,1,""],json:[950,2,1,""],jsonValue:[950,2,1,""],needConversion:[950,2,1,""],simpleString:[950,2,1,""],toInternal:[950,2,1,""],typeName:[950,2,1,""]},"pyspark.sql.types.StructType":{add:[951,2,1,""],fieldNames:[951,2,1,""],fromInternal:[951,2,1,""],fromJson:[951,2,1,""],json:[951,2,1,""],jsonValue:[951,2,1,""],needConversion:[951,2,1,""],simpleString:[951,2,1,""],toInternal:[951,2,1,""],typeName:[951,2,1,""]},"pyspark.sql.types.TimestampType":{fromInternal:[952,2,1,""],json:[952,2,1,""],jsonValue:[952,2,1,""],needConversion:[952,2,1,""],simpleString:[952,2,1,""],toInternal:[952,2,1,""],typeName:[952,2,1,""]},"pyspark.streaming":{DStream:[953,1,1,""],StreamingContext:[993,1,1,""],StreamingListener:[6,1,1,""],kinesis:[6,0,0,"-"]},"pyspark.streaming.DStream":{__init__:[953,2,1,""],cache:[954,2,1,""],checkpoint:[955,2,1,""],cogroup:[956,2,1,""],combineByKey:[957,2,1,""],context:[958,2,1,""],count:[959,2,1,""],countByValue:[960,2,1,""],countByValueAndWindow:[961,2,1,""],countByWindow:[962,2,1,""],filter:[963,2,1,""],flatMap:[964,2,1,""],flatMapValues:[965,2,1,""],foreachRDD:[966,2,1,""],fullOuterJoin:[967,2,1,""],glom:[968,2,1,""],groupByKey:[969,2,1,""],groupByKeyAndWindow:[970,2,1,""],join:[971,2,1,""],leftOuterJoin:[972,2,1,""],map:[973,2,1,""],mapPartitions:[974,2,1,""],mapPartitionsWithIndex:[975,2,1,""],mapValues:[976,2,1,""],partitionBy:[977,2,1,""],persist:[978,2,1,""],pprint:[979,2,1,""],reduce:[980,2,1,""],reduceByKey:[981,2,1,""],reduceByKeyAndWindow:[982,2,1,""],reduceByWindow:[983,2,1,""],repartition:[984,2,1,""],rightOuterJoin:[985,2,1,""],saveAsTextFiles:[986,2,1,""],slice:[987,2,1,""],transform:[988,2,1,""],transformWith:[989,2,1,""],union:[990,2,1,""],updateStateByKey:[991,2,1,""],window:[992,2,1,""]},"pyspark.streaming.StreamingContext":{__init__:[993,2,1,""],addStreamingListener:[994,2,1,""],awaitTermination:[995,2,1,""],awaitTerminationOrTimeout:[996,2,1,""],binaryRecordsStream:[997,2,1,""],checkpoint:[998,2,1,""],getActive:[999,2,1,""],getActiveOrCreate:[1000,2,1,""],getOrCreate:[1001,2,1,""],queueStream:[1002,2,1,""],remember:[1003,2,1,""],socketTextStream:[1004,2,1,""],sparkContext:[1005,2,1,""],start:[1006,2,1,""],stop:[1007,2,1,""],textFileStream:[1008,2,1,""],transform:[1009,2,1,""],union:[1010,2,1,""]},"pyspark.streaming.StreamingListener":{Java:[6,1,1,""],onBatchCompleted:[6,2,1,""],onBatchStarted:[6,2,1,""],onBatchSubmitted:[6,2,1,""],onOutputOperationCompleted:[6,2,1,""],onOutputOperationStarted:[6,2,1,""],onReceiverError:[6,2,1,""],onReceiverStarted:[6,2,1,""],onReceiverStopped:[6,2,1,""],onStreamingStarted:[6,2,1,""]},"pyspark.streaming.StreamingListener.Java":{"implements":[6,3,1,""]},"pyspark.streaming.kinesis":{InitialPositionInStream:[6,1,1,""],KinesisUtils:[6,1,1,""],utf8_decoder:[6,4,1,""]},"pyspark.streaming.kinesis.InitialPositionInStream":{LATEST:[1011,3,1,""],TRIM_HORIZON:[1012,3,1,""]},"pyspark.streaming.kinesis.KinesisUtils":{createStream:[1013,2,1,""]},pyspark:{Accumulator:[7,1,1,""],AccumulatorParam:[1,1,1,""],BarrierTaskContext:[10,1,1,""],BarrierTaskInfo:[21,1,1,""],BasicProfiler:[1,1,1,""],Broadcast:[22,1,1,""],MarshalSerializer:[1,1,1,""],PickleSerializer:[1,1,1,""],Profiler:[1,1,1,""],RDD:[29,1,1,""],RDDBarrier:[134,1,1,""],SparkConf:[137,1,1,""],SparkContext:[149,1,1,""],SparkFiles:[193,1,1,""],SparkJobInfo:[1,1,1,""],SparkStageInfo:[1,1,1,""],StatusTracker:[1,1,1,""],StorageLevel:[196,1,1,""],TaskContext:[205,1,1,""],ml:[2,0,0,"-"],resource:[4,0,0,"-"],sql:[5,0,0,"-"],streaming:[6,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","attribute","Python attribute"],"4":["py","function","Python function"],"5":["py","exception","Python exception"]},objtypes:{"0":"py:module","1":"py:class","2":"py:method","3":"py:attribute","4":"py:function","5":"py:exception"},terms:{"005766663870645e":[2,230],"13t06":[5,759,871],"16be":[5,588,734,741,896],"16le":[5,734,741],"1a2s3a":[5,875],"1e4":[5,509,600],"1e6":[5,509,600],"1st":[2,312],"25th":[2,312],"2nd":[2,231,249,355,367],"32le":[5,588,896],"3bc51062973c458d5a6f2d8d64a023246354ad7e064b1e4e009ec8a0699a3043":[5,838],"3c01bdbb26f358bab27f267924aa2c9a03fcfdb8":[5,837],"3rd":[2,312],"425264676902229e":[2,230],"491554426243495e":[2,230],"56e":[3,481],"75th":[2,312],"902fbdd2b1df0c4f70b4a5d23525e932":[5,801],"abstract":[0,1,2,3,6,29,213,214,219,220,239,240,263,265,410,953],"boolean":[2,3,5,287,346,395,396,400,426,458,461,463,519,520,539,547,557,558,583,584,641,813,878,887,919,935,937,950],"byte":[1,5,6,155,156,641,781,812,858,880,936,938,997,1004],"case":[1,2,3,5,32,137,154,221,222,225,226,231,232,238,239,240,245,246,249,252,278,299,308,317,318,319,323,351,352,355,356,367,368,375,446,448,455,497,547,577,584,604,607,608,612,613,615,616,618,622,631,637,658,756,757,769,789,810,813,821,822,859,867,869,882,924,932],"char":[5,556],"class":[1,2,3,4,5,6,7,10,21,22,29,103,105,134,137,149,167,168,169,170,176,193,196,205,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,485,490,491,581,596,619,631,633,654,893,904,905,915,916,930,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,993],"default":[1,2,3,5,6,33,89,93,102,103,104,105,106,107,108,124,125,137,139,149,151,160,161,167,168,169,170,173,176,179,190,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,367,368,371,376,377,378,380,381,382,383,384,385,386,387,391,393,394,395,396,397,400,401,402,404,406,408,409,410,412,418,421,424,425,426,427,429,431,448,450,451,454,458,461,463,465,467,470,471,473,475,481,495,516,519,525,527,534,539,540,545,546,550,556,557,558,573,582,585,588,589,590,591,592,593,601,604,607,608,610,611,612,613,615,616,618,632,637,640,641,644,654,673,744,745,750,776,777,779,813,816,817,852,868,870,878,881,888,894,896,897,898,899,900,901,903,908,909,913,919,941,951,954,1002,1013],"enum":[5,667,813],"export":[2,387],"final":[1,3,5,53,410,442,443,446,577,759,859,871,905],"float":[1,2,3,5,7,151,278,291,308,323,326,343,346,424,441,443,447,450,470,494,520,547,569,583,584,588,597,772,809,813,853,896,942,943],"function":[0,1,3,6,11,13,14,30,31,35,41,51,52,53,54,55,56,63,64,78,79,80,81,82,83,86,88,93,94,96,111,119,135,136,149,157,173,207,220,222,231,232,240,244,276,277,287,288,297,298,324,328,330,346,355,356,357,358,363,364,365,366,417,418,455,470,473,491,492,493,511,518,523,524,525,526,531,534,537,539,551,557,559,562,569,570,571,572,581,585,588,596,601,602,616,620,621,622,629,636,639,654,658,659,894,896,905,906,915,953,964,965,966,973,976,977,982,983,988,989,991,993,1000,1001,1009,1013],"import":[1,2,3,5,22,53,54,92,93,94,108,149,152,179,225,226,230,231,232,233,237,244,245,247,249,252,253,257,260,262,266,267,276,279,283,284,289,295,297,299,302,303,305,307,312,315,324,326,327,328,330,332,333,349,351,352,354,355,356,357,361,363,367,368,370,371,373,375,377,379,380,394,398,399,405,407,409,411,427,450,452,455,457,460,462,470,471,473,475,481,492,493,514,534,537,539,551,557,569,602,620,621,622,633,635,641,658,659,666,667,677,678,686,688,744,757,792,793,796,797,798,813,816,867,869,878,905],"int":[1,2,3,5,7,41,152,173,265,335,346,370,425,466,497,516,517,520,527,545,546,547,556,569,582,583,584,585,588,589,592,593,594,595,620,641,756,757,764,813,833,878,894,896,897,902,944],"long":[1,2,3,5,6,76,133,265,332,443,445,446,447,450,520,547,556,583,584,621,622,666,813,889,945,1003],"new":[1,2,3,4,5,6,7,10,11,13,16,21,31,32,36,40,41,48,49,51,78,79,80,81,89,95,104,105,134,135,136,137,149,169,170,173,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,446,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,471,472,473,474,475,476,477,478,479,480,481,482,485,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,550,551,552,553,554,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,656,657,658,659,662,663,664,665,666,667,668,669,670,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,725,726,727,728,729,730,731,732,734,735,736,737,738,739,740,741,743,744,745,746,747,748,750,751,752,754,755,756,757,758,759,760,761,762,763,764,765,766,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,795,796,797,798,800,801,802,803,804,805,806,808,809,810,811,812,813,814,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,870,871,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,930,931,932,933,934,951,956,957,959,960,961,962,963,964,965,967,968,969,970,971,972,973,974,975,976,980,981,982,983,984,985,988,989,990,991,992,993,997,1000,1001,1008,1009],"null":[1,2,3,5,6,165,231,249,287,291,301,317,318,319,323,324,325,326,330,332,355,359,360,367,370,373,437,466,470,494,510,511,516,520,546,547,548,562,582,583,584,585,588,597,604,608,666,667,675,679,682,685,687,690,691,705,738,739,745,750,756,757,760,761,762,763,771,773,777,780,795,817,849,881,894,896,923,935,946,947,950,982],"public":1,"return":[1,2,3,5,6,11,14,16,28,30,31,32,34,36,37,38,39,41,43,44,45,46,47,48,49,50,51,52,53,59,62,63,66,68,69,70,71,72,74,77,78,79,80,81,82,85,87,88,90,91,94,95,98,99,112,114,115,117,120,122,123,126,128,131,135,136,139,148,152,155,157,173,175,185,186,188,189,192,207,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,336,337,339,340,341,342,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,375,376,377,378,379,380,381,382,383,384,385,386,387,390,391,392,393,394,398,399,401,402,403,405,407,409,411,412,413,415,416,417,418,419,421,423,424,425,426,427,428,430,433,434,435,436,438,439,440,441,442,446,448,449,450,452,453,455,464,465,466,468,470,471,473,475,479,480,481,493,494,496,497,498,499,500,502,508,509,512,513,514,516,517,518,522,527,528,530,531,532,533,536,537,538,539,543,545,546,547,550,551,552,553,554,557,558,559,561,563,564,565,566,567,568,569,570,571,572,575,576,578,579,582,584,585,587,588,589,592,593,595,597,600,602,620,621,622,632,637,639,641,642,643,644,645,646,647,648,650,651,652,666,669,670,673,675,677,678,680,681,682,685,686,687,688,689,690,691,693,694,695,696,697,698,705,706,707,708,709,713,714,715,716,717,718,719,720,722,723,724,725,726,727,728,729,735,736,737,738,739,740,744,745,750,754,755,756,757,759,760,761,762,763,764,771,772,773,775,776,777,778,779,780,784,785,788,792,793,796,797,798,800,801,802,803,805,808,809,810,811,813,814,816,817,818,820,823,824,826,827,828,830,837,838,844,845,846,847,848,849,850,855,856,858,859,860,861,862,863,871,877,878,879,881,883,884,887,889,894,896,897,900,901,903,905,917,918,920,922,923,925,926,927,931,932,933,951,956,957,958,959,960,961,962,963,964,965,967,968,969,970,971,972,973,974,975,976,977,980,981,982,983,984,985,987,988,989,990,991,992,996,999,1000,1002,1005,1013],"short":[5,590,591,610,611,641,759,813,871,878,898,899,908,909,948],"static":[1,2,3,5,6,196,317,338,343,346,370,371,373,375,384,386,434,435,439,441,450,470,479,481,514,656,657,658,659,1013],"switch":[1,66],"throw":[2,3,5,6,220,237,238,278,303,304,308,309,310,318,319,323,324,325,326,442,482,504,507,533,585,588,604,607,608,609,612,613,615,616,867,869,894,896,917,932,933,996],"true":[1,2,3,5,6,45,70,85,89,91,96,98,99,106,108,110,111,117,120,137,152,172,175,178,179,180,188,192,197,198,200,201,202,203,204,221,222,225,226,230,231,232,233,237,239,240,244,245,249,252,253,256,257,260,262,266,267,268,269,270,271,272,275,276,278,279,281,282,283,284,287,288,289,291,294,295,297,299,301,302,303,305,307,308,309,311,312,314,315,317,318,320,323,324,326,327,328,347,349,351,352,354,355,356,357,360,361,362,363,365,366,367,368,377,379,380,395,396,398,400,405,407,409,411,415,421,425,427,430,446,448,449,450,451,452,454,457,458,460,461,462,463,466,470,481,496,504,505,506,507,519,520,532,533,536,539,540,541,544,550,552,556,557,558,560,566,568,583,585,588,589,604,608,631,632,633,637,641,651,675,687,750,756,772,773,777,783,808,813,834,849,894,896,897,900,901,903,905,913,914,919,933,935,946,950,951,996,1002,1004,1007,1013],"try":[1,3,5,179,394,398,399,405,407,409,411,427,452,455,457,460,462,470,641],"var":[2,272],"while":[1,2,5,6,7,76,80,81,136,257,347,518,531,585,588,658,659,664,665,894,896,905,953],ALS:[2,3,348,452],AND:[5,654],AWS:[6,1013],Abs:[2,296],Added:[1,5,23,127,188,192,494,519,545,551,597,602,641],And:[1,2,66,136,381],But:[3,427],For:[1,2,3,5,37,53,57,66,75,97,137,151,192,237,238,245,247,256,257,262,263,264,265,278,281,282,287,291,294,297,299,303,343,347,363,364,370,371,373,377,380,397,410,422,424,427,441,446,448,470,494,514,520,547,583,584,585,587,588,589,594,597,607,622,631,635,654,658,659,664,665,673,776,779,811,813,888,894,896,897,902,905,932,941],IDs:[2,3,5,225,226,231,232,249,252,265,351,352,355,356,367,368,408,759,805,871],Ids:[2,347,348],Its:[1,2,154,318],LQS:[5,827],NOT:[1,2,3,5,76,256,433,434,435,436,438,439,440,441,633],Not:[1,2,58,179,225,226,227,230,231,232,237,238,241,244,245,246,249,252,257,258,269],One:[2,4,277,298,485],STS:[6,1013],THEN:5,TRs:[3,454],That:[2,5,278,287,308,736,823,905,920,926],The:[1,2,3,4,5,6,12,17,18,19,21,30,31,32,42,45,53,66,68,76,103,105,106,107,122,132,135,136,149,152,153,156,157,167,168,169,170,176,177,179,188,191,192,206,209,210,211,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,375,376,377,378,380,381,394,395,396,397,400,401,402,405,406,407,408,410,413,416,418,421,422,425,427,429,431,442,443,445,446,447,448,451,452,458,461,463,465,466,470,471,473,475,480,481,482,485,494,495,501,503,504,505,506,507,509,520,525,534,537,540,542,544,545,546,547,567,572,575,577,583,584,585,588,590,591,592,593,597,598,599,600,601,610,611,615,618,620,622,629,631,633,641,653,658,659,664,665,666,682,685,707,708,710,736,740,750,759,763,771,777,781,784,805,808,813,821,822,823,838,842,852,858,871,875,878,888,894,896,898,899,900,901,903,905,906,908,909,913,925,941,947,951,982,998,1002,1008,1009,1013],Then:[2,215,294],There:[2,5,327,620,629,920],These:[1,2,5,149,225,226,227,230,231,232,237,238,241,244,245,246,249,252,257,258,269,327,355,367,726],Use:[1,2,3,5,10,23,149,254,277,298,335,396,401,427,458,461,463,464,465,470,511,726,813,893,904,932],Used:[1,3,137,479],Uses:[5,744,745,816,817],Using:[1,3,5,108,171,455,525,585,588,592,593,601,813,894,896,900,901,903],With:[1,2,5,122,278,567],__getitem__:[5,632],__init__:[7,10,21,22,29,134,137,149,193,196,205,485,490,491,581,596,619,631,633,654,893,904,915,916,930,953,993],__this__:[2,314],_c0:[5,585,756,833],_c1:[5,585,756,833],_c2:[5,756],_imageschema:2,_jconf:[1,137],_jvm:[1,137],a_i:[2,298],a_map:[5,745,817],aaaac:[5,824],ababab:[5,826],abc:[5,720,756,764,765,781,801,837,852,880,889],abcd123:[5,710],abcd:[5,710,711,771,784,790,831,858],abort:[1,32],about:[1,2,4,5,14,18,205,207,210,256,263,264,347,375,376,382,485,511,525,562,601,934],abov:[3,5,448,659],abs:[1,2,3,5,85,117,295,357,363,405,424,448,450,457,460,462,470,554],absenc:[6,1013],absolut:[1,2,3,5,194,272,295,355,356,363,365,366,375,417,448,668],absqrow:[3,448],acceler:[2,349],accept:[2,5,375,379,494,554,588,597,756,757,810,833,834,867,869,896,951],access:[1,2,3,5,7,14,22,76,152,205,207,335,456,587,631,893,904,951],accesskeyid:[6,1013],accord:[1,2,3,5,96,279,298,312,413,418,759,774,849,868,870,871],accordingli:[5,514,813],account:[2,5,220,585,894],accum_param:[1,7,151],accumul:1,accumulatorparam:[1,7,151],accur:[10,21,29,134,193,196,205,485,490,491,581,596,619,631,654,893,904,915,916,930,953],accuraci:[1,2,3,5,45,221,222,238,239,240,269,270,415,427,813],achiev:[2,5,347,494,597,905],aco:5,acquir:[1,179],across:[1,2,3,5,72,89,149,231,249,275,308,324,355,367,378,470,514,540,577,920,923,926,932],act:[2,215,347],action:[1,3,32,179,423,426,472,474,476],activ:[1,2,3,5,6,14,149,159,207,244,282,319,337,341,395,396,400,434,439,458,461,463,642,650,912,915,920,921,923,930,933,999,1000],actual:[1,2,3,5,179,256,263,264,386,387,393,402,408,466,577,658],adamw:[2,227,230,353,354],adapt:[2,245,347],add:[1,2,3,5,6,7,41,53,54,92,93,94,116,124,125,149,151,152,153,324,326,442,497,575,588,590,591,610,611,896,898,899,908,909,951,994],add_month:5,add_on:[5,878],added:[1,2,3,5,54,152,153,193,194,195,277,298,303,324,442,479],addfil:[1,193,194,195],addgrid:[2,377,379,380],adding:[2,5,6,317,347,575,951,982,983],addinplac:1,addit:[1,2,3,5,41,54,118,152,153,278,307,308,309,310,318,319,324,325,470,514,588,603,617,813,896,924,951],addition:[2,5,232,869,905,924],addpyfil:1,address:[1,4,21,485],addstreaminglisten:6,adel:[2,225,351],adjac:[2,3,361,454],adjust:[2,5,225,226,227,230,231,232,237,238,241,244,245,246,249,252,347,348,365,366,759,871],advanc:[3,406],advis:[1,2,76,287,288],affect:[1,2,180,281,282,330,331],affin:[2,3,265,410],aft:[2,349],after:[1,2,3,5,6,11,13,27,89,225,226,231,232,249,252,281,282,291,309,310,318,319,328,329,347,351,352,355,356,367,368,377,380,412,540,658,659,664,665,670,691,707,708,725,736,739,750,777,779,784,823,905,932,953,955,961,970,982,983,992,993,1002],aftsr2:[2,349],aftsr:[2,349],aftsr_model:[2,349],aftsr_path:[2,349],aftsurvivalregress:[2,350],aftsurvivalregressionmodel:[2,349],again:[1,2,5,23,256,934],against:[2,3,5,6,247,248,309,370,384,442,470,585,641,894,1013],againt:[3,470],age2:[5,575,576],age3:5,age:[5,491,492,493,499,500,505,506,508,510,511,513,514,516,517,519,520,521,522,526,527,528,534,535,537,539,541,545,546,547,548,552,553,554,556,557,558,562,563,564,566,567,568,575,576,582,583,584,586,588,589,620,623,625,626,627,628,630,631,632,641,642,666,673,674,698,707,708,717,721,762,763,785,821,822,857,867,869,878,887],agecol:[5,491],ages:[5,585],agg:[5,491,526,673,707,708,713,717,718,719,762,763,813,888],aggreg:[1,2,5,31,41,53,64,124,225,226,231,232,249,252,351,352,355,356,367,368,376,492,510,526,548,577,619,620,629,673,696,707,708,716,750,762,763,775,777,800,802,803,847,854,855,856,860,861,883,884,885,910,913],aggregate_metr:[2,375],aggregatebykei:[1,64],aggregationdepth:[2,233,234,237,238,257,258,349,350,357,358,363,364],agnost:[5,759,871],aic:[2,359,360],aid:[1,7],aka:[2,5,227,230,283,353,354,589],akaik:[2,359,360],alan:[2,298],algebra:[2,3],algo:[2,262],algorithm:[1,2,3,5,45,225,226,227,230,231,232,233,234,237,238,241,244,247,249,252,253,256,257,258,260,261,262,263,264,265,288,291,292,308,312,313,330,332,347,349,350,351,352,353,354,355,356,357,358,361,363,364,367,368,377,380,395,396,400,402,404,406,410,412,416,427,429,430,431,454,458,461,463,471,473,475,494,496,525,536,597,601,889],ali:[5,556],alia:[1,2,5,65,276,297,328,330,333,453,468,514,515,520,521,526,551,553,574,583,602,621,623,627,666,667,670,673,674,679,680,681,684,685,687,688,698,701,710,711,712,713,717,718,719,720,721,725,726,727,728,729,730,731,732,744,748,751,754,755,756,757,758,759,760,761,764,766,769,771,772,773,778,780,781,782,783,784,785,788,790,792,793,795,796,797,798,801,804,805,806,808,809,810,812,819,824,825,826,827,829,831,833,834,835,836,837,838,839,840,841,842,848,849,850,851,852,854,857,858,859,867,868,869,870,871,875,877,878,881,885,886,887,888,889,890],alias:[5,501,503,509,516,520,525,547,582,583,584,590,591,598,599,600,601,610,611,759,871,898,899,908,909],alic:[5,493,499,508,510,511,513,514,516,520,521,522,526,527,534,535,539,545,546,547,548,553,556,557,558,562,564,565,566,567,568,575,576,582,583,584,620,631,632,641,642,666,721,762,763,821,822,857,867,869],align:[5,556],all:[1,2,3,5,6,11,13,16,21,23,30,32,34,35,38,39,44,51,53,55,57,62,66,70,72,75,97,118,119,120,122,123,127,136,137,140,153,155,158,167,169,175,176,179,181,188,192,196,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,337,341,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,370,375,377,378,379,380,381,383,385,397,402,405,406,416,418,434,439,446,448,452,455,470,474,475,476,481,499,500,511,514,516,517,518,523,526,527,531,537,547,553,567,568,570,571,572,573,577,582,584,585,588,589,592,593,604,615,616,620,622,640,650,683,688,726,736,750,761,763,777,780,792,793,795,813,823,825,848,852,860,878,894,896,897,900,901,903,905,906,910,912,913,916,917,923,924,930,932,951,964,982,983,987,992,1002,1007],allclos:[2,232,252,356,368],allgath:1,alloc:[1,2,3,18,30,31,41,53,76,210,225,226,231,232,249,252,262,263,351,352,355,356,367,368,409],allow:[1,2,3,5,6,7,30,31,41,53,155,277,298,311,327,332,347,400,402,404,406,408,431,470,577,585,588,631,650,658,673,813,894,896,905,946,993,1003],allowbackslashescapinganycharact:[5,588,896],allowcom:[5,588,896],allowloc:[1,175],allownumericleadingzero:[5,588,896],allowsinglequot:[5,588,896],allowunquotedcontrolchar:[5,588,896],allowunquotedfieldnam:[5,588,834,896],alltyp:633,almost:[3,406],along:[1,76],alpha:[2,3,237,238,256,262,263,264,347,363,364,408,451],alphabet:[2,5,318,319,631],alphabetasc:[2,309,310,318,319],alphabetdesc:[2,309,310,318,319],alreadi:[1,2,3,5,145,220,324,386,387,393,473,481,482,504,507,585,604,607,608,609,612,613,615,616,894],als2:[2,347],als:[2,347],als_model:[2,347],als_path:[2,347],alsmodel:[2,347],also:[1,2,3,5,7,52,82,93,94,137,155,196,245,254,278,291,297,299,308,309,311,323,325,345,378,397,416,442,451,458,461,463,494,509,518,531,545,562,570,571,590,591,597,600,610,611,620,631,632,641,757,759,813,871,898,899,908,909,920],alter:[5,639,658],altern:[2,3,5,341,347,439,451,452,620,622],although:[1,5,178,179,180,190,813],alwai:[1,2,3,5,6,196,278,406,448,604,813,1000],amazonaw:[6,1013],ambigu:[5,590,591,610,611,759,871,898,899,908,909],america:[5,590,591,610,611,758,759,871,881,898,899,908,909],among:[5,912],amount:[2,3,5,256,263,264,363,364,479,577],an_arrai:[5,745,817],analysi:[5,511,525,562,601],analysisexcept:[5,504,507,533],analyz:[5,519,919],anexponenti:[2,256,262,263,264],angl:[5,714,715,735,820,844,845,862,863],ani:[1,2,3,5,35,66,68,102,103,104,105,107,137,155,167,169,176,181,188,192,225,226,231,232,233,234,249,252,265,278,294,295,297,308,324,328,329,330,331,351,352,355,356,367,368,370,373,394,399,410,424,431,442,464,481,514,516,532,582,585,604,606,608,612,613,618,640,641,658,659,664,665,687,736,776,779,813,852,875,894,903,905,932,951],anint:[5,744],anoth:[1,2,3,5,6,34,68,126,131,178,179,180,219,277,298,332,431,442,448,508,518,530,531,534,537,547,561,570,571,572,584,622,624,631,712,990,997,1008],answer:[5,533],anteced:[2,330,331],anthoni:[3,454],anti:[5,534],antiton:[3,454,455],apach:[1,2,5,6,102,103,104,105,107,108,167,168,169,170,176,327,585,588,590,591,592,593,666,667,894,896,900,901,903,923,994],api:[1,5,6,102,103,104,105,135,136,169,170,335,621,633,813],app:[1,137,149,154],appear:[2,3,5,262,281,282,289,290,328,329,330,331,332,409,422,427,431,691,738,739],append:[1,2,3,5,41,221,222,325,411,481,604,607,608,609,612,613,615,616,910,913,924],appendbia:[3,481],appl:[1,82],applebi:[2,288],appli:[1,2,3,5,6,51,53,55,56,73,78,79,80,81,103,105,135,136,220,233,234,275,278,281,282,308,416,418,419,424,425,426,454,491,523,524,585,588,604,608,637,852,894,896,956,957,964,965,966,967,968,969,970,971,972,973,974,975,976,981,982,985,988,989,991,1009],applic:[1,2,3,5,6,137,143,154,179,191,279,357,358,418,504,505,563,603,634,653,666,667,1013],application_1433865536131_34483:[1,154],applicationid:1,applyinpanda:[5,621,813],appnam:[1,5,149,633],approach:[2,3,213,214,219,220,268,345,347,448,454],approx_count_distinct:[5,672],approxcountdistinct:5,approxim:[1,2,3,5,44,45,85,117,277,291,292,298,308,312,313,347,451,494,562,597,673,735,820],approxnearestneighbor:[2,276,277,297,298],approxquantil:[2,5,291,308],approxsimilarityjoin:[2,276,277,297,298],arbitrari:[1,5,54,167,168,169,170,176,547,562,584,622,666,905],architectur:[3,448],area:[2,3,5,221,222,266,414,590,591,610,611,759,871,898,899,908,909],areaunderpr:[2,3,266,414],areaunderroc:[2,3,221,222,266,414],arg1:[5,785],arg2:[5,785],arg:[1,2,3,179,341,343,379,439,441],argmax:[2,252],argument:[1,2,3,5,6,23,31,41,127,173,237,257,301,311,320,363,470,519,545,587,607,622,631,644,682,726,734,741,755,771,785,788,813,818,828,878,988,989],arithmet:[2,3,337,434],ariti:[3,471,473,475],arn:[6,1013],arnoldi:[3,446,448],around:[1,2,3,5,178,179,180,479,852],arr:[5,674,710],arrai:[1,2,3,4,5,38,118,119,120,123,155,175,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,253,254,257,258,260,261,275,278,282,293,301,303,304,308,311,317,319,327,329,331,333,335,336,337,341,343,347,348,349,350,370,374,394,398,399,403,405,407,409,413,415,428,433,434,439,441,448,452,455,456,457,460,462,467,468,470,471,485,527,588,675,676,677,678,680,681,682,683,684,685,686,687,688,710,740,744,745,751,793,795,796,797,798,816,817,827,842,846,848,849,852,858,869,896,925,935,936],array_contain:5,array_distinct:5,array_except:5,array_intersect:5,array_join:5,array_max:5,array_min:5,array_posit:5,array_remov:5,array_repeat:5,array_sort:5,array_union:5,arrayoflabel:[2,319],arrays_overlap:5,arrays_zip:5,arraytyp:[2,5,332,333,757,813,869,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],arriv:[5,533,577,916,924],arrow:[5,537,568,641,813],art:[1,45],asc:[2,5,318,319,539,557,849],asc_nulls_first:5,asc_nulls_last:5,ascend:[1,2,3,5,96,110,111,119,221,222,239,240,279,280,415,481,539,546,557,558,685,689,690,691,849],ascii:[5,588,734,741,896],asdict:5,asin:5,asml:[3,433,434,436,438,439,440],asnondeterminist:[5,878],asof_join:5,assembl:[2,323,326],assert_almost_equ:[3,409],assert_equ:[3,405,409],assertionerror:[2,3,337,341,434,439],assign:[1,2,3,5,12,89,109,179,206,254,258,261,265,318,319,411,413,540,621,622,637],assignclust:[2,265],associ:[1,2,3,5,6,7,53,54,92,93,94,103,105,179,257,330,331,362,379,413,455,912,931,932,958,982,983,1005,1007],associationrul:[2,330,331],assum:[1,2,3,5,6,111,131,156,265,384,401,410,465,466,546,577,906,1013],assumpt:[5,805],astyp:5,asymptot:[2,256,262,263,264],atan2:5,atan:5,atom:[5,641],attach:[2,345],attempt:[1,2,5,12,20,176,206,212,347,575],attemptnumb:1,attribut:[2,3,5,7,22,29,149,196,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,337,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,377,378,380,381,382,384,386,387,388,391,393,394,399,403,405,407,411,413,414,415,416,417,426,434,437,442,443,446,448,449,452,453,456,457,459,460,462,466,468,475,485,491,631,633,654,916,930,940,993],augment:[3,395,396,400,458,461,463],austin:[2,288],auto:[2,3,231,232,237,238,249,252,355,356,363,364,367,368,451,475],autobatchedseri:[1,29],automat:[1,2,5,7,149,167,168,169,170,176,231,232,249,252,324,355,356,367,368,585,588,594,631,635,894,896,902,950],avail:[1,2,3,5,45,155,167,169,176,188,192,365,366,377,380,454,519,526,562,568,620,924],averag:[1,2,3,5,64,221,222,231,239,240,249,355,367,378,415,416,623,627,696,802],avg:[5,491,526,620,627],avgmetr:[2,377,378],avoid:[1,2,5,30,31,41,53,95,371,497,514,575,585,894,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],avro:0,avrodf:[5,666],avroschema:[5,666],awaitanytermin:[5,934],awaittermin:[5,6,993],awaitterminationortimeout:6,awar:[5,620,622],awsaccesskeyid:[6,1013],awssecretkei:[6,1013],axi:[5,695],b_i:[2,298],back:[2,3,5,293,371,434,439,441,444,589,897],background:[5,916],backslash:[5,588,896],backward:[5,511,525,562,601],bad:[1,155],bag:[3,408],bahmani:[2,260],banana:[1,82],bandwidth:[3,467],bar:[1,2,5,108,287,745,817],barrier:[1,10,11,14,16,21,134,135,136],barriertaskcontext:[1,32],barriertaskinfo:[1,16],base64:[5,879],base:[1,2,3,5,6,45,103,105,132,149,232,244,247,248,253,257,268,311,324,325,347,349,379,382,388,401,402,404,406,408,454,464,465,475,481,498,551,585,590,591,602,603,610,611,637,658,659,682,689,690,691,706,709,712,737,738,739,740,759,760,771,784,785,786,788,858,871,898,899,908,909,914,939],baseon:[2,379],basereadwrit:2,basestr:5,basic:[0,1,2,5,6,29,384,511,562,588,896,953],basicprofil:[1,149],batch:[1,2,3,5,6,106,149,230,256,262,263,264,354,401,412,413,464,465,514,537,813,905,906,914,961,970,982,983,992,993,998,1002],batch_df:[5,906],batch_id:[5,906],batchcomplet:6,batchdur:[6,993],batchid:[5,906],batchsiz:[1,106,149,167,168,169,170,176],batchstart:6,batchsubmit:6,bay:[2,3,245,397,398],bce:[2,266],bce_path:[2,266],bcp:[5,585,588,894,896],bdf:[2,237],bea:[3,394],becaus:[2,3,5,265,303,362,410,481,590,591,610,611,629,658,707,708,750,759,777,805,851,871,898,899,905,908,909],becom:[3,5,470,618],been:[1,2,3,5,6,12,23,35,158,179,206,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,480,577,905,924,1007],beequal:[2,237,238],befor:[1,2,3,5,6,35,93,94,122,149,182,231,232,233,234,237,238,311,323,332,347,355,356,363,364,371,395,396,400,401,412,418,425,426,431,446,448,458,461,463,465,494,567,577,597,658,659,664,665,690,727,738,776,859,996],begin:[5,6,585,849,894,987,1013],behav:[1,5,53,813],behavior:[2,5,277,287,298,318,324,585,588,590,591,592,593,604,607,608,609,612,613,615,616,666,894,896,900,901,903],behind:[5,577],being:[1,2,3,5,6,179,304,442,443,446,585,604,813,878,894,905,1013],belong:[1,3,5,19,211,403,407,413,494,597,778],below:[2,3,5,279,357,418,659,722,813],benefit:[5,726],benjamini:[2,3,279,418],bernoulli:[2,3,245,246,397],best:[2,377,380],bestmodel:[2,378,381],beta:[2,3,221,222,239,240,256,262,263,264,269,408,415],better:[1,2,64,256,263,264],between:[1,2,3,5,6,31,66,227,230,254,256,262,263,264,267,277,298,312,324,327,343,347,353,354,357,358,373,380,381,408,441,446,448,455,470,473,534,547,572,584,632,654,736,808,813,823,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,956,967,971,972,985,987],bewar:[5,631],beyond:[5,852,945],bfg:[2,3,241,244,363,364,366,395],bia:[1,3,100,101,395,396,400,458,461,463,479,481],bias:[2,351,352],big:[5,575],bigint:[5,586,588,589,592,633,720,834],billion:[5,805],bin:[2,3,5,225,226,231,232,249,252,266,308,351,352,355,356,367,368,471,473,475],binar:2,binari:[1,2,3,5,6,92,155,156,221,222,226,232,233,234,237,238,245,247,248,252,266,281,282,287,288,297,303,325,335,394,395,399,414,416,421,475,666,667,697,698,710,720,734,741,781,858,879,936,997],binarizer2:[2,275],binarizerpath:[2,275],binaryclassificationevalu:[2,377,380],binaryclassificationmetr:3,binaryfil:1,binarylogisticregressionsummari:2,binarylogisticregressiontrainingsummari:2,binaryrecord:1,binaryrecordsstream:6,binarysearch:[3,455],binarytyp:[5,765],binomi:[2,237,238,357,358,359,360],bisect:[2,3,253,255,402,403],bisectingkmean:[2,3,254,403],bisectingkmeansmodel:[2,3,253],bisectingkmeanssummari:2,bit:[2,3,5,256,262,263,264,343,441,805,838,889,919,944,945,948],bitwis:[5,699],bitwiseand:5,bitwisenot:5,bitwiseor:5,bitwisexor:5,bkm2:[2,253],bkm:[2,253],bkm_model:[2,253],bkm_path:[2,253],blei:[2,3,262,409],block:[1,2,3,5,11,13,23,27,76,127,241,244,347,348,442,443,446,451,573,924],blockcolindex:[3,442],blockmatrix:[3,443,446],blockrowindex:[3,442],blocks1:[3,442],blocks2:[3,442],blocks3:[3,442],blocksiz:[2,241,244,347,348],blor:[2,237],blormodel:[2,237],bob:[5,493,499,508,510,511,513,520,521,526,528,534,539,545,546,547,548,553,556,557,558,562,563,564,565,567,568,575,576,583,584,620,721,762,763,821,822,857,869],bohman:[2,298],bool:[2,5,253,260,287,520,547,583,584],booleantyp:[5,521],boost:[2,3,231,232,355,356,473,474],bootstrap:[2,3,249,252,367,368,475],both:[1,2,5,6,31,41,76,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,519,530,531,534,572,587,632,635,658,659,664,665,687,808,809,876,987],bottom:[2,3,253,402],bound:[2,3,5,237,238,256,263,264,279,280,299,300,308,448,494,597,658,659],boundari:[2,3,5,361,362,455,658,659,664,665],box:[1,149],branch:[1,11,13],breiman:[2,225,351],broadcast:[1,2,5,149,330,528],brotli:[5,613],bround:5,brp2:[2,276],brp:[2,276],brppath:[2,276],brute:[3,448],bskm:[3,403],bucket:[1,2,5,66,276,277,308,309,310,318,319,324,325,603,617,888],bucketbi:[5,617],bucketed2:[2,278],bucketed_t:[5,603],bucketedrandomprojectionlsh:[2,277],bucketedrandomprojectionlshmodel:[2,276],bucketizer2:[2,278],bucketizerpath:[2,278],bucketlength:[2,276,277],buckets1:[2,278],buckets2:[2,278],build:[1,2,3,5,190,249,252,324,367,368,377,379,380,425],builder:[2,5,375,376,379,633,642],built:[1,5,173,620,666,667],builtin:5,bypass:[3,404],bytearrai:[5,666,667,880],bytebuff:[1,156],bytetyp:[5,641],bzip2:[5,604,608,618],c_t:[3,413],cach:[1,2,3,5,6,27,76,92,118,225,226,231,232,249,252,256,262,263,264,277,298,347,351,352,355,356,367,368,371,442,536,560,633,643],cachedexecutoridletimeout:[1,76],cachenodeid:[2,225,226,231,232,249,252,351,352,355,356,367,368],cachet:5,calcul:[2,3,5,6,221,222,225,226,231,232,249,252,256,263,264,276,288,299,312,313,337,341,351,352,355,356,367,368,408,423,434,439,442,470,471,475,494,501,503,525,597,598,599,601,720,764,801,813,889,982],calculate_with_st:[5,813],calibr:[2,225,226,227,230,231,232,237,238,241,244,245,246,249,252,257,258,269],call:[1,2,3,5,6,11,13,14,22,27,35,50,92,137,149,173,176,179,207,213,215,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,337,341,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,371,377,380,386,387,393,395,403,405,409,411,412,414,415,416,417,419,423,426,428,430,432,434,439,449,452,466,469,472,474,476,497,504,507,575,620,641,813,878,888,905,906,915,917,932,1000],caller:[5,629],came:[5,736,823],can:[1,2,3,5,6,7,14,29,30,31,41,66,89,92,95,98,137,149,151,152,153,167,169,173,178,179,180,205,207,225,226,227,231,232,233,234,238,241,245,246,249,252,254,256,260,261,262,263,264,265,266,275,278,297,308,311,312,317,323,324,325,327,329,343,347,351,352,355,356,367,368,373,375,377,380,387,391,393,395,397,401,406,409,410,412,413,421,423,426,427,441,465,473,475,477,480,490,491,494,496,497,510,514,526,532,536,537,540,545,546,547,548,563,575,577,584,585,588,590,591,594,597,604,608,610,611,612,613,618,620,622,624,631,633,635,640,641,645,646,658,666,726,755,759,813,852,871,878,888,894,896,898,899,902,905,906,907,908,909,912,914,915,920,923,934,935,941,946,950,951,953,982,988,989,993,1000,1013],cancel:[1,158,159,179],cancelalljob:1,canceljobgroup:[1,179],candid:[2,330],cannot:[1,2,3,5,23,178,179,180,326,347,423,426,446,448,470,472,474,476,620,947],captur:[1,112],cardin:[1,3,45,470],care:[2,3,256,262,263,264,425],carri:[1,2,3,21,325,401,464,465],cartesian:[1,5,99,508,695],casesensit:[2,5,317,585,894],cast:[2,5,318,547,569,577,584,633,759,868,870,871,888],cast_all_to_int:[5,569],cat:[1,90],catalog:[5,504,505,506,507,544],catalyst:[5,666],categor:[2,3,225,226,231,232,249,252,279,287,291,303,304,308,324,325,351,352,355,356,367,368,370,418,470,471,473,475],categori:[2,3,5,221,222,225,226,231,232,239,240,249,252,294,303,304,308,309,310,324,325,351,352,355,356,367,368,415,470,471,473,475,658,659],categoricalcol:[2,287],categoricalfeaturesinfo:[3,471,473,475],categorymap:[2,324,325],categorys:[2,303,304],caus:[1,2,3,5,76,155,225,226,231,232,249,252,256,262,263,264,324,347,351,352,355,356,367,368,377,380,442,575,813,905,929],caution:[1,23],cbrt:5,cd9fb1e148ccd8442e5aa74904cc73bf6fb54d1d54d333bd596aa9bb4bb4e961:[5,838],cdf:[3,5,470,705],cdot:[2,277,298],ce_path:[2,267],ceil:[5,494,597,622],cell:[5,556],censor:[2,349,350],censorcol:[2,349,350],center:[2,3,253,254,255,259,260,261,295,312,313,315,316,403,406,407,408,412,413,425,426,479],centr:[3,412],centroid:[2,3,255,412,413],certain:[2,3,5,256,324,470,481,514,620,622],chain:[1,5,137,569],chang:[1,2,3,5,6,23,52,54,82,127,221,222,231,232,256,257,263,264,277,298,301,311,320,355,356,365,366,404,494,495,519,540,545,551,573,585,588,590,591,592,593,597,602,641,759,834,852,871,894,896,900,901,903,965,976,1002],charact:[2,5,311,585,588,604,692,734,741,781,801,875,880,894,896],character:[2,6,357,358,953],characterist:[2,3,5,221,222,414,813],charset:[5,604,608,734,741],chartoescapequoteescap:[5,585,604,894],cheaper:[3,448],check:[1,2,5,90,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,384,585,637,675,720,740,813,894,932],checkcod:[1,90],checkpoint:[1,2,3,5,6,58,69,71,76,177,225,226,231,232,249,252,256,262,263,264,347,351,352,355,356,367,368,408,536,914,920,926,1000,1001,1013],checkpointinterv:[2,3,6,225,226,231,232,249,252,256,262,263,264,347,351,352,355,356,367,368,408,1013],checkpointloc:[5,913],checkpointpath:[6,1000,1001],chi:[2,3,279,359,360,370,418,419,466,470],child:[1,2,3,178,179,180,225,226,231,232,249,252,351,352,355,356,367,368,471],chisqresult:[2,370],chisqselector:[2,3,280],chisqselectormodel:[2,3,279],chisqselectorpath:[2,279],chisqtest:[3,470],chisqtestresult:3,chisquar:[3,418],chisquaredtest:[3,470],chisquaretest:2,choic:[2,324],choos:[1,2,3,149,167,168,169,170,176,231,232,249,252,260,261,279,308,324,355,356,367,368,418,475],chosen:[1,2,98,298,308],chunk:[2,328,329],circuit:[5,813,878],citi:[5,590,591,610,611,759,871,898,899,908,909],claim:[5,497],classif:[0,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,266,269,270,355,356,367,368,377,379,380,394,395,396,397,398,399,400,401,414,415,471,472,473,475],classifi:[2,3,221,222,233,234,239,240,244,245,247,248,398,415,471,473,475],classmethod:[1,2,3,5,6,14,166,182,193,194,195,207,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,383,390,394,395,396,397,398,399,400,402,404,405,406,407,408,409,410,411,413,428,429,430,431,451,452,454,455,457,458,460,461,462,463,471,472,473,474,475,476,477,480,642,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,999,1000,1001],classnam:[1,103,105,167,168,169,170,176],classof:[3,402],classpath:5,claus:[5,587],clazz:2,clean:[2,5,256,905],clear:[1,2,3,5,179,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,394,399,932],clearcach:5,clearthreshold:[3,394,399],client:[6,1013],clip:[2,269],cloglog:[2,357,358],clone:[1,137],close:[1,2,3,5,66,106,108,172,267,481,494,597,905],closest:[2,3,5,277,298,329,413,828],cloudwatch:[6,1013],cls:[2,384],club:[5,667],cluster:[0,1,5,6,7,72,149,157,177,253,254,255,256,257,258,259,260,261,262,263,264,265,267,402,403,404,405,406,407,408,409,410,411,412,413,587,607,638,920,993],clustercent:[2,3,253,254,260,261,403,407,413],clusterdata_1:[3,405],clusterdata_2:[3,405],clusteringevalu:[2,254],clusters:[2,253,255,257,259,260],clusterweight:[3,413],cmu:[3,410,454],cnb:[2,245],coalesc:[1,5,62,95],code:[1,2,3,5,11,13,288,328,329,427,519,764,889],codec:[1,5,108,604,608,612,613,618],codegen:[5,519],coeffici:[2,3,5,227,230,233,234,237,238,245,247,349,350,353,354,357,358,360,363,364,365,366,371,375,384,417,459,501,598,713],coefficientmatrix:[2,237,238],coefficientstandarderror:[2,360,365,366],cogroup:[1,5,6,65,73],cogroupeddata:[5,624],cohen:[2,3,265,410],col0:[5,572,585,588,589,594,894,896,897,902],col1:[5,498,501,503,509,572,585,588,589,594,598,599,600,677,678,686,695,713,718,719,768,795,805,809,813,818,894,896,897,902],col1_:[5,509,600],col2:[5,498,501,503,509,572,598,599,600,677,678,686,695,713,718,719,768,795,809,813,818],col:[2,3,5,276,287,297,303,333,375,442,443,444,446,448,481,493,494,510,511,513,525,526,539,545,546,548,551,553,557,558,565,569,575,597,601,602,603,614,617,623,626,627,628,630,656,657,662,663,668,669,672,673,674,675,676,679,680,681,682,683,684,685,688,689,690,691,692,693,694,696,697,698,699,701,703,704,705,707,708,709,710,711,712,714,715,716,717,720,721,730,731,732,734,735,737,738,739,740,741,743,744,745,746,748,750,751,752,754,755,756,757,760,761,762,763,764,765,766,769,772,773,774,775,776,777,779,780,781,783,786,787,788,789,790,791,792,793,796,797,798,800,801,802,803,804,806,813,816,817,819,820,826,827,828,829,831,832,833,835,837,838,839,840,841,842,843,844,845,846,847,849,850,853,854,855,856,857,860,861,862,863,865,866,867,868,869,870,876,879,880,882,883,884,885,886,889,890,911],col_nam:[5,569],coldstartstrategi:[2,347,348],colin:[2,298],collabor:[2,347],collect:[0,1,2,3,5,6,22,29,34,36,37,40,41,48,49,51,52,53,54,57,62,63,64,65,68,72,73,74,75,78,79,82,88,90,91,93,95,96,97,99,106,110,111,114,115,126,128,131,132,133,149,152,171,172,173,179,188,190,192,253,256,257,260,262,263,264,276,278,281,289,297,305,312,315,318,324,330,333,347,370,371,377,380,394,398,399,405,409,411,420,422,424,425,430,432,442,446,448,450,452,455,457,460,462,471,473,475,481,491,492,493,504,505,506,507,508,513,521,526,532,533,534,535,539,544,553,554,557,565,575,576,592,593,620,623,625,626,627,628,629,630,633,641,642,644,648,651,666,667,670,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,698,701,707,708,710,711,712,713,717,718,719,720,721,725,726,727,728,729,730,731,732,740,744,747,748,751,754,755,756,757,758,759,760,761,764,765,766,769,771,772,773,774,778,780,781,782,784,785,788,790,793,796,797,798,801,804,805,806,808,809,810,816,819,821,822,824,825,826,827,829,831,833,834,835,836,837,838,839,840,841,842,846,848,849,850,851,852,857,858,859,867,868,869,870,871,875,877,880,881,886,887,888,889,890,900,901,906,1003],collect_list:5,collect_set:5,collectasmap:1,collectsubmodel:[2,377,380],collectwithjobgroup:1,colnam:[5,490,498,575],colptr:[2,3,338,340,435,438],colregex:5,colsperblock:[3,442,443,446],colstat:[3,448,470],column:[0,2,3,5,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,336,343,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,367,368,370,371,373,375,376,415,420,425,426,433,441,442,443,446,447,448,449,456,470,481,491,494,498,501,503,509,510,511,513,514,516,517,518,520,521,525,526,531,534,537,539,545,546,547,548,551,553,556,557,558,562,565,569,570,571,572,575,576,577,582,583,584,585,587,588,597,598,599,600,601,602,603,604,612,613,614,615,616,617,618,620,622,623,626,627,628,629,630,641,644,662,663,666,667,673,674,675,676,677,678,679,680,681,683,684,685,686,688,689,690,691,692,697,698,705,706,710,711,712,713,717,718,719,720,721,723,724,737,738,739,740,744,745,747,751,754,755,756,757,759,760,761,762,763,764,765,770,771,772,773,774,776,779,780,783,784,790,792,793,795,796,797,798,805,809,810,813,816,817,821,822,824,826,827,831,842,846,849,851,857,867,868,869,870,871,876,879,887,888,889,894,896,903,911,913],column_nam:[2,287],columnnameofcorruptrecord:[5,585,588,894,896],columnprun:[5,585],columnschema:[2,335],columnsimilar:[3,446,448],com:[3,6,427,1013],combfunc:[1,31],combin:[1,2,5,30,31,41,93,94,379,537,603,622],combinator:[2,298],combinebykei:[1,6],combop:[1,30,124],come:[2,5,303,373,736,823],comin:[5,813],command:[1,5,90],comment:[5,585,588,894,896],commit:[5,905,924],common:[2,3,5,299,346,371,687,759,871],commonli:[1,2,3,196,256,262,263,264,408],commun:[2,347],commut:[1,6,7,53,92,93,94,982,983],companion:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368],compar:[1,2,3,83,86,373,470],comparison:[2,3,253,317,402],compat:[1,2,3,5,6,237,238,343,441,511,525,562,601,631,666,710,813,997,998,1008],competit:[5,736,823],compil:[2,216],complement:[2,245],complet:[1,2,3,5,6,27,291,332,413,431,910,913,1007],complex:[2,384],compon:[2,3,5,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,405,448,695],composit:[2,257],composition:[3,427],compress:[1,5,108,604,608,612,613,618],compressioncodecclass:[1,103,107,108],compris:[3,450],comput:[1,2,3,5,6,17,66,76,84,89,100,101,113,129,209,221,222,231,245,254,256,266,267,268,269,270,289,290,291,312,315,330,337,347,355,370,371,375,394,399,403,407,413,414,416,420,422,423,425,427,429,434,437,442,443,444,446,448,451,454,457,459,460,462,470,494,497,509,511,540,562,577,597,600,620,623,626,627,628,629,630,668,669,692,693,694,695,697,699,703,704,714,715,734,735,741,743,746,748,752,765,768,781,782,786,787,820,843,844,845,853,862,863,993,1003],computecolumnsummarystatist:[3,448],computecost:[2,3,253,254,403,407,413],computecovari:[3,448],computegramianmatrix:[3,446,448],computeprincipalcompon:[3,448],computeq:[3,448],computesvd:[3,446,448],computeu:[3,446,448,449],concat:5,concat_w:5,concaten:[5,679,710,711],concentr:[2,3,256,262,263,264,408],concept:[2,3,262,409],concis:[5,569,629],concret:[5,491],concurr:[1,149],cond:[5,534],condit:[2,3,5,225,226,227,230,231,232,237,238,241,244,245,246,249,252,257,258,269,396,398,400,446,448,458,461,463,521,574,813,878,887],conduct:[2,3,370,373,470],conf:[1,5,102,103,104,105,137,149,166,167,168,169,170,635,637,758,881],confid:[1,2,3,44,85,117,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,257,258,266,269,330,331,347,451],config:[5,546,590,591,610,611,633,637,640,898,899,908,909],configur:[1,2,3,5,102,103,104,105,137,138,139,141,145,148,167,168,169,170,276,303,312,412,451,585,588,615,635,640,813,894,896,913,925],conflict:[2,5,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,547,584],confus:[3,5,415,759,871],confusionmatrix:[3,415],connect:[1,5,6,146,149,587,607,636,638,905,993,1004],consecut:[5,805],consequ:[2,330,331],consid:[1,2,3,5,95,225,226,231,232,249,252,351,352,355,356,367,368,404,406,475,514,516,520,525,547,582,583,584,601,805,878],consist:[1,2,3,5,111,179,215,267,442,446,448,546,951],consol:[5,519,556,919],constant:[1,2,3,156,196,347,401,412,451,465],constantin:[3,448],constrain:[2,237,238],constraint:[2,3,5,347,451,658],construct:[2,3,5,282,319,427,587,622,633,951],consum:[1,5,122,567],contain:[1,2,3,5,6,37,38,48,49,57,66,68,70,72,75,97,114,122,132,173,192,193,195,196,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,370,371,373,375,376,377,378,380,381,384,401,402,418,422,429,431,441,442,448,450,457,460,462,464,465,466,470,494,512,513,516,518,520,530,531,533,547,561,567,570,571,572,576,577,582,583,584,588,597,604,622,632,644,675,677,678,683,684,686,687,688,740,755,756,757,759,795,797,798,833,834,848,852,867,869,871,896,910,913,935,946,951,960,961,963,992,1000],containsnul:[5,935],content:[0,2,155,192,376,540,543,568,578,579,604,606,607,608,609,612,613,615,616,618,913],context:[1,2,3,5,6,10,22,149,185,328,329,480,481,482,650,932,993,998,999,1000,1001,1003],contextu:[1,10,14,205,207],conting:[2,3,5,370,470,509,600],continu:[2,3,5,6,225,226,231,232,245,249,252,275,278,308,324,325,351,352,355,356,367,368,373,470,533,905,906,914,916,924,953],contribut:[2,3,231,232,257,347,355,356,473],control:[1,2,3,5,41,181,196,279,281,282,308,318,363,364,418,422,511,537,546,585,588,666,756,757,833,834,852,867,869,896],conv:5,conveni:[2,308],converg:[2,3,227,230,233,234,237,238,241,244,256,257,258,260,261,262,263,264,349,350,353,354,357,358,363,364,395,404,406,446,448],convergencetol:[2,3,257,396,400,401,404,405,458,461,463,465],convers:[2,5,346,813,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],convert:[1,2,3,5,102,103,104,105,107,167,168,169,170,245,256,262,293,301,303,311,320,333,335,336,342,346,370,394,397,399,402,404,406,433,434,435,436,438,439,440,441,442,443,446,470,481,566,641,666,667,712,726,735,758,759,789,820,867,868,869,870,871,880,881,882,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],convertmatrixcolumnsfromml:[3,481],convertmatrixcolumnstoml:[3,481],convertvectorcolumnsfromml:[3,481],convertvectorcolumnstoml:[3,481],cooper:[2,298],coordin:[3,5,6,443,577,695,1013],coordinatematrix:[3,442,446,447,448],copi:[1,2,3,5,6,27,88,178,179,180,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,341,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,433,434,435,436,438,439,440,441,813,905,977],core:[5,6,638,812,953],corpu:[2,3,256,262,263,264,427],corr:[2,3,5,371,470],correct:[1,2,3,5,100,101,315,395,448,622,813],correctli:[2,3,5,221,222,239,240,415,932],correl:[2,3,5,225,351,470,501,598,713],correspond:[2,3,5,6,215,225,231,249,254,262,265,292,293,319,332,349,350,351,355,360,365,366,367,417,452,458,461,463,587,607,666,695,875,991,1009],corrupt:[5,585,588,894,896],cos:[3,5,411],cosh:5,cosin:[2,3,5,253,254,260,261,267,283,329,446,448,669,714,715],cosinesimilar:[3,428],cost:[2,3,5,254,403,407,413,448,519,577],costli:[2,371],could:[1,2,3,4,5,6,256,263,264,281,282,349,350,402,470,485,494,597,631,682,726,765,771,784,982,987],count:[1,2,3,5,6,44,46,47,91,98,112,225,226,231,232,249,252,256,262,263,264,281,282,288,289,308,324,337,341,351,352,355,356,367,368,375,408,421,434,439,450,453,468,469,470,509,510,511,512,525,526,533,535,542,548,550,551,562,600,601,602,620,633,673,684,717,859,960,961,962,982,983],countapprox:1,countapproxdistinct:1,countbykei:1,countbyvalu:[1,6],countbyvalueandwindow:6,countbywindow:6,countdistinct:[5,673],counter:[1,45],counterpart:[2,5,383,385],countri:[5,654],countvector:[2,262,282],countvectorizermodel:[2,281],countvectorizerpath:[2,281],cours:[5,629],cov:[2,5,257,258,374],covar_pop:5,covar_samp:5,covari:[3,5,448,503,599,718,719],cover:[2,5,278,308,585,588,894,896,903],covert:[2,3,343,441],cprofil:1,crash:[5,563,587,607,905],crc32:5,creat:[1,2,3,5,6,7,22,31,41,42,45,62,73,90,99,103,105,134,137,149,151,163,173,176,178,179,180,193,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,338,343,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,371,376,377,378,380,381,406,418,427,435,441,450,471,490,491,504,505,506,507,510,544,548,585,587,588,607,619,620,631,633,637,639,641,644,656,657,658,659,674,684,721,751,770,774,783,795,796,813,857,878,894,896,941,951,953,993,997,1000,1001,1002,1004,1008,1009,1010,1013],create_map:5,createcombin:[1,6,41,957],createdatafram:[2,3,5,226,230,232,244,245,252,253,257,260,262,265,266,267,269,270,271,272,275,276,278,279,281,283,284,287,288,289,291,294,295,297,299,301,302,303,305,307,308,309,311,312,314,315,317,318,320,323,324,326,327,328,330,333,347,349,352,354,356,357,361,363,368,370,371,373,377,380,452,481,498,518,531,537,569,572,621,622,642,658,659,666,667,670,675,676,677,678,679,680,681,682,683,684,685,686,687,688,701,705,707,708,710,711,712,713,718,719,720,725,726,727,728,729,730,731,732,740,744,745,748,751,754,755,756,757,758,759,760,761,764,765,766,769,771,772,773,774,778,780,781,782,784,788,790,795,801,804,806,808,809,810,812,813,816,817,819,824,825,826,827,829,831,835,836,837,839,840,841,842,846,848,849,850,852,858,859,867,868,869,870,871,875,877,878,880,881,886,888,889,890],createexternalt:5,createglobaltempview:5,createorreplaceglobaltempview:5,createorreplacetempview:[5,544,595,633,648,651],createstream:6,createt:5,createtempview:5,createtransformfunc:[2,220],creation:[2,5,376,932],credenti:[6,1013],criterion:[2,3,225,226,231,232,249,252,351,352,355,356,359,360,367,368,471,475],cross:[2,5,294,347,348,377,378,380,381,534],crossjoin:5,crosstab:5,crossvalid:[2,380],crossvalidatormodel:[2,377],crpc:[3,454],csc:[2,3,340,438],cst:[5,590,591,610,611,898,899,908,909],cstat:[3,470],csv:[5,590,591,610,611,756,833,867,898,899,908,909],csv_sdf:[5,894],ctx:[1,29],cube:[5,703,762,763],cume_dist:5,cumul:[2,3,5,373,416,470,722],current:[1,2,3,5,6,14,32,61,92,152,178,179,180,207,232,233,240,256,262,288,291,309,314,361,366,371,373,375,408,416,423,426,454,470,472,474,476,497,501,510,528,537,548,553,560,577,590,591,598,610,611,622,629,642,654,658,659,664,665,722,723,724,758,770,776,779,805,813,881,898,899,908,909,912,921,927,993,999,1000],current_d:5,current_timestamp:5,currentdatabas:5,currentrow:[5,654,658,659,664,665],curv:[2,3,221,222,266,414],custom:[1,5,7,41,149,151,569,585,588,604,608,894,896],customarili:[5,813],cutler:[2,225,351],cvmodel:[2,377],cvmodelread:[2,377],cyclic:[5,720],dai:[5,589,593,595,617,725,727,728,729,730,731,732,778,808,810,888],danish:[2,317],data2:[2,276,297],data:[0,1,2,3,5,6,7,23,38,39,76,95,103,105,118,119,120,123,151,156,196,213,220,227,230,231,232,237,241,244,245,247,249,252,253,255,256,257,259,260,262,263,264,265,276,277,287,295,297,298,303,304,305,308,309,310,312,313,315,316,318,319,323,324,325,326,328,329,330,333,335,341,347,348,353,354,355,356,363,367,368,373,377,378,380,381,383,384,385,394,395,396,397,398,399,400,401,403,405,407,409,410,413,418,422,425,426,427,429,430,431,432,433,434,435,436,438,439,440,441,442,454,455,456,457,458,460,461,462,463,464,465,469,470,471,472,473,474,475,476,479,481,482,491,511,514,517,520,525,527,533,545,546,547,562,563,568,577,581,583,584,585,586,589,590,591,594,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,620,622,641,645,646,658,666,667,674,675,676,679,680,681,682,683,684,685,740,751,756,757,760,774,781,793,796,797,798,805,813,827,842,846,849,851,867,869,894,895,897,898,899,902,905,907,908,909,910,913,914,916,920,924,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,951,952,953,990,993,997,998,1000,1001,1003,1004,1007],data_path:[2,237,247],data_typ:[5,951],databas:[2,3,5,332,431,587,607,639,759,871],datafram:[0,1,2,3,5,98,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,375,377,378,380,381,446,448,481,490,581,582,583,584,585,587,588,589,592,593,595,596,597,598,599,600,601,602,604,606,607,608,609,612,613,615,616,618,619,620,622,629,631,632,633,641,644,645,646,648,651,654,700,805,813,893,894,896,897,900,901,903,904,906,910,913,923],dataframenafunct:[5,516,520,538,547],dataframeread:[5,645],dataframestatfunct:[5,501,503,509,525,559],dataframewrit:[5,578],dataset:[0,1,2,3,5,29,176,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,367,368,370,371,373,377,378,380,381,383,385,410,418,422,425,431,470,473,475,481,496,533,536,551,588,602,633,896,906,910,913],dataseta:[2,276,277,297,298],datasetb:[2,276,277,297,298],datasourc:[5,585,590,591,610,611,756,757,833,834,867,869,894,898,899,908,909],datastreamread:[5,646],datastreamwrit:[5,533,579,923],datatyp:[1,5,537,622,641,813,878,935,946,950,951],date1:[5,808],date2:[5,808],date:[5,585,587,588,604,608,654,670,723,725,726,727,730,731,732,766,778,804,806,808,810,819,835,868,877,886,888,890,894,896,940],date_add:5,date_format:5,date_sub:5,date_trunc:5,datediff:5,dateformat:[5,585,588,604,608,894,896],datetim:[5,6,585,588,604,608,633,670,725,726,727,728,759,778,810,868,870,871,877,894,896,940,952,987],datetyp:[5,723,868],david:[3,448],dayofmonth:5,dayofweek:[5,810],dayofyear:5,dbname:5,dcg:[3,416],dct:2,dctpath:[2,283],ddl:[5,537,585,588,589,594,622,756,757,813,833,834,878,894,896,897,902],dead:[1,179],deal:[2,5,347,348,585,588,894,896],debug:[1,5,121,181,519,919],decai:[2,3,256,262,263,264,412,413],decayfactor:[3,412,413],decid:[3,5,396,400,426,458,461,463,587,813],decim:[5,588,701,754,829,896,941],decimaltyp:[5,945],decis:[2,3,225,226,231,232,249,252,351,352,355,356,367,368,471,472],decisiontre:[3,473],decisiontreeclassifi:[2,225],decisiontreeclassificationmodel:[2,226,231,249,252],decisiontreemodel:[3,471],decisiontreeregressionmodel:[2,232,352,355,356,367,368],decisiontreeregressor:[2,351],declar:[2,324,325],decod:[1,5,6,108,585,879,894,1013],decomp:[3,448],decompos:[3,446,448],decomposit:[3,437,446,448,449],decor:[5,813],decreas:[1,2,3,6,95,276,277,297,298,361,362,409,984],dedupl:[5,570,571,572,905,906],deep:[2,247,248,377,378,380,381],deeper:[2,5,225,226,231,232,249,252,351,352,355,356,367,368,751],def:[1,3,5,41,52,55,56,79,80,81,82,152,179,411,523,524,537,569,620,621,622,813,878,905,906],defaultawscredentialsproviderchain:[6,1013],defaultminpartit:1,defaultparallel:[1,3,176,450],defaultparammap:[2,386],defaultparamsread:[2,385],defaultparamswrit:[2,383,384],defaultvalu:[1,5,139,776,779],defin:[1,2,3,5,6,7,53,58,151,181,278,314,359,360,365,366,417,491,497,551,577,585,587,588,602,604,608,618,621,622,636,654,656,657,658,659,662,663,664,665,813,878,894,896,903,915,951,962],deflat:[5,604,608,618],degre:[2,3,5,265,307,359,360,365,366,410,466,470,820,865],degreesoffreedom:[2,3,359,360,365,366,370,466,470],delai:[5,577],delaythreshold:[5,577],deleg:[2,3,337,434],delet:[1,2,3,23,27,106,108,127,172,256,262,263,264,481],delim:[5,859],delimit:[2,3,5,6,332,431,588,608,679,859,896,1004],dens:[2,3,226,230,232,233,237,244,245,247,252,253,257,260,262,266,267,276,279,283,284,295,297,299,302,305,307,312,315,324,326,327,333,336,337,338,343,349,352,354,356,357,361,363,368,370,371,374,375,377,380,409,420,422,424,425,433,434,435,441,442,446,448,468,470,481],dense1:[2,3,337,434],dense2:[2,3,337,434],dense3:[2,3,337,434],dense_rank:[5,823],densematrix:[2,3,230,245,257,262,338,354,371,374,405,435,442,446,448,449,468,481],densevector:[2,3,226,230,232,233,237,244,245,247,252,257,276,279,283,284,289,297,299,302,305,307,312,315,323,324,326,327,328,341,343,349,354,356,357,361,368,374,413,418,420,422,424,425,439,441,446,448,449,468,481],densiti:[3,467],depart:[5,491],depend:[1,2,3,5,6,121,153,154,303,347,457,460,462,497,616,707,708,750,777,805,851,905,953],deploi:[5,666,667],deploy:[5,666,667],deprec:[1,2,3,5,81,254,396,458,461,463,544,621,631,672,813,865,866],depth:[1,2,3,124,125,225,226,231,232,233,234,237,238,249,252,257,258,349,350,351,352,355,356,357,358,363,364,367,368,471,472,473,475],deptid:[5,491],deriv:[2,3,256,403,405,407,409,457,460,462],desc:[5,493,534,539,557,929],desc_nulls_first:5,desc_nulls_last:5,descend:[1,3,5,123,446,448,449,452,539,557,558,737,738,739,849],descent:[2,3,227,230,256,262,263,264,353,354,401,458,461,463,465],describ:[2,3,4,5,256,263,264,330,332,409,431,448,485,525,562,601,622,813],describetop:[2,3,256,262,263,264,409],descript:[1,2,40,121,178,179,225,231,237,238,249,308,351,355,357,358,367],deseri:[1,5,176,196,666,905],design:[1,2,3,32,262,409,448],desir:[2,3,5,253,254,402,838],destin:[2,265],destroi:[1,2,295],detail:[1,2,3,5,6,308,412,446,448,470,519,759,871,953,1013],detect:[5,588,813,896],determin:[2,3,5,220,225,310,347,351,365,366,376,401,403,407,413,417,443,446,448,465,481,585,588,641,894,896],determinist:[2,3,5,347,448,494,597,707,708,750,777,805,821,822,842,878,906],dev:[5,631],develop:[2,3,6,265,410,1003],developerapi:1,devianc:[2,358,359,360],devianceresidu:[2,365,366],deviat:[1,2,3,5,100,113,227,230,315,316,353,354,373,375,425,426,450,855,856],df0:[5,782,805],df1:[2,5,283,291,308,333,518,531,534,572,588,836],df2:[2,5,275,276,283,291,297,308,317,333,504,505,506,507,508,513,518,528,531,534,544,560,572,585,588,641,648,651,707,708,836],df3:[2,5,226,283,352,505,506,534,623,626,627,628,630,641],df4:[5,516,520,534,542,547,582,583,584,629],df5:[5,520,583,629],df_as1:[5,493],df_as2:[5,493],dfwithinvalid:[2,324],dfwithnullsandnan:[2,323],dialect:[2,311],diamond:[5,667],dict:[1,3,5,99,102,104,105,167,168,169,170,421,520,547,583,584,620,632,633,641,950],dictionari:[1,2,3,5,39,46,47,94,149,335,343,379,441,587,607,622,631],did:[1,5,68,824],diff:[5,729],differ:[1,2,3,5,6,30,31,41,53,99,133,179,190,256,263,279,281,282,303,373,387,418,470,546,572,585,604,631,632,736,823,894,926,1013],difficult:[2,257],digest:[5,801,838],digit:[5,808,941],dim:[3,412],dimens:[1,2,3,276,287,328,329,337,341,394,398,434,439,446,448,481],dimension:[2,3,5,227,230,257,265,305,306,335,337,341,353,354,410,434,439,510,548],dir:[2,3,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,481],directli:[1,2,3,5,22,137,282,319,376,423,426,472,474,476,658,659,664,665],directori:[1,2,3,5,6,35,76,152,155,156,162,177,192,195,225,226,231,232,249,252,256,262,263,264,347,351,352,355,356,367,368,480,481,482,496,585,588,592,593,894,896,900,901,903,997,998,1000,1001,1008,1013],dirichlet:[2,3,256,262,263,264,409],dirnam:[1,177],dirpath:[1,192],disabl:[2,5,149,225,226,231,232,249,252,256,262,263,264,347,351,352,355,356,367,368,585,588,592,593,894,896,900,901,903],discard:[2,225,226,231,232,249,252,256,351,352,355,356,367,368],discount:[3,416],discoveri:[2,3,5,279,280,418,585,588,590,591,592,593,894,896,900,901,903],discret:[0,2,3,6,225,226,231,232,245,249,252,281,282,283,288,308,351,352,355,356,367,368,397,418,953],discuss:[5,905],disk:[1,3,5,127,196,405,409,573],disk_onli:1,disk_only_2:[1,5,560],dispers:[2,359,360],displai:[5,149,759,871],dist2:[3,411],distanc:[2,3,5,253,254,255,260,261,267,276,277,297,298,337,341,343,403,406,407,413,434,439,441,470,782],distancemeasur:[2,253,254,260,261,267],distcol:[2,276,277,297,298],distinct:[1,2,3,5,6,45,308,370,418,470,509,561,570,571,572,600,629,673,717,861,960,961],distinct_ag:[5,673],distnam:[2,3,373,470],distribut:[0,1,2,5,29,53,76,157,171,237,238,256,257,258,262,263,264,276,307,330,332,349,357,358,373,404,405,408,409,427,431,442,443,444,445,446,447,448,449,450,470,491,722,821,822,905],distributed_model_path:[2,262],distributedldamodel:[2,262,263,264],distributedmatrix:3,divid:[1,2,3,100,101,295,328,329,359,360,416,470,993],divis:[2,3,253,254,402],dm1:[3,442],dm2:[3,442],dm3:[3,442],dm4:[3,442],doc:[1,2,3,32,135,136,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,344,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,412,421,427],docconcentr:[2,3,256,262,263,264,408],docfreq:[2,3,289,290,423],doctest:[1,7],document:[2,3,5,6,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,446,448,449,450,451,452,453,454,455,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,566,932,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,1013],doe:[1,2,3,5,6,89,137,138,149,178,179,180,232,264,281,282,291,295,326,378,381,433,434,435,436,438,439,440,441,540,570,571,572,585,588,590,591,592,593,616,622,629,813,878,894,896,900,901,903,905,926,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,1000,1001],doesn:[5,513,576,910,913,933],doi:[2,3,5,330,332,431,448,494,525,597,601],doing:[5,497,563],domain:[5,491],don:[1,5,91,542,587,607],done:[1,2,5,6,77,287,905,983],dot:[2,3,5,337,341,434,439,448,941],dotnet:[5,629],doubl:[2,5,266,278,281,282,294,371,373,466,501,503,542,585,588,589,594,598,599,621,622,633,813,828,894,896,897,902,942],doubletyp:[2,5,331,333,809],down:[1,2,187,266,364],download:[1,152],downweight:[2,256,262,263,264],drastic:[5,497],drawn:[3,450],driver:[1,2,3,5,7,9,14,15,38,39,118,119,120,123,207,208,256,263,264,324,377,380,442,527,563,568],drop:[1,2,5,196,303,304,309,310,347,348,514,516,585,588,639,894,896],drop_dupl:[5,514],dropdupl:[5,515],dropfieldifallnul:[5,588,896],dropglobaltempview:[5,504,505],droplast:[2,287,303,304],dropmalform:[5,585,588,894,896],dropna:[5,582],droptempt:5,droptempview:[5,506,507,544],dsl:[5,491],dst:[2,265],dstcol:[2,265],dstream:[0,3,6,401,412,464,465,993,998,1000,1001,1003,1009,1010,1013],dt2:[2,226,352],dt3:[2,226,352],dtc:[2,226],dtc_model:[2,226],dtc_path:[2,226],dtr:[2,352],dtr_model:[2,352],dtr_path:[2,352],dtype:[2,5,253,260,333,585,586,588,589,592,593,595],due:[1,2,3,5,179,225,257,351,442,443,446,546,577,878],dummi:[2,346],dump:[1,162],dump_profil:1,duplic:[1,2,5,66,68,327,348,514,518,531,632,676,677,678,686,707,708,878],durat:[5,6,888,1003,1010],dure:[1,2,3,5,6,76,205,256,262,263,264,300,303,304,330,347,376,377,380,473,585,588,894,896,996],dutch:[2,317],dynam:[1,76],dynamicalloc:[1,76],dynamodb:[6,1013],e_i:[2,299],e_max:[2,299],e_min:[2,299],each:[1,2,3,5,6,11,13,27,30,31,37,41,46,47,52,53,54,56,57,62,64,72,74,75,78,79,80,81,82,93,94,96,97,98,114,115,128,131,132,135,136,155,156,157,176,178,179,180,192,196,213,215,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,255,256,257,258,259,260,262,263,264,265,276,277,278,279,281,282,284,287,289,291,295,297,298,299,300,301,303,304,305,306,308,309,312,315,318,324,328,329,330,347,348,349,351,352,353,354,355,356,357,359,360,361,363,365,366,367,368,370,371,375,377,378,380,396,400,401,402,403,405,407,409,413,418,420,427,429,431,442,443,446,448,450,458,461,463,465,467,470,471,473,475,481,494,497,501,509,516,520,524,526,537,547,551,558,566,582,583,584,585,587,597,598,600,602,604,617,618,622,623,625,626,627,628,629,630,641,744,745,769,805,813,816,817,880,894,903,905,925,932,935,953,955,957,959,960,961,962,965,966,969,970,973,974,975,976,977,979,980,981,982,983,986,988,989,991,992,997,1002,1003,1009],eager:[5,496,536],earli:[2,231,232,256,262,263,264,355,356],earlier:[6,1000,1001],earn:[5,629],east:[6,1013],ecdf:[3,470],edf:[5,744,816],edit:[2,231,249,355,367],edu:[3,410,454],effect:[1,2,3,76,361,362,395,442,443,446],effici:[1,2,3,5,6,77,297,332,427,431,494,597,629,673,962,983],egg:[1,150],eigenvalu:[3,446,448],eigenvector:[3,446,448],either:[1,2,3,5,6,57,69,75,97,102,103,104,105,149,152,153,215,260,261,265,287,291,293,308,311,324,325,327,337,343,379,406,410,434,441,470,537,587,622,641,682,759,771,813,871,878,917,932,951,953,999,1000,1001,1002,1013],elaps:[6,996],elast:[2,363],elasticnet:[2,237,238,363,364],elasticnetparam:[2,3,237,238,363,364,458,463],electron:[2,298],element:[1,2,3,5,6,29,30,34,38,41,43,45,46,48,49,50,51,53,55,57,62,66,68,70,72,73,75,78,84,90,92,97,98,100,101,108,112,113,116,118,119,122,123,124,125,129,131,132,163,173,175,231,249,262,284,297,301,337,339,341,343,347,355,360,365,366,367,409,429,431,434,436,439,441,448,450,452,494,525,526,566,570,571,572,597,601,644,677,678,679,683,685,686,687,708,740,744,745,795,816,817,827,848,849,935,951,959,961,962,963,964,973,979,980,983,986,992],element_at:5,elementtyp:[5,935],elementwis:[2,3,284,420],elementwiseproduct:[2,3],elementwiseproductpath:[2,284],elimin:[5,6,708,878,991],els:[3,5,471,475],embed:[2,3,5,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,410,755],emit:[5,577],empir:[2,3,245,373,470],empti:[1,2,3,5,50,70,92,108,215,225,226,231,232,233,234,237,238,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,269,272,293,301,311,349,350,351,352,355,356,357,358,361,362,363,364,367,368,384,416,494,585,588,597,603,604,617,687,745,763,817,824,894,896],emptyrdd:1,emptyvalu:[5,585,604,894],enabl:[5,6,568,585,631,636,641,869,894,955,1013],enablehivesupport:5,enclos:[5,604],encod:[1,2,5,6,188,192,287,294,303,304,309,310,585,588,604,608,618,697,850,879,894,896,903,1004,1008],encourag:[5,813],end:[1,3,5,6,41,173,481,644,658,659,664,665,685,729,791,813,832,848,849,876,878,888,987],endpointurl:[6,1013],endswith:5,enforceschema:[5,585,894],engin:[1,45],english:[2,317],enough:[2,3,5,308,406,446,448,700],ensembl:[2,3,231,232,249,355,367,474,476],ensu:[3,442,443,446],ensur:[1,5,6,179,622,1007],enter:[5,6,631,982,983],entir:[1,2,5,32,256,263,264,492,585,813,894],entri:[0,1,2,3,5,6,149,262,278,303,308,309,310,343,423,441,442,443,446,447,448,470,471,473,475,633,793,796,852,993],entropi:[2,3,225,226,249,252,471,475],env:[1,90],environ:[1,2,3,5,144,149,631],ephemer:[1,76],epoch:[1,5,185,758,759,871,905],epoch_id:[5,905],epoch_ordin:[5,940],epochid:[5,905],eprod:[2,3,284,420],eps:[2,3,269,415,479],epsilon:[2,3,363,364,406,407],eqnullsaf:5,equal:[2,3,5,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,275,318,319,373,394,399,415,427,442,539,557,558,631,641,658,659,664,665,683,763,828,836,941],equat:[2,3,256,263,264,465],equi:[5,534],equival:[1,2,3,5,6,20,212,237,238,255,337,434,491,518,530,531,561,570,571,735,736,776,779,811,820,823,838,868,870,910,913,914,962],err:[5,494,597],error:[1,2,3,5,6,181,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,363,364,365,366,367,368,377,378,380,381,417,418,442,448,461,494,575,597,604,607,608,609,612,613,615,616,673,905,996],errorifexist:[5,604,607,608,609,612,613,615,616],errorornul:[5,905],escap:[5,585,604,894],escapequot:[5,604],especi:[5,496,536],essenti:[2,347],estim:[1,2,3,5,45,100,101,118,214,215,225,226,227,230,231,232,237,238,241,244,245,246,249,252,256,257,258,262,263,264,265,269,291,332,347,351,355,356,359,360,363,365,366,367,377,378,379,380,381,384,386,427,448,467,473,546,673],estimateddocconcentr:[2,256,263,264],estimatorparammap:[2,377,378,380,381],eta:[2,3,256,262,263,264,408],etc:[1,2,4,5,6,131,278,308,386,485,639,641,893,904,905,953],euclidean:[2,3,253,254,260,261,267,276,375,406],euclideandist:[2,276],evalu:[0,5,231,238,266,267,269,270,271,272,290,355,358,359,364,365,377,378,380,381,414,415,416,417,423,887],evaluateeachiter:[2,231,232,355,356],evaluator2:[2,266,267,269,270,271,272],even:[1,2,3,5,44,68,70,256,287,299,442,575,878],evenli:[1,2,5,66,287,288,587],event:[2,5,6,281,282,288,349,350,577,994],eventtim:[5,577],ever:[5,726],everi:[1,2,3,5,6,152,173,221,222,225,226,231,232,245,249,252,256,262,263,264,347,351,352,355,356,367,368,370,394,397,399,457,459,460,462,470,641,859,905,906,910,913,914,920,926,998],everyth:[5,859],evolv:[4,5,485,533,577,579,646,650,666,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,916,930],exact:[2,5,376,494,597],exactli:[1,2,3,5,95,98,377,455,497,550,763,905,906],exampl:[1,2,3,4,5,7,22,41,66,137,192,245,247,248,294,297,303,307,308,347,375,394,397,399,448,471,472,473,475,481,485,491,494,520,547,583,584,585,587,588,589,590,591,594,597,607,610,611,622,631,654,658,659,664,665,759,776,779,805,811,813,871,888,894,896,897,898,899,902,905,908,909,941],exce:[2,3,225,226,231,232,249,252,332,351,352,355,356,367,368,431],except:[1,2,3,5,6,14,66,179,220,225,226,227,230,231,232,237,238,240,241,244,245,246,249,252,254,258,261,275,278,308,317,358,364,366,388,394,398,399,405,407,409,411,427,442,452,455,457,460,462,470,481,482,518,561,585,588,604,607,608,609,612,613,615,616,641,658,867,869,894,896,905,917,929,932,933,993],exceptal:5,exclud:[2,256],exclus:[1,5,173,587,644,888],execut:[1,2,5,6,32,35,149,153,175,179,205,215,330,497,533,537,546,568,633,641,813,878,905,906,914,916,995,996,1006,1007],executor:[1,2,5,21,27,76,144,179,182,225,226,231,232,249,252,351,352,355,356,367,368,532,536],exist:[1,2,3,5,6,76,133,137,149,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,386,387,388,393,442,482,504,507,534,547,575,576,584,604,606,607,608,609,612,613,615,616,635,637,813,905,933,953,993,1001],existingrdd:[5,519],exp:[3,5,411,450],expand:[2,5,307,511,553,813],expans:[2,307],expect:[1,2,3,5,38,39,98,118,119,120,123,221,222,232,239,240,256,257,263,264,266,267,269,270,271,272,279,280,326,365,366,379,404,417,470,519,527,568,666],expectedclassnam:[2,384],expens:[1,5,76,494,597,813],experiment:[1,2,5,10,11,13,14,16,21,32,40,134,135,136,270,271,277,298,496,536,537,568,622,641],expir:[6,982],explain:[2,3,5,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,377,378,380,381,417],explainedvari:[2,3,305,306,365,366,417],explainparam:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],explan:[2,225,351],explicit:[2,5,347,546],explicitli:[2,5,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,585,622,631,894],explod:[5,745],explode_out:5,exploratori:[5,511,525,562,601],expm1:5,expmean:[3,450],exponenti:[3,5,450,496,536,743,746],exponentialrdd:[3,450],exponentialvectorrdd:[3,450],expos:[1,71],expr:[5,492,554,620],express:[2,3,5,307,448,490,521,526,534,545,546,553,554,575,587,620,658,662,663,674,676,680,681,685,689,690,691,721,737,738,739,747,751,755,772,773,776,779,789,792,793,796,797,798,800,803,805,813,827,842,846,849,852,855,856,857,860,861,878,882,887,905],expstd:[3,450],extend:[1,2,5,41,111,383,385,519,588,776,779,896,919],extens:[2,324],extern:[1,5,6,90,137,578,579,587,607,666,667,893,904,906,1013],extra:[1,2,5,10,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,386,585,894],extract:[2,5,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,375,377,378,380,381,384,730,731,732,740,760,766,774,804,806,819,824,835,886,890],extractparammap:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],extrametadata:[2,386],extrem:466,f1measur:[2,270],f1measurebylabel:[2,270],face:5,fact:[2,307],factor:[2,3,227,230,310,347,348,353,354,412,413,437,448,449,451,479],factori:[2,3,5,343,346,441],factoris:[3,452],factors:[2,227,230,353,354],fail:[1,5,32,76,176,178,179,180,666,813,878,881],failfast:[5,585,588,894,896],failur:[1,2,5,32,76,256,262,263,264,347,349,905],fair:[1,180],fairli:[2,371],fall:[1,3,196,455],fallback:[1,5,176,631],fals:[1,2,3,5,6,23,27,36,40,51,61,70,78,79,80,81,89,90,98,99,120,122,127,135,136,137,152,175,179,188,192,197,198,200,201,202,203,204,221,222,225,226,230,231,232,239,240,249,252,253,256,257,260,262,263,264,265,266,267,268,269,270,271,272,276,277,278,279,280,281,282,283,287,288,297,298,309,311,312,315,317,330,332,333,336,339,340,347,351,352,354,355,356,361,362,367,368,375,377,380,395,396,400,405,415,418,421,425,433,436,438,446,448,451,458,461,463,519,520,525,539,540,550,556,557,558,560,567,573,583,585,588,601,604,631,632,633,675,687,750,772,773,777,792,808,849,894,896,903,913,919,964,973,974,975,989,996,1004,1007,1013],falsepositiver:[3,415],falsepositiveratebylabel:[2,221,222,239,240,269],famili:[2,3,5,237,238,279,280,298,357,358,359,360,418,838],far:[2,267],fast:[1,5,77,914],faster:[1,188,192],fatal:[1,181],fault:[1,6,76,998],fdr:[2,3,279,280,418],featur:[0,1,32,76,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,267,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,370,371,375,376,377,380,394,395,396,397,398,399,400,401,405,418,419,420,421,422,423,424,425,426,427,428,451,452,454,455,456,457,458,459,460,461,462,463,465,470,471,472,473,475,479,481],feature_hash:[2,287],featureandpredict:[2,267],featurehash:2,featureimport:[2,225,226,231,232,249,252,351,352,355,356,367,368],featureindex:[2,361,362],featurescol:[2,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,267,279,280,309,310,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,370,376],featuresubsetstrategi:[2,3,231,232,249,252,355,356,367,368,475],feed:[5,588,896],feedback:[2,347],fetch:[1,5,122,567],few:[2,6,308,953],fewer:[1,2,3,5,225,226,231,232,249,252,351,352,355,356,367,368,423,497,585,894],field1:[5,648],field2:[5,648],field:[2,5,221,222,239,240,329,333,335,359,360,365,366,370,373,386,453,468,585,588,604,608,622,631,632,641,666,774,852,894,896,950,951],fieldnam:[5,951],fifth:[5,659,665,736,823],file1:[1,192],file2:[1,192],file:[1,2,3,5,6,25,35,58,76,102,103,104,105,107,108,149,152,153,155,156,167,169,176,188,192,193,194,195,256,480,481,482,496,585,588,589,590,591,592,593,603,604,608,610,611,612,613,614,615,617,618,633,770,893,894,896,897,898,899,900,901,903,904,908,909,911,913,986,997,1008],fileinput:[1,3,108,481],filenam:[1,152,194],filesystem:[1,152,153],filev:[1,152],fill:[5,520],fillna:[5,583],filter:[1,2,3,5,6,118,278,280,281,282,289,290,291,308,309,310,311,317,318,319,323,324,325,326,347,422,491,505,506,574,982],filter_func:[5,537],filterfunc:[6,982],finalstoragelevel:[2,347],find:[1,2,3,5,83,86,152,253,257,265,277,298,308,329,332,343,347,402,403,405,407,410,413,428,431,441,471,525,601],findfrequentsequentialpattern:[2,332],findsynonym:[2,3,328,329,427,428],findsynonymsarrai:[2,328,329],finer:1,finish:[1,44],finit:[2,245],finnish:[2,317],first:[1,2,3,5,6,12,30,31,41,51,89,111,118,131,132,206,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,373,416,427,442,443,446,448,452,453,455,468,481,494,501,503,509,527,540,545,546,556,562,564,566,585,597,598,599,600,604,622,629,637,641,682,692,705,734,741,769,771,784,785,810,811,813,818,894,920,979],first_product:[3,452],first_us:[3,452],firstli:[5,759,871],fit:[2,3,5,213,214,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,276,277,279,280,281,282,289,290,291,292,295,296,297,299,300,303,304,305,306,308,309,310,312,313,315,316,318,319,324,325,326,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,367,368,377,380,402,412,418,422,425,427,432,457,460,462,470,588,620,622,896],fitintercept:[2,227,230,233,234,237,238,349,350,353,354,357,358,360,363,364,365,366],fitlinear:[2,227,230,353,354],fitmultipl:[2,213,215,226,230,232,233,237,244,245,247,252,253,257,260,262,276,279,281,289,291,295,297,299,303,305,308,309,312,315,318,324,328,330,347,349,352,354,356,357,361,363,368,377,380],five:[5,658,664],fix:[1,2,3,5,6,120,256,263,264,279,379,408,418,941,997],flag:[1,5,196,585,604,894],flat:[1,2,6,156,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,997],flatmap:[1,6,22,52,965],flatmapvalu:[1,6],flatten:[1,2,5,6,51,294,964],fleec:[1,111],float32:[2,333],float64:[2,5,333,622,813],floattyp:[2,5,333,809],floor:[2,5,277,494,597],flush:[3,481],fmclassifi:[2,227],fmclassificationmodel:2,fmeasur:[3,415],fmeasurebylabel:[2,221,222,239,240,269],fmeasurebythreshold:[2,221,222],fmregressionmodel:2,fmregressor:[2,353],fmt:[2,328],fold:[1,2,377,378],foldbykei:1,follow:[1,2,3,5,107,176,192,225,231,249,287,298,324,327,351,355,367,370,373,375,448,470,481,494,534,570,571,572,585,588,590,591,592,593,597,604,608,610,611,633,654,805,813,868,870,894,896,898,899,900,901,903,905,908,909],foo:[1,2,5,108,287,745,817,824],forc:[1,2,3,134,190,237,301,309,310,311,320,363,448],forceindexlabel:[2,309,310],forcibl:[5,585,588,894,896],foreach:[1,5],foreachbatch:[5,915],foreachpartit:[1,5],foreachrdd:6,forest:[2,3,225,231,232,249,252,351,355,356,367,368,475,476],forev:[5,924],forget:[3,5,412,413,934],forgotten:[3,413],fork:[1,90],form:[1,3,5,102,103,104,105,107,171,442,443,446,577,587,590,591,607,610,611,631,759,871,898,899,908,909],format:[1,2,3,5,154,156,190,196,237,247,332,340,363,387,431,438,443,481,482,519,537,541,585,588,589,590,591,594,603,604,608,610,611,612,613,615,616,617,622,641,666,667,726,728,754,755,756,757,758,759,760,774,813,833,834,868,870,871,877,878,881,894,896,897,898,899,902,908,909,913,919,931,933],format_numb:[2,5,328],format_str:5,former:[1,31],formul:[3,422,458,461,463],formula:[2,3,309,310,413,416],found:[1,2,3,5,278,308,324,325,422,442,682,771,784],four:[2,294,331],fpga:[4,485],fpgrowth:[2,3,331,430],fpgrowthmodel:[2,3,330],fpm:[0,330,331,332,429,430,431,432],fpr:[2,3,221,222,279,280,418],frac:[2,3,237,238,365,366,417],fraction:[1,2,3,5,98,99,225,226,227,230,231,232,249,252,256,262,263,264,279,281,282,351,352,353,354,355,356,367,368,396,400,401,418,458,461,463,465,550,551,585,588,602,722],frame:[5,654,658,659,664,665,805],frank:[3,410],freedom:[2,3,359,360,365,366,466,470],french:[2,317],freq:[2,3,275,288,289,302,323,330,331,332,422,430,432],freqitem:5,freqitemset:[2,3,330,331,430],freqsequ:[3,432],frequenc:[2,3,5,281,282,288,289,290,318,319,331,332,421,422,423,470,509,525,600,601],frequencyasc:[2,309,310,318,319],frequencydesc:[2,309,310,318,319],frequent:[2,3,5,318,330,331,332,429,430,431,432,525,601],fresh:[5,905],fri:[5,810],friedman:[2,231,232,249,355,367],friez:[2,298],from:[1,2,3,5,6,7,22,53,54,66,92,93,94,107,108,118,119,123,127,133,137,149,152,155,156,167,168,169,170,173,176,178,179,180,188,192,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,341,343,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,370,371,373,375,377,378,379,380,381,383,384,390,391,394,398,399,401,402,403,405,407,409,410,411,412,413,427,428,430,435,439,441,442,450,452,454,455,457,460,462,464,465,467,470,471,472,473,474,475,476,477,480,481,490,491,492,493,494,497,504,505,506,507,514,520,533,534,537,539,544,551,557,569,572,573,575,583,585,589,592,593,594,597,602,604,620,621,622,631,633,635,641,644,648,658,659,664,665,666,667,676,677,678,683,686,688,712,726,729,734,741,744,751,757,758,759,760,791,792,793,795,796,797,798,811,812,813,816,822,824,832,836,848,859,867,869,871,876,878,893,894,897,900,901,902,903,915,920,926,933,941,950,953,979,993,996,997,1000,1001,1002,1004,1008,1010,1013],from_arrays_of_label:[2,318,319],from_arrow_typ:[5,813],from_avro:5,from_csv:5,from_json:5,from_label:[2,318,319],from_unixtim:5,from_utc_timestamp:5,from_vocabulari:[2,281,282],frombas:[5,712],fromintern:[5,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],fromjson:[5,935,946,950,951],fromlabelsmodel:[2,318],fromml:[3,435,441],fromvocabmodel:[2,281],ftp:[1,149,152,153],full:[2,3,5,6,225,231,249,256,351,355,367,472,474,476,534,620,622,967],full_out:[5,534],fulli:[1,2,5,103,105,167,168,169,170,176,192,387],fullout:[5,534],fullouterjoin:[1,6],func:[1,5,6,54,93,94,152,537,569,622,658,659,813,906,915,966,980,981,982,988,989],functiontyp:[5,813],further:[2,318,319,328],futur:[1,2,5,32,153,232,254,256,263,264,324,621,631,813],fwe:[2,3,279,280,418],gain:[2,3,225,226,231,232,249,252,351,352,355,356,367,368,416,471,475],gamma:[2,3,357,358,450],gammardd:[3,450],gammavectorrdd:[3,450],gap:[1,2,5,133,311,736,823],garbag:[1,6,1003],gatewai:[1,149],gaussian:[2,3,245,246,257,258,259,357,358,404,405,412,479],gaussian_naive_bay:[2,245],gaussianmixtur:[2,3,258,405],gaussianmixturemodel:[2,3,257],gaussianmixturesummari:2,gaussiansdf:[2,257,258],gbt2:[2,232,356],gbt:[2,231,232,355,356],gbtc:[2,232],gbtc_model:[2,232],gbtc_path:[2,232],gbtclassifi:[2,231],gbtclassificationmodel:[2,232],gbtr:[2,356],gbtr_model:[2,356],gbtr_path:[2,356],gbtregressionmodel:[2,356],gbtregressor:[2,355],gd1:5,gd2:5,gdf:[5,620],gencircl:[3,411],gender:[5,491],gener:[1,2,3,5,6,41,66,83,86,98,133,225,247,248,257,281,330,331,347,351,357,359,360,377,378,380,381,404,406,408,416,450,470,475,479,519,550,575,587,608,634,805,813,821,822,836,842,869,905,919,920,953,955,956,959,961,962,967,968,970,971,972,974,975,979,980,982,983,985,988,989,992,1003,1009],generalizedlinearregress:[2,358,360],generalizedlinearregressionmodel:[2,357],generalizedlinearregressionsummari:2,generalizedlinearregressiontrainingsummari:2,generaljavamlwrit:2,generalmlwrit:[2,261,364],generatelinearinput:[3,479],generatelinearrdd:[3,479],german:[2,317],get:[1,2,3,5,6,7,9,10,11,13,15,58,61,119,123,132,133,137,140,152,165,166,184,195,205,208,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,367,368,377,378,380,381,388,402,403,407,413,432,442,443,444,446,448,472,474,476,560,637,640,811,905,931,1013],get_json_object:5,getact:6,getactivejobsid:1,getactiveorcr:6,getactivesess:5,getactivestageid:1,getaggregationdepth:[2,233,234,237,238,257,258,349,350,357,358,363,364],getal:1,getalpha:[2,347],getandsetparam:[2,384],getbeta:[2,269],getbinari:[2,281,282,288],getblocks:[2,241,244,347,348],getbootstrap:[2,249,252,367,368],getbucketlength:[2,276,277],getcachenodeid:[2,225,226,231,232,249,252,351,352,355,356,367,368],getcasesensit:[2,317],getcategoricalcol:[2,287],getcensorcol:[2,349,350],getcheckpointfil:[1,2,256],getcheckpointinterv:[2,225,226,231,232,249,252,256,262,263,264,347,351,352,355,356,367,368],getclassifi:[2,247,248],getcoldstartstrategi:[2,347,348],getcollectsubmodel:[2,377,380],getconf:[1,5],getdegre:[2,307],getdistancemeasur:[2,253,254,260,261,267],getdocconcentr:[2,256,262,263,264],getdroplast:[2,303,304],getdstcol:[2,265],getelasticnetparam:[2,237,238,363,364],getep:[2,269],getepsilon:[2,363,364],getestim:[2,377,378,380,381],getestimatorparammap:[2,377,378,380,381],getevalu:[2,377,378,380,381],getfactors:[2,227,230,353,354],getfamili:[2,237,238,357,358],getfdr:[2,279,280],getfeatureindex:[2,361,362],getfeaturescol:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,267,279,280,309,310,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368],getfeaturesubsetstrategi:[2,231,232,249,252,355,356,367,368],getfield:5,getfinalstoragelevel:[2,347],getfitintercept:[2,227,230,233,234,237,238,349,350,353,354,357,358,363,364],getfitlinear:[2,227,230,353,354],getforceindexlabel:[2,309,310],getformula:[2,309,310],getfpr:[2,279,280],getfw:[2,279,280],getgap:[2,311],gethandleinvalid:[2,278,303,304,308,309,310,318,319,323,324,325,326],getimplicitpref:[2,347],getimpur:[2,225,226,231,232,249,252,351,352,355,356,367,368],getindic:[2,327],getinitialweight:[2,241,244],getinitmod:[2,260,261,265],getinitstd:[2,227,230,353,354],getinitstep:[2,260,261],getinputcol:[2,220,275,276,277,278,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,312,313,315,316,317,318,319,320,323,324,325,326,327,328,329],getintermediatestoragelevel:[2,347],getinvers:[2,283],getisoton:[2,361,362],getitem:5,getitemcol:[2,347,348],getitemscol:[2,330,331],getjobidsforgroup:1,getjobinfo:1,getk:[2,253,254,256,257,258,260,261,262,263,264,265,271,305,306],getkeeplastcheckpoint:[2,256,262,263,264],getlabel:[2,293,318],getlabelcol:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,266,269,270,271,272,279,280,309,310,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368],getlay:[2,241,244],getleafcol:[2,225,226,231,232,249,252,351,352,355,356,367,368],getlearningdecai:[2,256,262,263,264],getlearningoffset:[2,256,262,263,264],getlink:[2,357,358],getlinkpow:[2,357,358],getlinkpredictioncol:[2,357,358],getlocal:[2,317],getlocalproperti:1,getloss:[2,363,364],getlosstyp:[2,231,232,355,356],getlow:[2,312,313],getlowerboundsoncoeffici:[2,237,238],getlowerboundsonintercept:[2,237,238],getmax:[2,299,300],getmaxbin:[2,225,226,231,232,249,252,351,352,355,356,367,368],getmaxcategori:[2,324,325],getmaxdepth:[2,225,226,231,232,249,252,351,352,355,356,367,368],getmaxdf:[2,281,282],getmaxit:[2,227,230,231,232,233,234,237,238,241,244,253,254,256,257,258,260,261,262,263,264,265,328,329,347,349,350,353,354,355,356,357,358,363,364],getmaxlocalprojdbs:[2,332],getmaxmemoryinmb:[2,225,226,231,232,249,252,351,352,355,356,367,368],getmaxpatternlength:[2,332],getmaxsentencelength:[2,328,329],getmetriclabel:[2,269,270],getmetricnam:[2,266,267,269,270,271,272],getmin:[2,299,300],getminconfid:[2,330,331],getmincount:[2,328,329],getmindf:[2,281,282],getmindivisibleclusters:[2,253,254],getmindocfreq:[2,289,290],getminibatchfract:[2,227,230,353,354],getmininfogain:[2,225,226,231,232,249,252,351,352,355,356,367,368],getmininstancespernod:[2,225,226,231,232,249,252,351,352,355,356,367,368],getminsupport:[2,330,331,332],getmintf:[2,281,282],getmintokenlength:[2,311],getminweightfractionpernod:[2,225,226,231,232,249,252,351,352,355,356,367,368],getmissingvalu:[2,291,292],getmodeltyp:[2,245,246],getn:[2,301],getnam:[2,3,327,402],getnonneg:[2,347],getnumbin:[2,266],getnumbucket:[2,308],getnumbucketsarrai:[2,308],getnumfeatur:[2,287,288],getnumfold:[2,377,378],getnumhasht:[2,276,277,297,298],getnumitemblock:[2,347],getnumpartit:[1,2,3,5,328,329,330,331,450,497,545,546],getnumtopfeatur:[2,279,280],getnumtre:[2,231,249,252,355,367,368],getnumuserblock:[2,347],getoffset:[5,924],getoffsetcol:[2,357,358],getoptim:[2,256,262,263,264],getoptimizedocconcentr:[2,256,262,263,264],getorcr:[1,5,6,633,658,659],getordefault:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],getoutputcol:[2,220,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,312,313,315,316,317,318,319,320,323,324,325,327,328,329],getp:[2,302],getparallel:[2,247,377,380],getparam:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],getpattern:[2,311],getpercentil:[2,279,280],getpredictioncol:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,257,258,260,261,267,269,270,271,272,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368],getprobabilitycol:[2,225,226,227,230,231,232,237,238,241,244,245,246,249,252,257,258,269],getquantileprob:[2,349,350],getquantilescol:[2,349,350],getrank:[2,347],getratingcol:[2,347],getrawpredictioncol:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,266],getregparam:[2,227,230,233,234,237,238,347,353,354,357,358,363,364],getrelativeerror:[2,291,292,308,312,313],getrootdirectori:1,getscalingvec:[2,284],getse:[2,225,226,227,230,231,232,241,244,249,252,253,254,256,257,258,260,261,262,263,264,276,297,328,329,347,351,352,353,354,355,356,367,368,377,378,380,381],getselectortyp:[2,279,280],getsequencecol:[2,332],getsiz:[2,326],getsmooth:[2,245,246],getsolv:[2,227,230,241,244,353,354,357,358,363,364],getsplit:[2,278,308],getsplitsarrai:[2,278],getsrccol:[2,265],getstag:[2,215],getstageinfo:1,getstandard:[2,233,234,237,238,363,364],getstat:[2,314],getsteps:[2,227,230,231,232,241,244,328,329,353,354,355,356],getstopword:[2,317],getstoragelevel:1,getstrategi:[2,291,292],getstringindexerordertyp:[2,309,310],getstringordertyp:[2,318,319],getsubsamplingr:[2,231,232,249,252,256,262,263,264,355,356,367,368],gettaskinfo:1,getthreshold:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,275],getthroughorigin:[2,272],gettol:[2,227,230,233,234,237,238,241,244,257,258,260,261,349,350,353,354,357,358,363,364],gettolowercas:[2,311],gettopicconcentr:[2,256,262,263,264],gettopicdistributioncol:[2,256,262,263,264],gettrainratio:[2,380,381],getupp:[2,312,313],getupperboundsoncoeffici:[2,237,238],getupperboundsonintercept:[2,237,238],getusercol:[2,347,348],getvalidationindicatorcol:[2,231,232,355,356],getvalidationtol:[2,231,232,355,356],getvariancecol:[2,351,352],getvariancepow:[2,357,358],getvector:[2,3,328,329,428],getvectors:[2,328,329],getvocabs:[2,281,282],getweightcol:[2,225,226,231,232,233,234,237,238,245,246,247,248,249,252,253,254,257,258,260,261,265,266,269,272,351,352,355,356,357,358,361,362,363,364,367,368],getwindows:[2,328,329],getwithcent:[2,312,313],getwithmean:[2,315,316],getwithsc:[2,312,313],getwithstd:[2,315,316],gini:[2,3,225,226,249,252,351,471,475],give:[1,2,3,5,179,221,222,239,240,256,329,357,359,360,365,366,413,470,494,597,736,823],given:[1,2,3,5,6,7,30,31,53,57,66,75,96,97,98,110,138,151,152,160,161,175,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,343,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,375,376,377,378,379,380,381,384,385,386,392,394,395,396,397,398,399,400,403,405,407,409,411,413,415,428,430,441,442,443,445,446,448,451,452,454,457,460,462,467,470,472,474,476,477,478,479,480,481,482,494,503,505,509,511,513,521,534,544,545,546,550,551,562,576,577,585,597,599,600,602,603,614,617,641,648,659,675,682,683,689,690,691,698,701,703,704,706,709,711,726,730,731,732,737,738,739,740,743,744,745,746,748,752,758,759,764,765,766,771,774,776,778,779,782,786,787,792,793,796,804,806,816,817,819,829,835,839,840,841,842,843,845,852,862,863,871,881,886,888,889,890,894,911,914,978,991,1003,1013],gleich:[3,448],glm:[2,357],glob:[1,3,5,108,481,585,588,590,591,592,593,894,896,900,901,903],global:[1,2,5,13,179,257,504,505,637],global_temp:[5,504,505],globfilt:[5,585,588,590,591,592,593,894,896,900,901,903],glom:[1,6,36,88,95,96,171],glr2:[2,357],glr:[2,357],glr_model:[2,357],glr_path:[2,357],gm2:[2,257],gmm:[2,3,257,404],gmm_model:[2,257],gmm_path:[2,257],goe:[5,588,896],going:[1,5,177,577,585,894],good:[3,470],googl:[3,427],gpu:[4,485],gracefulli:[6,1007],gradient:[2,3,227,230,231,232,256,262,263,264,353,354,355,356,401,458,461,463,465,473,474],gradientboostedtre:3,gradientboostedtreesmodel:[3,473],grain:1,gram:[2,3,301,427],gramian:[3,446,448],grape:[1,82],graph:[2,3,6,265,410,998],graphx:[1,76],greater:[1,2,3,5,45,275,287,288,394,399,448,494,525,527,556,597,601,658,659,664,665],greatest:[3,5,448],greenwald:[5,494,597],grid:[2,377,379,380],ground:[3,416],group:[0,1,2,3,5,40,41,63,64,159,179,253,308,323,330,347,402,491,492,526,620,621,622,623,624,625,626,627,628,630,696,716,721,750,763,775,777,800,802,803,811,824,847,855,856,883,884],groupbi:[1,5,491,492,551,602,619,620,621,622,623,625,626,627,628,629,630,813,888],groupbykei:[1,6,77,99,970],groupbykeyandwindow:6,grouped_agg:[5,620],grouped_map:[5,621],groupeddata:[5,526,813],groupid:[1,40,159,179],grouping_id:5,groupwith:1,grow:[5,496,536,654],growth:[2,3,330,331,332,429,430,431],guarante:[1,2,3,5,98,149,256,257,262,263,264,324,448,511,525,550,562,577,601,631,805,813,905,906,924],guid:[5,666,667],gzip:[5,604,608,613,618],gzipcodec:[1,108],h_i:[2,277,298],had:[1,5,111,736,823],hadamard:[2,3,284,420],hadoop:[1,3,5,6,20,102,103,104,105,107,108,152,153,155,160,167,168,169,170,176,188,192,212,481,585,588,590,591,592,593,604,608,612,613,615,618,640,894,896,900,901,903,913,997,1008],hadoopfil:1,hadooprdd:1,half:[3,412],half_even:[5,701,754],half_up:[5,829],halflif:[3,412],hammingloss:[2,269,270],han2000:[2,330],han:[2,330],hand:[3,458,461,463],handl:[1,2,3,5,32,137,245,278,287,294,303,304,308,309,310,318,319,323,324,325,326,347,348,383,384,385,386,387,393,397,538,916],handleinvalid:[2,278,303,304,308,309,310,318,319,323,324,325,326],hang:[1,11,13],happen:[2,5,312,875],hard:[5,585,894],hardcod:[5,622],has:[1,2,3,5,6,7,12,23,27,35,70,77,95,115,163,206,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,370,377,378,380,381,405,412,416,458,459,461,463,464,473,494,495,497,540,573,575,577,585,597,643,658,805,813,894,905,917,924,932,959,962,980,983,1007],hasdefault:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],hash:[1,2,3,5,6,57,64,72,75,93,97,276,277,287,288,297,298,421,545,801,837,838,889,956,967,971,972,985],hashabl:[3,421],hasher:[2,287],hasherpath:[2,287],hashingtf:[2,3],hashingtfpath:[2,288],hasintercept:[2,309],hasparam:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],hassummari:[2,238,253,254,257,258,260,261,358,364,388],hasti:[2,231,249,355,367],hastrainingsummari:2,hat:[2,3,365,366,417],have:[1,2,3,5,6,11,12,13,44,57,66,75,89,97,131,158,179,192,206,221,222,225,226,227,230,231,232,237,238,241,244,245,246,249,252,277,297,298,302,324,325,326,335,347,351,352,355,356,367,368,395,404,406,423,442,443,446,448,470,480,509,516,520,540,547,582,583,584,585,588,590,591,600,610,611,618,631,632,633,658,674,759,838,871,888,894,896,898,899,905,908,909,926,932,941,982,988,989,990],hdf:[1,6,149,152,153,155,167,169,176,177,179,188,192,998],head:[2,5,226,230,232,233,237,244,245,247,252,253,257,260,275,276,278,279,283,284,287,288,289,291,294,297,301,302,303,307,308,311,314,317,320,323,324,326,327,328,352,356,357,361,363,368],header:[5,585,604,894],heart:[5,667],height:[2,5,335,508,513,514,516,520,528,534,547,582,583,584,623,626,627,628,630,783],held:[2,347],hello:[1,5,188,190,755],help:[1,2,10,21,29,134,179,193,196,205,324,347,485,490,491,581,596,619,631,654,893,904,915,916,930,953],helper:[1,2,3,151,383,385,481],henc:[2,3,5,265,303,410,546,905],here:[1,2,3,5,45,149,332,347,458,461,463,594,902],hex:[5,712,801,837,838,880],hexadecim:[5,880],hidden:[2,241,244],hierarch:[3,427],high:[1,2,3,76,225,257,351,479],higher:[2,3,253,402,455],highest:[2,3,247,248,279,280,378,443,446,455],hing:[2,233],hint:[2,5,326,813],histogram:[1,2,225,226,231,232,249,252,351,352,355,356,367,368],histori:[2,238],hit:[1,13],hive:[5,603,614,636,911],hivecontext:5,hiveql:5,hochberg:[2,3,279,418],hoefl:[3,454],hoffman:[2,256,263,264],hold:[2,3,4,5,278,458,461,463,485,905],holger:[3,454],hook_compress:[1,108],host:[1,21,149],hostnam:[6,1004],hot:[2,287,294,303],hour:[5,6,577,728,888,1013],hourli:[5,888],how:[1,2,3,5,6,12,151,206,225,226,231,232,249,252,278,303,304,308,309,310,318,319,323,324,325,326,351,352,355,356,367,368,412,514,516,534,582,585,666,894,910,913,1003],howev:[1,2,3,5,30,53,178,179,180,221,222,239,240,448,497,621,632,658,759,871,905,913],href:[2,332],htf:[3,421],html:1,http:[1,2,3,5,6,149,152,153,245,287,330,332,410,427,431,448,454,494,525,597,601,631,1013],huber:[2,363,364],human:[1,3,178,482],hungarian:[2,317],hybrid:[2,363],hyper:[2,377,378,380,381],hyperbol:[5,715,845,863],hyperloglog:[1,45],hyperparamet:[2,256],hypot:5,hypothesi:[2,3,370,373,466,470],iam:[6,1013],icd:[2,3,332,431],ice:5,icml2010:[3,410],ida:[2,276,297],idb:[2,276,297],idea:[2,225,351],ideal:[5,813],ident:[2,5,215,346,357,358,813,821,822],identifi:[1,2,3,5,6,154,324,394,399,906,1013],idf:[2,3,245,290,397,423],idfmodel:[2,3,289],idfpath:[2,289],ids:[1,2,5,133,347,348,622],idx:[5,824],ietf:[5,585,588,894,896],iff:[5,761,772,773,780],ignor:[1,2,3,5,6,152,153,221,222,225,226,231,232,240,249,252,256,262,263,264,265,281,282,287,301,312,317,330,332,347,351,352,355,356,365,366,367,368,410,481,494,520,547,583,584,585,588,597,604,607,608,609,612,613,615,616,623,627,628,630,679,808,894,896,997,1008],ignoreleadingwhitespac:[5,585,604,756,894],ignorenul:[5,750,777],ignorenullfield:[5,608],ignoretrailingwhitespac:[5,585,604,894],ill:[3,446,448],illustr:[5,813],imag:[0,334,335],imagefield:[2,335],imageschema:[2,335],immedi:[1,5,94,496,536,917,924,932],immut:[1,29],implement:[1,2,3,5,6,45,53,118,154,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,383,384,385,386,387,393,395,416,422,427,446,448,454,470,477,478,494,597,726,805,915],implicit:[2,3,347,451],implicitli:[2,5,287,588,896],implicitpref:[2,347],improv:[2,276,277,297,298],impur:[2,3,225,226,231,232,249,252,351,352,355,356,367,368,471,475],imput:[2,292],imputer1:[2,291],imputer2:[2,291],imputermodel:[2,291],imputerpath:[2,291],includ:[1,2,3,5,6,181,263,278,281,282,303,309,324,326,328,329,332,373,427,431,472,511,553,585,588,590,591,592,593,609,636,781,813,894,896,900,901,903,910,987],inclus:[5,587,658,659,664,665,811,888],incom:[3,401,412,465],incomplet:[1,44],inconsist:[3,481],incorpor:[5,813,878],incorrect:[2,5,291,585,813,894],increas:[1,2,3,5,6,12,95,173,206,253,276,277,278,297,298,361,362,402,455,805,984],increment:[1,5,6,173,644,836,982,983],incur:[3,448],independ:[2,3,5,257,258,298,303,312,330,370,404,457,460,462,470,821,822],indeterminist:[5,851],index1:[2,3,318,481],index2:[2,3,318,481],index:[1,2,3,5,80,81,132,136,213,215,225,226,230,231,232,233,237,244,245,247,249,252,253,257,260,262,276,279,281,287,288,289,291,293,295,297,299,303,305,308,309,310,312,315,318,319,324,325,328,330,343,347,349,351,352,354,355,356,357,358,361,362,363,367,368,377,380,403,407,413,421,441,442,443,445,446,447,453,455,468,471,473,475,622,659,682,740,771,784,813,848,858],indexedrow:[3,446],indexedrowmatrix:[3,442,443,445],indexof:[2,3,288,421],indextostr:[2,318],indextostringpath:[2,318],indic:[1,2,3,4,5,132,225,226,231,232,238,249,252,254,256,258,261,262,263,264,266,267,268,269,270,271,272,280,287,293,303,318,319,324,325,327,343,347,351,352,355,356,358,364,367,368,388,395,396,400,403,407,409,413,441,446,448,455,458,461,463,471,473,475,481,485,534,585,588,590,591,604,608,610,611,622,659,762,838,848,894,896,898,899,908,909,946],individu:[1,2,3,53,295,299,424],inertia:[2,255],inf:[2,3,5,233,234,278,308,357,358,424,585,894],infer:[1,2,3,5,103,105,256,262,263,264,323,408,409,585,588,594,641,833,834,894,896,902,941,947],inferschema:[5,585,894],infin:[1,2,5,66,308,585,894],info:[1,2,3,6,10,21,181,256,264,442,471,1013],inform:[1,2,3,4,5,14,18,159,205,207,210,225,226,231,232,249,252,283,326,347,351,352,355,356,359,360,367,368,382,471,475,485],inherit:[1,2,3,178,179,180,384,464],initcap:5,initcent:[3,413],initi:[1,2,3,5,6,7,10,14,21,29,134,151,193,196,205,207,227,230,241,244,260,261,265,353,354,395,396,400,401,402,404,406,408,410,412,413,427,451,458,461,463,465,485,490,491,581,596,619,631,654,813,893,904,905,915,916,930,953,1013],initializationmod:[3,406,407],initializationmodel:[3,406],initializationstep:[3,406,407],initialmodel:[3,404,406,407],initialpositioninstream:[6,1013],initialrdd:[6,991],initialweight:[2,3,241,244,395,396,400,401,457,458,460,461,462,463,465],initmod:[2,3,260,261,265,410],initstd:[2,227,230,353,354],initstep:[2,260,261],initweight:[3,413],inner:[5,493,513,534],inout:[3,470],input1:[2,308],input2:[2,308],input:[1,2,3,5,6,66,68,108,156,169,170,171,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,371,373,377,378,380,381,383,384,386,387,390,391,393,397,401,403,405,407,410,413,421,424,425,429,431,443,450,452,458,461,463,464,465,470,481,494,585,586,588,589,590,591,594,597,685,688,710,711,759,760,809,813,849,852,871,894,895,896,897,898,899,902,903,905,993,997,1002,1004,1008,1013],input_df:[5,569],input_file_nam:5,inputcol:[2,220,226,232,252,275,276,277,278,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,312,313,315,316,317,318,319,320,323,324,325,326,327,328,329],inputformat:[1,167,168,169,170,176],inputformatclass:[1,167,168,169,170],inputtoken:[2,301],inputtyp:[2,220],insensit:[2,5,225,226,231,232,249,252,351,352,355,356,367,368,604,608,612,613,618,810],inser:[1,66],insert:[5,606],insertinto:5,insid:[1,2,5,14,35,207,375,496,585,604,641,894],instal:[1,5,147,149,568],instanc:[1,2,3,5,32,134,149,189,193,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,377,378,379,380,381,383,384,385,386,387,388,390,391,392,393,409,415,427,442,471,480,490,575,585,588,633,635,650,658,659,726,813,894,896,905],instant:[2,335],instanti:[1,5,149,166,182],instead:[1,2,3,5,22,31,32,41,76,81,100,101,149,221,222,225,239,240,254,279,293,294,325,347,351,376,418,423,426,472,474,476,497,544,641,672,813,865,866],instr:5,int32:[5,622],int64:[5,622,813],integ:[1,2,3,5,151,281,282,287,288,298,347,348,450,453,468,541,622,730,731,732,766,804,805,806,808,811,819,828,835,836,852,886,890,938,944,945,948],integertyp:[5,552,641,757,765,813,878],integr:[5,658,659,664,665,701,829],intend:[5,924],intent:[6,1000],intention:1,interact:[2,227,230,353,354],interactionpath:[2,294],intercept:[2,3,227,230,233,234,237,238,247,349,350,353,354,357,358,360,363,364,365,366,394,395,396,399,400,457,458,459,460,461,462,463,479],interceptvector:[2,237,238],interfac:[1,2,5,135,136,375,578,579,639,640,893,904,915],intermedi:[2,3,5,347,414,514,768],intermediatestoragelevel:[2,347],intern:[1,2,3,5,6,68,95,137,178,179,180,225,226,231,232,249,252,330,332,335,345,351,352,355,356,367,368,387,431,471,472,473,475,575,629,813,878,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953],interpol:[3,455],interpret:[1,4,5,6,173,485,759,871,880,1004],interquartil:[2,312],interrupt:[1,179],interruptoncancel:[1,40,179],intersect:[1,5,88,531,678],intersectal:5,interv:[2,3,5,6,225,226,231,232,249,252,256,262,263,264,347,351,352,355,356,367,368,473,577,888,914,953,955,961,970,982,983,990,992,993,998,1013],intlist:[5,744,816],introduc:[5,575],intuit:[3,470],intwrit:[1,103,105],invalid:[2,5,220,225,226,231,232,249,252,278,303,304,308,309,310,318,319,323,324,325,326,335,351,352,355,356,367,368,760],inventor:[2,245],invers:[2,3,5,6,283,289,357,358,422,669,693,694,880,982,983],invert:[2,6,318,983],invfunc:[6,982],invoc:[1,5,878,924],invok:[1,3,5,182,442,878,887],involv:[2,256,263,264],invreducefunc:[6,983],ipv4:[1,21],iqr:[2,312],ir2:[2,361],ir_model:[2,361],ir_path:[2,361],irl:[2,357,358],irm:[3,446,455],irrecover:[1,76],irrespect:[5,905],is_cach:[1,89],isact:[5,913,933],iscach:5,ischeckpoint:1,isdefin:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],isdistribut:[2,256,262,263,264],isempti:1,isin:5,isinst:[3,407,481],islargerbett:[2,266,267,268,269,270,271,272],isloc:5,islocallycheckpoint:1,isn:[5,590,591,610,611,898,899,908,909],isnan:[3,5,470],isnotnul:5,isnul:5,iso:[5,734,741],isol:[1,178,179,180],isoton:[2,3,361,362,454,455],isotonicregress:[2,3,362,455],isotonicregressionmodel:[2,3,361],isset:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],isstream:[5,894,896,897,900,901,903],issu:[2,3,5,257,442,575,631],istemporari:5,istranspos:[2,3,336,339,340,433,436,438],italian:[2,317],itd:[2,318],item:[1,2,3,5,46,47,63,83,86,94,132,133,277,298,330,331,332,347,348,416,430,431,509,525,547,584,600,601,716],item_rec:[2,347],item_subset:[2,347],item_subset_rec:[2,347],itemcol:[2,347,348],itemfactor:[2,347,348],itemscol:[2,330,331],itemset:[2,3,330,331,332,429,430,431],iter:[1,2,3,5,56,79,80,81,122,152,213,215,222,225,226,227,230,231,232,233,234,237,238,240,241,244,245,247,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,276,279,281,289,291,295,297,299,303,305,308,309,312,315,318,324,328,329,330,332,347,349,350,351,352,353,354,355,356,357,358,360,361,363,364,366,367,368,377,380,394,395,396,399,400,401,402,404,406,408,410,413,427,431,446,448,451,457,458,460,461,462,463,465,473,496,536,537,567,813,951],its:[1,2,3,4,5,6,7,22,30,35,53,67,89,121,132,137,152,178,179,180,192,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,339,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,401,428,436,458,461,463,464,465,477,485,516,551,582,602,641,666,750,777,805,813,833,834,951,1003],itself:5,jaccard:[2,297],jaccarddist:[2,297],jar:[1,150],java:[1,2,3,5,6,107,137,149,167,168,169,170,176,182,196,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,455,588,629,669,693,694,695,714,715,735,820,824,844,845,852,862,863,896,915],java_model:[2,3,225,227,231,234,238,241,246,249,254,256,258,261,263,264,277,280,282,290,292,296,298,300,304,306,310,313,316,319,325,329,331,348,350,351,353,355,358,362,364,367,403,405,409,411,414,415,416,417,419,423,426,428,430,432,449,452,466,469,472,474,476],java_obj:[2,221,222,239,240,255,259,359,360,365,366],javaclassnam:5,javaload:3,javamlread:2,javamlwrit:2,javamodelwrapp:3,javaparam:2,javardd:[6,1009],javasav:3,javasparkcontext:149,javastreamingcontext:[6,1000],javastringlength2:5,javastringlength3:5,javastringlength:5,javatowritableconvert:[1,102,103,104,105],javaudaf:5,javavectortransform:3,jdbc:5,jdf:[5,491],jdstream:[6,953],jgd:[5,619],jhivecontext:5,jmlr:[2,3,262,409],job:[1,6,11,13,35,40,76,102,103,104,105,132,133,149,152,158,159,178,179,180],job_to_cancel:[1,179],jobgroup:1,jobid:1,john:[5,813,878],join:[1,2,3,5,6,57,75,97,108,152,188,190,192,277,298,371,481,491,493,513,528,604,605,608,609,612,613,614,615,632,679,700,967,972,985],joined_df:[5,493],jordan:[2,3,262,409],journal:[2,3,262,298,409],jrdd:[1,29],jrdd_deseri:[1,6,29,953],jsc:[1,149],json:[2,3,5,384,386,482,566,586,589,590,591,594,605,610,611,666,667,757,760,774,834,869,895,897,898,899,902,907,908,909,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],json_sdf:[5,896,897],json_tupl:5,jsonformatschema:[5,666,667],jsonvalu:[5,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],jsparksess:[5,633],jspec:5,jsq:[5,916],jsqlcontext:5,jsqm:[5,930],jssc:[6,993],jst:[5,759,871],jstring:[5,760,774],jsummarybuild:[2,376],jtracker:1,just:[2,3,5,346,445,447,514,759,871,914],jvm:[1,5,149,178,179,180,915],karp:[5,525,601],karypi:[2,3,253,402],kcl:[6,1013],kdd:[3,402],kearslei:[3,454],keep:[1,2,3,5,196,256,262,263,264,278,303,304,308,309,310,318,319,323,324,325,326,446,448,514,577,585,588,894,896],keeplastcheckpoint:[2,256,262,263,264],keepseri:[6,989],kei:[1,2,3,5,6,15,18,31,37,39,41,46,52,54,57,64,72,75,77,82,83,86,93,94,96,97,99,102,103,104,105,107,111,115,119,123,131,137,138,139,140,141,142,144,145,148,155,165,167,168,169,170,176,180,182,192,208,210,277,297,298,318,325,347,401,411,412,464,465,551,590,602,610,620,622,631,632,635,666,721,740,744,745,757,760,774,795,797,816,817,867,869,893,898,904,908,946,965,976,982,991],kept:[1,2,188,192,279,280],kerneldens:3,key1:[5,721],key2:[5,721],keybi:1,keyclass:[1,103,105,167,168,169,170,176],keyconvert:[1,102,103,104,105,167,168,169,170,176],keyfunc:[1,96,110,111],keytyp:[5,946],keyword:[2,5,237,301,311,320,363,813,878],khanna:[5,494,597],kind:[2,3,5,363,397,641],kinesi:0,kinesisappnam:[6,1013],kinesisutil:6,kitten:[5,782],kmean:[2,3,255,261,407,412],kmeans2:[2,260],kmeans_model:[2,260],kmeans_path:[2,260],kmeansmodel:[2,3,260,406],knob:[3,448],know:[5,577],known:[1,2,3,5,77,299,362,395,455,509,600,604,608,612,613,618],kolmogorov:[2,3,373,470],kolmogorovsmirnovtest:[2,3,470],kolmogorovsmirnovtestresult:[3,470],krap:[5,827],ksmodel:[3,470],ksresult:[2,373],kstest:[3,470],kth:[1,133],kumar:[2,3,253,402],kurtosi:5,kwarg:[5,539,557,558],l_1:[3,457],l_2:[3,462],label1:[2,318],label2:[2,318],label:[2,3,5,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,254,258,261,266,267,268,269,270,271,272,279,280,281,293,309,310,318,319,324,325,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,370,377,380,395,397,398,405,414,415,418,454,455,456,458,461,463,470,471,472,473,475,481,622],labelcol:[2,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,266,269,270,271,272,279,280,309,310,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,370,379],labeledpoint:[3,394,395,396,397,398,399,400,401,418,457,458,460,461,462,463,465,470,471,473,475,479,481],lag:5,laid:[5,603,614,911],lamb:[1,111],lambda:[1,2,3,5,22,30,49,51,63,73,78,88,92,96,110,111,118,119,124,125,175,266,267,318,347,397,411,427,448,450,451,633,641,785,805,878],lambda_:[3,397,451],lang:[5,669,693,694,695,714,715,735,820,844,845,862,863],languag:[1,2,3,5,53,317,328,427,491,585,588,894,896],larg:[1,2,3,5,6,155,256,263,264,277,298,324,363,377,380,409,470,563,587,607,620,622,962],large_broadcast:[1,22],larger:[2,3,5,253,256,262,263,264,276,277,402,497],largest:[1,2,3,5,122,132,225,226,227,230,231,232,237,238,241,244,245,246,249,252,295,373,446,448,567],lasso:[2,363],lassomodel:3,lassowithsgd:[3,457],last:[1,2,3,5,6,50,66,92,132,149,237,256,262,263,264,278,301,303,304,309,310,311,320,337,341,360,363,365,366,434,439,455,504,507,563,641,778,808,811,813,852,1003],last_dai:5,lastprogress:5,late:[5,514,577],latent:[2,3,262,263,409,451,452],later:[2,3,5,221,222,312,365,366,425,641,808,810,905],latest:[3,5,6,401,412,464,465,577,1013],latestmodel:[3,401,412,464,465],latter:[1,2,3,5,31,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,448,629],launch:[1,32,134,135,136],layer:[1,2,76,241,244],lazi:[3,442],lbfg:[3,395],lda:[2,3,256,263,264,409],lda_distributed_model:[2,262],lda_local_model:[2,262],lda_path:[2,262],ldamodel:[2,3],ldaoptim:[3,408],lead:[3,5,446,448,481,585,588,604,894,896],leaf:[2,3,225,226,231,232,249,252,253,254,351,352,355,356,367,368,402,471,472,473,475],leafcol:[2,225,226,231,232,249,252,351,352,355,356,367,368],leafid:[2,226,232,252,352,356,368],learn:[2,3,225,226,230,231,232,249,252,256,262,263,264,303,328,351,352,354,355,356,363,367,368,404,427,471,473,475],learningdecai:[2,256,262,263,264],learningoffset:[2,256,262,263,264],learningr:[3,427,473],leas:[6,1013],least:[1,2,3,5,66,70,149,297,327,330,331,347,363,422,448,451,452,457,458,460,461,462,463,466,546,577,587,607,761],leastabsoluteerror:[3,473],leastsquareserror:[3,473],leav:[2,5,225,231,249,351,355,367,736,823],left:[1,2,3,5,6,75,225,226,231,232,249,252,325,351,352,355,356,367,368,442,446,448,449,534,641,782,790,791,839,859,972,982,983],left_anti:[5,534],left_out:[5,534],left_semi:[5,534],leftanti:[5,534],leftout:[5,534],leftouterjoin:[1,6],leftsemi:[5,534],lemon:[1,82],len:[1,2,3,5,64,82,88,91,95,99,120,253,257,260,278,379,450,452,470,790,812,813,831,858,878],length:[1,2,3,5,6,156,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,262,266,276,277,278,283,301,311,323,325,328,329,332,408,424,431,470,479,539,547,556,557,558,584,585,604,622,747,813,838,846,848,852,858,894,997],leo:[2,225,351],less:[2,3,5,225,226,231,232,249,252,256,257,262,263,264,275,281,282,298,301,308,351,352,355,356,367,368,406,416,431,442,446,448,452,509,516,582,585,588,600,629,658,659,664,665,776,779,805,836,894,896,941],lesser:[3,470],let:[2,3,375,448],letter:[5,726,769],level:[1,2,3,5,6,33,61,89,93,95,124,125,161,181,196,253,310,330,331,332,386,402,429,431,442,451,495,540,560,641,751,763,954,978,984,1004,1013],levenshtein:5,li2008:[2,330],lib:[1,105,169,170],liblinear:[3,481],librari:[1,5,6,1013],libsvm:[2,3,237,247,481],lifecycl:[5,905],lifetim:[5,504,505,506,507,544],lift:[2,330,331],like:[1,2,3,5,7,53,154,245,260,277,298,314,347,375,398,442,497,585,590,591,610,611,631,726,754,894,898,899,908,909],likelihood:[2,3,256,257,259,263,264,404],limit:[1,2,5,6,32,118,309,514,585,852,894,1003,1013],lin:[2,3,265,410],linalg:[0,226,230,232,233,237,244,245,247,252,253,257,260,262,266,267,276,279,283,284,289,295,297,299,302,303,305,307,312,315,324,326,327,333,336,337,338,339,340,341,342,343,349,352,354,356,357,361,363,368,370,371,375,377,380,405,409,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,456,470,471,473,475,481],line:[1,3,5,6,108,148,427,481,556,585,588,604,608,618,894,896,903,1004],lineag:[1,2,76,371],linear:[2,3,227,230,233,234,252,298,353,354,357,358,359,360,363,365,366,368,455,457,459,460,461,462,465,479],lineardatagener:3,linearli:[2,299,303],linearmodel:3,linearregress:[2,3,364,365,366,458,461,463],linearregressionmodel:[2,3,363],linearregressionsummari:2,linearregressiontrainingsummari:2,linearregressionwithsgd:[3,457,460,462,465],linearsvc:[2,234],linearsvcmodel:[2,233],linesep:[5,585,588,604,608,618,894,896,903],link:[1,2,32,347,357,358],linkpow:[2,357,358],linkpredictioncol:[2,357,358],list:[1,2,3,5,6,11,37,38,41,62,64,65,73,77,91,123,140,142,148,190,213,215,226,230,232,233,237,244,245,247,252,253,254,256,257,260,261,262,276,279,280,281,282,289,291,295,297,299,303,305,308,309,312,315,318,319,324,328,330,335,337,343,346,347,349,352,354,356,357,361,363,368,373,375,377,379,380,398,403,405,407,413,421,427,434,441,452,456,479,481,494,499,500,513,516,517,520,525,526,527,534,539,542,547,552,553,557,558,563,564,565,567,582,583,584,585,587,588,589,597,601,603,617,620,623,627,628,629,630,633,641,674,707,721,755,761,762,763,774,780,792,857,887,894,903,931,951,953,1002,1009],listcolumn:5,listdatabas:5,listfunct:5,listtabl:5,lit:[5,675,705,740,757,833,834],liter:[5,783,833,834,887],literatur:[2,256,262,263,264],littl:[1,111],live:[6,953],load:[1,2,3,5,6,38,39,118,119,120,123,137,156,172,192,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,382,383,384,386,387,390,391,393,394,398,399,405,407,409,411,413,427,428,430,452,455,457,460,462,472,474,476,477,480,481,482,527,568,585,586,588,592,593,594,620,622,893,894,896,900,901,902,903,997],load_from_path:1,loaddefault:[1,137],loaddefaultstopword:[2,317],loadedassembl:[2,323],loadedbinar:[2,275],loadedbucket:[2,278],loadedcv:[2,281],loadeddtc:[2,283],loadedep:[2,284],loadedhash:[2,287],loadedhashingtf:[2,288],loadedidf:[2,289],loadedimput:[2,291],loadedindex:[2,318,324],loadedinteract:[2,294],loadedinvert:[2,318],loadedmascal:[2,295],loadedmmscal:[2,299],loadedmodel:[2,279,281,289,291,295,299,303,305,309,312,315,318,324,328],loadedngram:[2,301],loadednorm:[2,302],loadedoh:[2,303],loadedpca:[2,305],loadedpipelin:[2,326],loadedpx:[2,307],loadedqd:[2,308],loadedremov:[2,317],loadedretoken:[2,311],loadedrf:[2,309],loadedscal:[2,312],loadedselector:[2,279],loadedsqltran:[2,314],loadedstandardscal:[2,315],loadedtoken:[2,320],loadedv:[2,327],loadedword2vec:[2,328],loader:[3,482],loadlabeledpoint:[3,481],loadlibsvmfil:[3,481],loadmetadata:[2,384],loadparamsinst:[2,384],loadvector:[3,481],local:[1,2,3,5,15,22,58,69,71,76,92,93,94,137,149,152,153,154,155,165,167,169,171,176,178,179,180,188,192,208,256,263,264,317,332,428,431,433,434,435,436,438,439,440,441,442,446,448,506,507,532,536,585,588,633,638,759,871,881,894,896],local_model_path:[2,262],local_tim:[5,759],localcheckpoint:[1,5],localdoc:[3,427],localldamodel:[2,262],localmodel:[2,262],locat:[1,2,5,6,149,152,291,682,771,997,1008],lock:[1,179],log10:5,log1p:5,log2:[2,3,5,231,232,249,252,355,356,367,368,475],log:[1,2,3,5,66,181,246,256,257,259,263,264,269,357,358,398,404,416,422,448,450],logarithm:[5,785,786,787,788],logic:[5,496,519,536,905,919],logist:[2,3,221,222,231,232,237,238,239,240,394,395,396,401],logisticregress:[2,3,221,222,238,247,377,379,380,396],logisticregressionmodel:[2,3,237],logisticregressionsummari:2,logisticregressiontrainingsummari:2,logisticregressionwithlbfg:[3,394,396],logisticregressionwithsgd:[3,394],logit:[2,357,358],loglevel:[1,181],loglikelihood:[2,256,257,259,263,264],logloss:[2,3,269,415,473],lognormalrdd:[3,450],lognormalvectorrdd:[3,450],logperplex:[2,256,263,264],logprior:[2,256],long_col:[5,813],long_column:[5,813],longer:[1,2,5,76,137,328,329,556,585,631,894],longtyp:[2,5,331,644,765],longwrit:[1,167,168,169,170,176],look:[3,5,470,577],lookup:1,loop:[5,575],los_angel:[5,590,591,610,611,758,759,871,881,898,899,908,909],loss:[2,3,222,225,231,232,233,240,269,351,355,356,363,364,365,366,417,473],losstyp:[2,231,232,355,356],lost:[2,256,262,263,264],low:[1,2,3,265,347,410],lower:[1,2,3,5,111,237,238,256,263,264,276,277,297,298,299,300,305,306,308,312,313,347,451,455,658,659,805],lowerbound:[5,587],lowerboundsoncoeffici:[2,237,238],lowerboundsonintercept:[2,237,238],lowercas:[2,311,320],lowest:[3,455],lpad:5,lr2:[2,237,363],lr_model:[2,237,363],lr_path:[2,237,363],lrm:[3,394,395,457,460,462],lsh:[2,276,297],ltrim:5,lz4:[5,604,608,613,618],lzo:[5,612,613],m_t:[3,413],machin:[2,3,230,328,354,399,400,427],made:[1,5,131,545,658],mae:[2,272],magnitud:[3,448],mai:[1,2,3,5,11,13,53,54,70,76,122,133,155,179,213,215,225,226,227,230,231,232,233,237,238,241,244,245,246,247,249,252,253,256,257,260,262,263,264,266,267,268,269,270,271,272,276,279,281,287,289,291,295,297,299,303,305,308,309,312,315,318,324,328,330,341,347,348,349,351,352,354,355,356,357,361,363,367,368,377,380,427,437,439,442,452,481,482,496,497,536,546,567,577,585,588,639,666,707,708,750,759,777,871,878,894,896,913,924,951],main:[0,1,5,6,149,993],maintain:[2,324,325],major:[2,3,336,433],make:[2,3,5,6,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,383,385,397,401,412,442,443,446,464,465,509,511,525,562,600,601,736,823,1013],malform:[5,585,588,894,896],mallori:[5,520,583],manag:[2,5,256,650,930],mani:[1,2,5,12,206,257,585,587,607,813,852,894],manipul:[5,491],manner:[1,5,179,905],manual:[1,178,179,180],map1:[5,792],map2:[5,792],map3:[5,792],map:[1,2,3,5,6,37,45,65,73,77,82,88,92,99,106,131,179,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,416,421,427,428,448,450,471,473,475,520,537,547,583,584,620,621,622,633,641,721,740,744,745,757,785,792,793,795,796,797,798,816,817,846,869,922,946,953,976],map_concat:5,map_entri:5,map_from_arrai:5,map_from_entri:5,map_func:[1,179],map_kei:5,map_valu:5,mapfield:[5,744,816],mapinpanda:[5,813],mappartit:[1,5,6,152,805],mappartitionswithindex:[1,6,81],mappartitionswithsplit:1,mapper:[1,93,94],mapr:[1,102,103,167,168],mapreduc:[1,3,93,94,103,104,105,169,170,448],maptyp:[5,757,813,869,935,936,937,938,939,940,941,942,943,944,945,947,948,949,950,951,952],mapvalu:[1,6,64],mari:[1,111],mark:[1,2,5,32,35,71,76,127,179,325,573,700],marshal:1,marshalseri:1,mascal:[2,295],master:[1,5,6,39,46,94,146,149,633,998],mat1:[3,442],mat2:[3,442],mat3:[3,442],mat:[3,435,442,443,446,448,450],mat_transpos:[3,442,443],match:[1,2,3,5,72,115,221,222,225,226,231,232,237,238,239,240,249,252,311,348,351,352,355,356,367,368,409,427,442,446,448,455,495,520,540,547,573,583,584,585,588,590,591,592,593,622,641,666,763,813,824,825,852,859,875,894,896,900,901,903],materi:[1,69,76],math:[3,5,411,450,470,669,693,694,695,714,715,735,820,844,845,862,863],mathemat:[2,3,5,307,454,828],matric:[2,3,241,244,347,348,442,446,448,451,470,481],matrix:[2,3,237,238,256,258,263,264,265,283,306,336,340,346,347,348,370,371,410,415,433,435,437,438,442,443,444,445,446,447,448,449,450,451,452,456,458,461,463,469,470,481],matrixentri:[3,442,443,446],matrixfactorizationmodel:3,matter:[1,137],max:[1,2,3,5,66,99,225,226,227,230,231,232,233,234,237,238,241,244,249,252,253,254,256,257,258,260,261,262,263,264,265,269,277,281,282,295,296,299,300,328,329,347,348,349,350,351,352,353,354,355,356,357,358,363,364,367,368,375,424,443,446,450,469,470,473,491,492,511,562,577,620,658,664,665,680],maxab:[2,295,296],maxabsscal:[2,296],maxabsscalermodel:[2,295],maxbin:[2,3,225,226,231,232,249,252,351,352,355,356,367,368,471,473,475],maxcategori:[2,324,325],maxcharspercolumn:[5,585,894],maxcolumn:[5,585,894],maxdepth:[2,3,225,226,231,232,249,252,351,352,355,356,367,368,471,473,475],maxdf:[2,281,282],maxim:[2,3,256,257,263,264,266,267,268,269,270,271,272,332,377,378,380,381,404,431],maximum:[1,2,3,5,66,83,225,226,231,232,249,252,277,281,282,295,298,308,324,328,329,332,351,352,355,356,367,368,375,402,404,405,406,408,409,410,431,446,448,470,471,473,475,494,585,587,597,604,673,680,800,894,941],maxit:[2,227,230,231,232,233,234,237,238,241,244,253,254,256,257,258,260,261,262,263,264,265,328,329,347,349,350,353,354,355,356,357,358,363,364,377,379,380],maxiter:[3,402,404,405,406,407,408,410],maxlocalprojdbs:[2,3,332,431],maxmalformedlogperpartit:[5,585,894],maxmemoryinmb:[2,225,226,231,232,249,252,351,352,355,356,367,368],maxpatternlength:[2,3,332,431],maxrecordsperbatch:[5,537],maxsentencelength:[2,328,329],maxsiz:[5,658,664,665],maxtermspertop:[2,3,256,263,264,409],mce:[2,269],mce_path:[2,269],mcm:[3,394],md5:5,mdf:[2,237],mean:[1,2,3,5,66,85,112,225,226,231,232,241,244,249,252,253,256,257,258,260,261,262,263,264,267,272,291,292,297,315,316,347,349,350,351,352,355,356,357,358,365,366,367,368,373,374,375,402,403,406,407,413,416,417,425,426,443,446,448,450,461,469,470,471,472,473,475,497,511,526,562,585,621,622,623,658,659,664,665,763,813,894],mean_func:[5,622],mean_udf:[5,813],mean_v:[5,813],meanabsoluteerror:[2,3,365,366,417],meanapprox:1,meanaverageprecis:[2,3,271,416],meanaverageprecisionat:[3,416],meanaverageprecisionatk:[2,271],meaning:[3,448],meansquarederror:[2,3,365,366,417],meant:[2,5,335,511,525,562,601],measur:[2,3,5,221,222,239,240,253,254,260,261,267,415,735,820],mechan:[1,5,107,167,168,169,170,176,588,896],median:[2,5,291,292,312,313,494,597],meet:[1,5,85,117,585,588,894,896],membership:[3,405],memori:[1,2,5,31,35,38,39,41,118,119,120,122,123,127,182,192,196,225,226,231,232,249,252,351,352,355,356,367,368,527,567,568,573,620,622,913,919,931,933],memory_and_disk:[1,2,5,347,495,540],memory_and_disk_2:[1,6,1013],memory_onli:[1,6,33,89,196,954],memory_only_2:1,merg:[1,2,5,30,31,41,54,93,94,103,105,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,592,593,688,900,901],merge_asof:5,mergecombin:[1,6,41,957],mergeschema:[5,592,593,900,901],mergevalu:[1,6,41,957],meso:149,messag:[1,2,6,11,347,1013],metadata:[1,2,3,5,23,293,324,325,326,335,384,386,482,950,951],metastor:[5,636],method:[1,2,3,5,6,7,10,21,22,29,38,39,40,68,76,118,119,120,123,132,133,134,137,149,172,179,193,196,205,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,375,376,377,378,379,380,381,382,383,384,385,386,387,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,438,439,440,441,442,443,444,446,448,449,450,451,452,453,454,455,457,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,485,490,491,494,501,527,532,533,546,568,575,581,596,597,598,619,631,633,635,637,654,893,904,905,915,916,917,924,930,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,993,996,1003],methodnam:[2,371],metric:[2,3,6,221,222,239,240,266,267,268,269,270,271,272,276,375,376,377,378,380,381,414,415,416,417,1013],metriclabel:[2,269,270],metricnam:[2,266,267,269,270,271,272],mh2:[2,297],mhpath:[2,297],michael:[3,454],micro:[5,905,906],microbatch:[5,914],microf1measur:[2,270],microprecis:[2,270],microrecal:[2,270],microsecond:[5,759,871,888],middl:[5,905],might:[1,3,5,41,446,448,587,607,632,813],mike:5,millisecond:[5,888],min:[1,2,3,5,66,99,160,176,269,298,299,300,375,450,469,470,481,492,511,562,620,658,664,665,681],min_udf:[5,620],minconfid:[2,330,331],mincount:[2,3,328,329,427],mindf:[2,281,282],mindivisibleclusters:[2,3,253,254,402],mindocfreq:[2,3,289,290,422,423],mine:[2,3,330,331,332,402,429,430,431],minhash:[2,297],minhashlsh:[2,298],minhashlshmodel:[2,297],mini:[2,230,256,262,263,264,354],minibatchfract:[2,3,227,230,353,354,396,400,401,457,458,460,461,462,463,465],minim:[2,3,5,231,232,266,267,268,269,270,271,272,311,330,331,332,355,356,363,429,431,473,577],minimum:[1,2,3,5,6,66,86,176,225,226,231,232,249,252,253,254,281,282,289,290,311,328,329,351,352,355,356,367,368,375,402,422,427,471,494,577,587,597,681,803,1003],mininfogain:[2,3,225,226,231,232,249,252,351,352,355,356,367,368,471],mininstancespernod:[2,3,225,226,231,232,249,252,351,352,355,356,367,368,471],minmaxscal:[2,300],minmaxscalermodel:[2,299],minmaxscalerpath:[2,299],minpartit:[1,3,155,172,188,192,481],minsplit:[1,176],minsupport:[2,3,330,331,332,429,431],mintf:[2,281,282],mintokenlength:[2,311],minu:[5,577,746],minut:[5,577,728,888,914],minweightfractionpernod:[2,225,226,231,232,249,252,351,352,355,356,367,368],mismatch:[2,3,5,337,341,434,439,813],miss:[1,2,5,15,165,208,221,222,239,240,277,287,291,292,298,538,581,631],missingvalu:[2,291,292],mix:[2,5,237,238,257,363,364,620],mixin:[2,3,390,392,477,478,480,482],mixtur:[2,3,256,257,258,259,262,263,264,404,405],mkdir:[1,192],mkdtemp:[2,3,5,377,380,394,398,399,405,407,409,411,427,452,455,457,460,462,604,605,608,609,612,613,614,615,894,896,897,900,901,903],mlce:[2,270],mlce_path:[2,270],mllib:[0,1,2,237,247,330,333,341,343,346,375,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],mlor:[2,237],mlormodel:[2,237],mlp2:[2,244],mlp:[2,244],mlp_model:[2,244],mlp_path:[2,244],mlreadabl:[2,384],mlreader:[2,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,382,384,390],mlutil:3,mlwritabl:2,mlwriter:[2,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,367,368,377,378,380,381,382,386,392],mmscaler:[2,299],mod:[2,298],mode:[1,2,3,5,32,260,261,324,335,406,410,519,577,585,588,603,604,607,608,612,613,615,616,617,701,754,829,894,896,905,906,910,913],model1:[2,291],model2:[2,226,232,233,237,244,245,247,252,253,257,260,276,291,297,324,347,349,352,356,357,361,363,368],model3:[2,226,244,245,324,352],model4:[2,245,324],model5:[2,245],model:[2,3,213,215,216,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,269,276,277,279,280,281,282,288,289,290,291,292,295,296,297,298,299,300,303,304,305,306,308,309,310,312,313,315,316,318,319,324,325,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,377,378,379,380,381,384,388,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,418,419,422,423,425,426,427,428,429,430,432,451,452,454,455,457,458,459,460,461,462,463,464,465,471,472,473,474,475,476,477,478,480,482],model_path:[2,3,226,232,233,237,244,245,247,252,253,257,260,347,349,352,356,357,361,363,368,377,380,430],modeliter:[2,213,215,226,230,232,233,237,244,245,247,252,253,257,260,262,276,279,281,289,291,295,297,299,303,305,308,309,312,315,318,324,328,330,347,349,352,354,356,357,361,363,368,377,380],modelpath:[2,276,279,281,289,291,295,297,299,303,305,309,312,315,318,324,328],modeltyp:[2,245,246],modif:[2,3,5,253,402,658],modifi:[1,2,30,31,41,53,137,232,301,311,320,326],modul:[0,1,7,666,667],modulo:[2,287,288],moment:[5,758],mon:[5,728,810,877],monitor:[1,6,997,1008],monoton:[2,3,5,362,455,805],monotonically_increasing_id:5,month:[5,589,593,595,603,614,617,670,728,730,778,808,877,888],months_between:5,more:[1,2,3,5,6,45,132,159,241,244,245,253,281,282,283,297,324,330,331,332,347,348,384,402,412,431,444,446,448,472,479,491,494,533,577,585,597,604,629,673,813,852,878,888,894,953,962,983,1002,1013],most:[1,2,3,5,50,92,137,149,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,277,298,301,303,311,318,320,337,341,363,398,434,439,504,507,509,600,641,913,922,925],move:[3,5,6,406,563,997,1008],mpi:[1,13],mpi_barri:[1,13],mse:[2,272,364],much:[1,5,11,13,64,122,567],multi:[1,2,5,124,125,149,225,226,227,230,231,232,237,238,241,244,245,246,249,252,303,510,548],multi_class_data:[3,394],multiclass:[2,3,226,232,247,252,269,415,475],multiclassclassificationevalu:2,multiclassmetr:3,multilabel:[2,270],multilabelclassificationevalu:2,multilay:[2,244],multilayerperceptronclassifi:[2,241],multilayerperceptronclassificationmodel:[2,244],multilin:[5,585,588,894,896],multinomi:[2,3,237,238,240,245,246,258,262,394,395,397,409],multipl:[1,2,3,5,6,54,65,98,142,149,178,179,180,196,266,267,268,269,270,271,272,275,277,278,287,298,307,308,317,323,324,363,442,455,481,494,539,557,558,575,585,588,597,658,710,711,813,887,894,896,932,961,970,982,983,992,1010],multipli:[2,3,5,284,442,446,448,813],multirowdf:[2,318],multivari:[2,3,257,258,405,469],multivariategaussian:[2,3,258,405],multivariatestatisticalsummari:[3,448,470],murmurhash3_x86_32:[2,288],murmurhash:[2,288],mus:[3,405],must:[1,2,3,5,6,14,32,35,45,54,66,76,98,149,177,182,188,192,207,225,226,227,230,231,232,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,269,270,271,278,281,282,291,292,297,301,308,311,312,313,320,327,328,329,332,347,348,351,352,355,356,363,364,367,368,370,371,379,380,381,397,401,408,410,421,427,442,446,448,455,465,470,494,520,525,533,534,539,546,547,557,558,575,583,584,597,601,618,622,641,658,666,685,759,838,871,888,903,905,912,923,924,941,961,970,982,983,992,997,1008],mutat:[1,5,205,813],my_tabl:5,mycustomprofil:1,mydoubleavg:5,mypassword:[5,587,607],myrdd:[1,175],n_t:[3,413],n_th:[3,413],naiv:[2,3,245,397,398],naive_bayes_classifi:[2,245],naivebay:[2,3,246,398],naivebayesmodel:[2,3,245],nalic:[5,666],name:[0,1,2,3,4,5,6,18,58,106,108,109,143,149,172,188,210,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,367,368,370,371,373,377,378,380,381,387,403,405,408,409,411,414,415,416,417,419,423,426,427,428,430,432,449,452,466,469,470,472,474,476,481,485,491,493,494,498,499,500,501,503,504,505,506,507,508,509,510,511,513,514,516,517,518,519,520,521,522,523,524,525,526,527,528,531,534,535,539,541,544,545,546,547,548,552,553,556,557,558,562,563,564,565,566,567,568,570,571,572,575,576,577,582,583,584,585,586,587,588,589,590,591,593,595,597,598,599,600,601,603,604,605,607,608,610,611,612,613,614,615,616,617,618,620,622,623,627,628,629,630,631,632,634,635,641,642,644,662,663,666,667,674,675,676,677,678,680,681,683,685,686,689,690,691,706,709,717,721,737,738,739,740,744,745,747,751,754,755,759,761,762,763,770,774,776,779,780,792,793,795,796,797,798,813,816,817,821,822,827,838,842,846,849,850,857,867,869,871,878,894,895,896,898,899,903,907,908,909,911,912,913,931,933,950,951,997,1008,1013],namedtemporaryfil:[1,3,106,108,172,481],namedtupl:[5,641],namespac:[5,666],nan:[2,3,5,278,291,308,312,323,347,348,371,470,585,772,809,894],nanvalu:[5,585,894],nanvl:5,narrow:[5,497],nativ:[5,537,621,622,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],natur:[2,3,5,328,427,785,787,849],nb2:[2,245],nb3:[2,245],nb5:[2,245],nb_model:[2,245],nb_path:[2,245],nbar:[1,108],nchannel:[2,335],ndarrai:[2,3,335,336,337,339,340,341,342,343,433,434,436,438,440,441],ndcg:[3,416],ndcgat:[3,416],ndcgatk:[2,271],nearest:[2,3,255,277,298,403,407,413],neariso:[3,454],nearli:[1,3,454],necessari:[2,277,298],need:[1,2,3,5,27,30,31,76,118,122,132,137,256,326,343,347,371,441,470,567,577,585,587,616,629,641,658,894,932,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],needconvers:[5,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],neg:[2,3,5,276,277,297,298,394,399,470,585,848,859,894],negativeinf:[5,585,894],neighbor:[2,277,298],neither:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],nest:[3,5,481,632,751,813,888],net:[2,363],netflix:[3,448],neuron:[2,241,244],neutral:[1,30,31,53,54],new_data:[2,330],new_random_udf:5,newapihadoopfil:1,newapihadooprdd:1,newli:[2,5,347,637],newlin:[3,5,473,588,608,896],newpredict:[2,233,247,253,257,260,330,347,363],newprob:[2,237],newrawpredict:[2,252],newsess:5,nexampl:[3,479],next:[1,2,5,122,213,215,226,230,232,233,237,244,245,247,252,253,257,260,262,276,277,279,281,289,291,295,297,298,299,303,305,308,309,312,315,318,324,328,330,347,349,352,354,356,357,361,363,368,377,380,567,736,779,823,905],next_dai:5,next_dat:[5,725],next_month:[5,670],nfeatur:[3,479],nfoo:[1,108],ngram:2,ngrampath:[2,301],nnnnn:[1,192],node:[1,2,3,5,147,149,152,155,167,169,176,179,188,192,196,225,226,231,232,249,252,351,352,355,356,367,368,471,472,473,474,475,476,497,519],nois:[3,479],nomin:[2,294,325],non:[1,2,3,5,53,127,264,288,297,299,308,325,337,341,343,349,350,375,377,384,421,434,439,441,443,446,448,509,516,520,547,573,578,582,583,584,585,600,623,627,628,630,658,687,690,691,707,708,738,739,750,777,805,821,822,842,894,905],nondeterminist:[2,5,347],none:[1,2,3,5,6,14,15,22,31,37,41,48,54,57,63,64,72,75,83,86,90,91,93,96,97,98,99,102,103,104,105,107,108,110,111,114,115,119,120,123,137,139,144,149,151,155,166,167,168,169,170,171,172,173,175,176,188,192,207,208,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,375,376,377,378,380,381,386,395,396,400,404,406,408,409,415,448,450,451,458,461,463,470,475,481,501,514,515,516,519,520,525,527,534,542,547,550,551,582,583,584,585,587,588,589,592,598,601,602,604,606,607,608,612,613,615,616,618,629,631,633,635,641,644,672,673,679,680,681,685,705,710,740,745,751,757,760,773,774,776,779,785,813,817,821,822,836,842,849,868,870,878,881,887,888,894,896,897,900,901,903,913,914,917,918,922,929,932,935,946,947,950,951,956,957,961,967,969,970,971,972,981,982,983,985,986,991,992,993,995,999,1000,1002,1013],nonneg:[2,3,245,265,347,397,410,451,452],nonposit:[3,481],nonzero:[2,3,265,281,282,337,341,410,434,439],nor2:[3,424],nor:[3,424],norm:[2,3,277,302,337,341,343,365,366,373,375,417,424,434,439,441,470],normal:[1,2,3,5,91,225,230,231,249,258,265,277,299,351,354,355,363,364,365,366,367,373,405,410,448,450,470,542,587,607,621,622,822],normalizerpath:[2,302],normalrdd:[3,450],normalvectorrdd:[3,450],norml1:[2,3,375,469],norml2:[2,3,375,469],norwegian:[2,317],notat:[3,448],note:[1,2,3,5,178,179,180,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,256,257,258,262,263,264,269,275,278,281,282,291,303,304,308,312,317,347,348,351,352,355,356,363,367,368,375,458,463,494,546,585,597,631,666,667,813,905],now:[5,852,907],npart:[3,479],npoint:[3,479],nthi:5,ntile:5,null_replac:[5,679],nullabl:[2,5,335,541,813,950,951],nulldevi:[2,359,360],nullhypothesi:[3,466,470],nulltyp:5,nullvalu:[5,585,604,894],num:[1,2,3,5,6,118,119,120,123,329,428,452,535,563,564,979],number:[1,2,3,5,6,11,12,13,43,45,46,54,57,59,66,75,95,97,98,118,131,133,149,151,156,160,167,168,169,170,173,176,206,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,276,277,279,280,281,282,287,288,289,290,297,298,301,304,305,306,308,323,324,325,328,329,330,331,332,337,341,343,347,348,349,350,351,352,353,354,355,356,357,358,359,360,362,363,364,365,366,367,368,375,377,378,380,394,395,396,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,415,418,421,422,423,427,428,429,431,434,439,441,442,443,444,446,448,450,451,452,453,458,461,463,465,466,468,470,471,472,473,474,475,476,479,481,494,497,502,509,527,535,545,546,556,585,587,588,597,600,603,625,644,658,659,712,716,729,736,754,758,759,776,779,781,805,808,823,830,852,871,880,886,894,896,925,941,961,962,970,979,982],numbin:[2,266],numbit:[5,838,839,840,841],numbucket:[2,5,308,603],numbucketsarrai:[2,308],numclass:[2,3,221,222,225,226,227,231,232,233,234,237,238,239,240,241,246,249,394,395,471,475],numcol:[2,3,336,338,339,340,433,435,436,438,442,443,444,446,448,450],numcolblock:[3,442],numdoc:[2,3,289,290,423],numer:[1,2,3,5,156,257,287,291,294,309,310,318,325,359,360,370,373,446,448,494,511,547,562,584,587,597,623,626,627,628,630,658,692,754],numfeatur:[2,3,225,226,227,231,233,234,237,238,241,246,249,279,287,288,324,325,350,351,352,353,355,356,357,358,361,362,363,364,367,368,394,418,421,481],numfold:[2,377,378],numhasht:[2,276,277,297,298],numinst:[2,359,360,365,366],numit:[2,255,259],numitem:[2,348],numitemblock:[2,347],numiter:[2,3,360,401,427,465,473],numlabel:[2,309,310,318,319],numnearestneighbor:[2,277,298],numnod:[2,3,225,226,351,352,472],numnonzero:[2,3,337,341,375,434,439,469,470],numpartit:[1,2,3,5,6,31,36,37,41,48,54,57,63,64,72,75,88,93,95,96,97,110,111,114,115,328,329,330,331,427,429,450,497,545,546,587,644,956,957,961,967,969,970,971,972,977,981,982,984,985,991],numpi:[2,3,5,232,252,254,261,335,336,337,339,340,341,342,343,356,368,394,398,399,403,405,407,409,413,433,434,436,438,439,440,441,450,456,471,622,813],numrecentprogressupd:[5,925],numrow:[2,3,336,338,339,340,433,435,436,438,442,443,444,446,448,450],numrowblock:[3,442],numslic:[1,171,173],numtopfeatur:[2,3,279,280,418],numtre:[2,3,231,232,249,252,355,356,367,368,473,474,475,476],numus:[2,348],numuserblock:[2,347],obj:[1,5,935,936,937,938,939,941,942,943,944,945,946,947,948,949,950,951],object:[1,2,3,5,6,7,30,53,106,107,112,137,149,151,157,166,167,168,169,170,176,186,222,238,240,288,343,363,366,371,375,376,389,406,409,412,441,446,448,452,470,537,588,594,608,622,631,707,708,760,813,878,896,902,905,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,993,994,1004,1013],objectivehistori:[2,222,240,366],observ:[2,3,256,266,267,268,269,270,271,272,417,448,466,470],obtain:[1,2,3,10,221,222,416,466],occur:[2,3,266,349,350,404,423],occurr:[2,5,291,292,370,453,468,509,600,682,771,784,859],ocvtyp:[2,335],off:[1,3,5,179,181,448,585,658,664,808,894],off_heap:1,offset:[2,5,357,358,590,591,610,611,658,659,759,776,779,871,888,898,899,908,909],offsetcol:[2,357,358],oflass:[2,237,238],often:[1,2,5,179,225,226,231,232,249,252,256,262,263,264,351,352,355,356,367,368,905],ohe:[2,303],ohepath:[2,303],old:[1,3,6,102,103,167,168,413,481,982,983,1003],older:[5,514],oldvec:[2,333],oldvector:[2,333],omit:[5,516,547,582,584,631,635,641,813,868,870],onbatchcomplet:6,onbatchstart:6,onbatchsubmit:6,onc:[1,2,5,6,23,137,152,153,157,179,275,278,308,317,377,380,491,575,585,588,894,896,905,914,1002],one:[1,2,3,5,6,30,31,34,41,68,112,118,126,131,132,148,149,151,213,215,219,220,225,226,227,230,231,232,233,237,238,241,244,245,246,247,248,249,252,253,257,260,262,272,276,279,281,287,289,291,294,295,297,299,303,304,305,306,308,309,312,315,318,324,327,328,330,347,348,349,352,353,354,356,357,361,363,368,370,373,376,377,380,442,443,444,446,455,466,472,481,497,533,534,546,553,556,566,585,587,588,604,608,612,613,616,618,622,629,632,637,644,658,664,712,734,741,746,751,776,779,785,787,813,852,887,888,894,896,905,914,920,988,1002],oneatatim:[6,1002],oneatwobthreec:[5,852],onehotencod:[2,287,304],onehotencodermodel:[2,303],ones:[2,3,363,481],onethird:[2,3,231,232,249,252,355,356,367,368,475],onevsrest:[2,248],onevsrestmodel:[2,247],onli:[1,2,3,5,6,7,9,32,38,39,49,70,77,89,118,119,120,123,149,152,153,157,193,233,256,262,264,269,278,279,281,282,303,304,314,323,324,330,347,348,357,358,361,363,364,365,366,373,377,380,383,385,394,399,418,428,442,443,454,470,471,475,494,501,514,516,519,527,530,540,547,568,577,582,584,585,588,590,591,592,593,597,598,604,618,641,644,658,751,785,894,896,900,901,903,906,910,913,914,919,920,924,963,982,1003],onlin:[2,3,5,256,262,263,264,408,413,494,597],onoutputoperationcomplet:6,onoutputoperationstart:6,onreceivererror:6,onreceiverstart:6,onreceiverstop:6,onstreamingstart:6,oom:[2,5,377,380,620,622],open:[1,5,66,152,188,190,192,905],opencv:[2,335],openhook:[1,108],oper:[1,2,3,5,6,7,29,30,31,53,54,77,85,89,92,93,94,112,117,221,222,287,309,347,414,442,497,540,604,607,608,609,612,613,615,616,624,813,906,953,962,998],opt1:[5,589],opt2:[5,589],opt3:[5,589],optim:[2,3,5,227,230,233,237,238,241,244,256,262,263,264,328,329,353,354,357,358,363,364,408,448,494,519,597,641,878,919],optimist:[2,326],optimizedocconcentr:[2,256,262,263,264],optimum:[2,257],option:[1,2,3,5,6,23,119,127,137,149,152,166,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,367,368,377,378,380,381,386,414,415,417,418,514,516,519,520,528,545,547,550,582,583,584,585,588,589,592,593,603,606,609,615,616,617,631,633,635,637,666,756,757,833,834,852,867,868,869,870,894,896,897,900,901,903,905,910,913,951,1007],orantiton:[2,361,362],orc:5,orc_df:[5,612],orc_partit:[5,592,612],orc_sdf:[5,900],order:[1,2,3,5,6,16,53,64,119,123,132,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,337,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,371,377,378,380,381,409,415,434,446,448,449,452,455,470,481,539,546,557,558,575,631,654,656,658,662,685,689,690,691,707,708,737,738,739,750,777,811,813,827,849,888,1009],orderbi:[2,5,347,510,548,551,557,602,654,658,659,762,763,813],ordereddict:[5,622],ordin:5,ordinari:[2,363],org:[1,2,3,5,6,102,103,104,105,107,108,167,168,169,170,176,245,287,327,330,332,431,448,494,525,585,588,590,591,592,593,597,601,631,894,896,900,901,903,923,994],orient:[3,446,448],origin:[1,2,3,5,52,80,81,82,136,225,226,227,230,231,232,237,238,241,244,245,246,249,252,262,272,277,287,298,300,304,325,327,335,359,360,409,427,622],originalmax:[2,299,300],originalmin:[2,299,300],origvec:[2,283],orthogon:[3,437],oserror:[3,398,405,407,409,411,427,452,455],other:[1,2,3,5,6,34,37,57,65,68,72,75,97,114,115,126,131,151,152,153,176,225,265,267,284,337,341,347,351,434,439,442,450,501,508,516,518,520,530,531,534,547,561,570,571,572,575,582,583,584,589,590,591,598,610,611,615,616,624,759,871,897,898,899,905,908,909,913,953,956,967,971,972,985,989,990],otherwis:[1,2,3,5,11,13,35,139,149,237,238,278,287,288,349,350,359,360,361,362,364,394,399,585,587,604,607,666,675,679,687,744,745,813,816,817,836,887,894],our:[1,3,181,395,396,400,427,461],out:[1,2,3,5,98,107,149,196,221,222,239,240,256,278,281,282,291,308,309,310,317,318,319,323,324,325,326,347,415,422,490,541,578,579,603,614,911],out_a:[2,291],out_b:[2,291],outcom:[2,3,370,394,395],outer:[1,5,6,57,75,97,534,967,972,985],outlin:[5,519],outofmemoryerror:[5,563],output1:[2,275,308],output2:[2,275,308],output:[1,2,3,5,41,68,93,102,103,104,105,107,220,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,256,257,258,262,263,264,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,312,313,315,316,317,318,319,320,323,324,325,327,328,329,330,331,332,333,347,349,350,359,360,361,362,365,366,379,386,387,393,394,399,425,431,442,494,519,537,546,556,577,588,597,603,605,610,611,614,617,618,622,629,631,667,813,888,896,905,906,907,908,909,911],outputcol:[2,220,226,232,252,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,312,313,315,316,317,318,319,320,323,324,325,326,327,328,329],outputdatatyp:[2,220],outputformat:[1,102,103,104,105],outputformatclass:[1,103,105],outputmod:[5,913],outputoperationcomplet:6,outputoperationstart:6,outsid:[2,5,6,278,1003],over:[1,2,3,5,6,64,137,175,213,214,219,220,221,222,225,231,239,240,247,248,249,256,258,262,263,264,268,293,307,317,325,345,351,355,367,377,378,380,381,401,408,409,445,447,464,465,474,476,511,575,585,621,633,658,659,813,894,951,961,962,970,982,983,992],overflow:[5,768],overlai:5,overlap:[2,5,327,377,687],overload:5,overrid:[1,2,5,181,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,386,387,393,585,588,592,593,612,613,894,896,900,901],overwrit:[2,5,386,387,393,516,582,603,604,606,607,608,609,612,613,615,616,617],ovr:[2,247],ovr_model:[2,247],owlqn:[2,233],own:[1,2,5,178,179,180,308,635],p362:[5,850],packag:[0,102,103,104,105,375,481],package_extens:1,pad:[2,5,283,790,831],page:0,pair:[1,2,3,5,6,34,39,47,52,57,72,75,82,88,97,102,103,104,105,107,111,115,131,137,140,142,144,148,155,192,265,277,298,303,343,370,377,379,409,410,416,441,448,452,470,509,600,635,721,880,965,976,982,991],pairwis:[2,227,230,353,354],panda:[5,537,568,620,622,641,813],pandas_udf:[5,537,620,621,622],pandascogroupedop:[5,813],pandasudftyp:[5,620,621,813],papadimitri:[5,525,601],paper:[2,3,253,256,262,263,264,265,402,409,410,427,454],parallel:[1,2,3,5,6,22,29,30,34,36,37,39,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,62,63,64,65,66,68,70,72,73,74,75,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,108,109,110,111,113,114,115,116,117,118,119,120,122,123,124,125,126,128,129,131,132,133,152,161,172,175,179,190,233,237,245,247,253,260,261,318,330,331,332,361,375,377,380,394,395,398,399,402,403,405,407,409,411,413,414,415,416,417,418,420,422,424,425,427,429,430,431,432,442,443,446,448,451,452,454,455,457,460,462,467,470,471,473,475,481,497,514,587,607,633,641,642,805,984],param:[0,3,5,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,346,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,373,377,378,379,380,381,383,384,385,386,448,470,479,585,894],paramet:[1,2,3,4,5,6,27,45,83,86,90,91,98,102,103,104,105,107,108,122,124,125,137,142,149,156,166,167,168,169,170,173,176,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,343,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,367,368,370,371,373,375,376,377,378,379,380,381,384,386,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,412,413,414,415,416,417,418,419,421,422,423,424,425,426,427,428,429,431,435,441,442,443,445,446,447,448,450,451,454,455,456,458,459,461,463,465,470,471,472,473,475,480,481,482,485,493,494,496,497,498,501,503,508,509,513,516,519,520,521,525,526,527,528,534,536,537,539,542,545,546,547,550,551,553,556,557,558,565,567,569,575,576,577,582,583,584,585,586,587,588,589,592,593,594,595,597,598,599,600,601,602,603,604,605,607,608,612,613,614,615,616,617,618,620,621,622,623,627,628,629,630,632,634,635,638,641,644,658,659,662,663,664,665,666,667,673,674,675,676,677,678,680,681,683,685,686,688,695,714,715,721,728,735,740,751,754,755,756,757,759,760,761,774,776,779,780,784,792,793,795,796,797,798,810,811,813,820,827,833,834,842,844,845,846,848,849,852,857,862,863,867,869,871,877,878,887,894,895,896,897,900,901,902,903,907,911,912,913,914,919,935,941,946,950,951,955,961,970,979,982,983,990,991,992,993,995,996,997,998,1000,1001,1002,1003,1004,1007,1009,1013],parametr:[2,349],paramgridbuild:[2,377,380],parammap:[2,213,215,226,230,232,233,237,244,245,247,248,252,253,257,260,262,276,279,281,289,291,295,297,299,303,305,308,309,312,315,318,324,328,330,347,349,352,354,356,357,361,363,368,377,378,380,381,386],paramnam:[2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381],parent:[1,2,3,6,35,178,179,180,215,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,344,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,471,953],parquet:[3,5,482,491,586,589,595,603,605,609,614,617,633,895,897,907],parquet_partit:[5,589,593,595],parquet_sdf:[5,901],pars:[3,5,434,439,441,481,519,585,588,590,591,666,747,756,757,833,834,894,896,898,899,903,919],parser:[5,585],part:[1,3,5,108,175,192,394,450,481,585,592,593,604,701,829,894,900,901],partial:[5,620],particular:[1,3,76,412,470],partit:[1,2,3,5,6,16,17,29,30,31,36,41,52,53,56,57,59,62,64,70,75,77,79,80,81,82,88,92,93,95,96,97,118,122,131,132,133,135,136,160,163,173,175,196,209,241,244,256,262,263,264,328,329,330,331,347,348,377,427,429,450,481,497,524,545,546,558,567,577,585,587,588,590,591,592,593,607,610,611,612,613,614,615,616,644,654,657,659,663,722,736,776,779,805,811,814,823,830,851,894,896,898,899,900,901,903,905,908,909,911,913,956,961,967,970,971,972,977,982,985],partition:[1,6,77,88,93,96,977],partition_id:[5,905],partitionbi:[1,5,6,612,613,615,616,654,658,659,813,913],partitionfunc:[1,6,31,41,54,63,64,88,93,96,175,977],partitionid:[1,5,905],pass:[1,2,3,5,11,52,82,102,104,105,137,142,144,152,153,167,168,169,170,225,226,231,232,249,252,341,343,351,352,355,356,367,368,394,398,399,405,407,409,411,427,439,441,452,455,457,460,462,470,537,585,622,894],password:[5,587,607],past:[5,888,932,934],path:[1,2,3,5,22,26,103,105,106,107,108,147,149,152,153,155,156,162,167,169,176,177,188,190,192,193,194,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,335,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,383,384,385,386,387,390,391,392,393,394,398,399,405,407,409,411,413,427,428,430,452,455,457,460,462,472,474,476,477,478,480,481,482,585,588,589,590,591,592,593,604,605,608,609,612,613,614,615,618,760,894,896,897,900,901,903,913],pathglobfilt:[5,585,588,590,591,592,593,894,896,900,901,903],pattern:[1,2,3,5,124,125,311,330,331,332,431,585,588,590,591,592,593,604,608,633,726,824,825,852,868,870,881,894,896,900,901,903],paul:[3,448],pav:[3,454],pca:[2,3,306,448],pca_featur:[2,305],pcamodel:[2,305],pcapath:[2,305],pdf:[3,5,410,454,537,621,622],pearson:[2,3,5,359,360,370,371,470,501,598,713],pearsoncorr:[2,3,371,470],pei:[2,3,332,431],penalti:[2,3,237,238,363,364,457,462],peopl:[5,491,504,505,506,507,524,544,586,588,589,736,823],people1:[5,589],pep:[5,631],per:[1,2,3,5,6,66,148,149,156,225,226,231,232,247,249,252,301,303,348,351,352,355,356,367,368,370,401,448,452,465,497,556,588,666,667,896,1013],percent_rank:5,percentag:[5,562],percentil:[2,3,5,279,280,418,562,814],perceptron:[2,244],perform:[1,2,3,5,57,64,68,72,75,76,93,94,95,97,155,171,247,257,276,277,283,297,298,307,370,375,377,408,413,442,470,534,546,575,620,629,813,859],period:[1,3,5,6,76,408,914,953,955,998],permiss:[5,585,588,894,896],permit:[2,263],permut:[2,5,298,842],perplex:[2,256,263,264],persist:[1,3,5,6,33,35,127,442,495,560,573,636,920,926,954],person:[5,523,524,631,641,736,823],peter:[5,850],pfp:[2,330],phrase:[3,427],physic:[5,519,919],physica:[3,454],pic2:[2,265],pic:[2,3,265,410],pic_path:[2,265],pick:[2,6,247,248,298,375,1002],pickl:[1,107,176],pickle_registri:[1,22],picklefil:[1,106],pickleseri:[1,29,106,149,176],pid:[5,851],piec:[2,262],piecewis:[3,455],pipe:1,pipelin:[0,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368],pipelinemodel:[2,215,326],pivot:5,pivot_col:[5,629],place:[1,2,3,5,256,262,263,264,308,408,497,685,701,736,754,823,829,849],placehold:[2,291,292],plan:[1,2,5,32,324,496,519,536,575,919],pleas:[1,3,5,32,135,136,446,448,470,666,667,945],plu:[3,5,443,446,787],plus_on:[5,813],pmml:[2,363,387],poi:[3,450],point:[0,1,2,3,5,6,149,151,253,254,255,257,259,260,261,267,276,278,308,394,399,401,402,403,404,405,406,407,411,412,413,443,446,448,456,465,467,470,472,474,476,479,481,547,577,584,588,633,695,776,779,809,896,905,993],poisson:[2,3,357,358,359,360,450],poissonrdd:[3,450],poissonvectorrdd:[3,450],polar:[5,695],poli:[2,307],polici:[6,1013],polyexpansionpath:[2,307],polynomi:[2,307],polynomialexpans:2,pool:[1,2,3,180,361,454],poorli:[2,257],popul:[3,5,412,467,718,855,883],port:[1,6,21,149,1004],portable_hash:[1,6,31,41,54,63,64,88,93,96,977],portion:[5,812],portugues:[2,317],pos:[5,784,812,816,817,858],posexplod:[5,817],posexplode_out:5,posit:[2,3,5,6,221,222,239,240,256,262,263,264,271,279,394,399,415,416,418,443,446,448,518,525,531,570,571,572,585,601,622,631,659,665,682,740,771,784,808,812,816,817,858,859,894,951,1013],positiveinf:[5,585,894],possibl:[1,2,3,5,11,13,221,222,225,227,231,234,238,241,246,249,256,291,308,346,394,514,525,601,726,852,887,914],potenti:[1,5,44,620,622],pow:5,power:[2,3,5,265,287,288,357,358,410,412,413,818],poweriterationclust:[2,3,411],poweriterationclusteringmodel:3,pprint:6,practic:[1,2,5,45,641],pre:[1,2,3,5,122,347,481,567],preced:[2,5,293,654],precis:[2,3,5,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,257,258,269,270,291,292,308,312,313,414,415,416,458,461,463,494,597,888,941,942,943],precisionat:[3,416],precisionatk:[2,271],precisionbylabel:[2,221,222,239,240,269,270],precisionbythreshold:[2,221,222],predandlabelswithoptweight:[3,415],predic:[1,5,6,49,587,963],predict:[2,3,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,257,258,259,260,261,266,267,268,269,270,271,272,279,330,331,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,394,395,398,399,401,403,405,407,412,413,415,416,417,452,455,457,460,462,464,465,471,472,473,474,475,476],predictal:[3,452],predictionandlabel:[3,415,416],predictionandlabelswithprob:[2,3,269,415],predictionandobserv:[3,417],predictionandobservationswithoptweight:[3,417],predictioncol:[2,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,257,258,259,260,261,267,269,270,271,272,330,331,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,379],predictleaf:[2,225,231,249,351,352,355,356,367,368],predicton:[3,401,412,464,465],predictonvalu:[3,401,412,464,465],predictor:[2,225,351,357,358],predictprob:[2,225,226,227,230,231,232,237,238,241,244,245,246,249,252,257,258],predictquantil:[2,349,350],predictraw:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252],predictsoft:[3,405],prefer:[1,2,3,5,155,192,347,451,621,813],prefersdecim:[5,588,896],prefetch:[1,5,122,567,813],prefetchpartit:[1,5,122,567],prefix:[2,3,6,332,431,986],prefixspan:[2,3,432],prefixspanmodel:3,preorder:[2,225,226,231,232,249,252,351,352,355,356,367,368],prepar:1,prepend:[2,221,222],present:[2,3,5,303,304,324,453,468,481,494,533,597,878,951],preserv:[2,5,317,324,518,531],preservespartit:[1,6,51,78,79,80,81,135,136,964,973,974,975],pretti:[5,869],prev_dat:[5,727],prevent:[3,464],previou:[3,5,6,412,413,776,991],previous:[1,172],prime:[2,298],primit:[1,5,7,588,813,896],primitivesasstr:[5,588,896],princip:[2,3,305,306,448],print:[1,2,3,5,6,55,56,61,179,183,226,232,308,352,356,371,442,443,446,448,470,471,473,475,519,523,524,541,556,905,919,979],print_row:[5,905],printabl:[1,148],printf:[5,755],printschema:[5,813],prior:[2,3,5,246,256,262,263,264,398,408,813,924],prioriti:[1,2,3,137,253,402],privat:[2,335],probabilist:[2,281,282,288],probabilitycol:[2,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,257,258,259,269],probabl:[1,2,3,5,98,221,222,225,226,227,230,231,232,237,238,239,240,241,244,245,246,249,252,256,257,258,259,266,269,299,349,350,373,398,415,448,466,467,470,494,597],probit:[2,357,358],problem:[2,3,324,394],procedur:[2,3,279,418],proceed:[5,812],process:[1,2,3,5,6,90,149,257,324,328,332,427,431,481,563,577,905,906,914,924,1002,1007],processallavail:[5,919],processingtim:[5,913,914],produc:[1,2,3,5,215,255,256,259,263,264,294,298,411,745,817],product:[1,2,3,5,34,284,294,307,337,341,347,348,420,434,439,448,451,452,453,508],productfeatur:[3,452],productid:[3,451],products_for_us:[3,452],profil:[1,149,162,183],profiler_cl:[1,149],program:[1,5,6,7,9,633,953,1000,1001],programm:[1,179],progress:[1,5,922,925],project:[2,3,5,287,305,332,431,553,554,575],propag:[1,5,7,635],properli:[1,178,179,180],properti:[1,2,3,4,5,6,9,15,28,42,137,141,145,149,154,160,161,165,174,178,179,180,182,185,189,191,208,265,410,500,517,533,538,543,552,559,560,578,579,587,607,635,639,640,645,646,647,650,652,653,920,921,922,923,925,926,927,931,953,1005],proport:[2,3,253,254,306,402],propos:[5,525,601],provid:[1,2,3,5,6,7,32,41,64,66,91,98,151,256,278,284,293,311,345,357,358,373,375,376,383,385,388,390,392,401,403,406,412,448,455,465,470,478,542,550,734,741,852,888,905,906,913,1000,1001],prune:[5,585],pseudocod:[5,813],pst:[5,759,871],pstat:1,pub:[3,454],pull:[6,1013],purpos:[1,5,149,519,577,919],put:[2,5,308,309,310,318,319,324,325,585,588,658,805,894,896],pvalu:[2,3,358,360,365,366,370,373,466,470],pvm:[1,178,179,180],py4jjavaerror:[5,641],pydoc:[5,631],pyfil:[1,149],pyrolit:[1,107,176],pyspark:[0,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],pyspark_pin_thread:[1,178,179,180],pyspark_row_field_sorting_en:[5,631],python:[1,2,3,5,102,103,104,105,107,149,167,168,169,170,171,173,176,196,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,343,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,423,426,441,472,474,476,537,585,586,588,589,592,593,595,612,621,622,631,641,813,878,905,915,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],pythonpath:149,pythonstreaminglisten:6,qds1:[2,308],qds2:[2,308],qds3:[2,308],qrdecomposit:[3,448],quadrat:[2,3,365,366,417],qualifi:[1,2,5,103,105,167,168,169,170,176,387],qualiti:[3,448],quantil:[2,5,291,292,308,312,313,349,350,494,597],quantilediscret:2,quantilediscretizerpath:[2,308],quantileprob:[2,349,350],quantilescol:[2,349,350],quarter:[5,728,811],quartil:[2,5,312,562],queri:[2,3,5,6,330,416,427,577,639,648,878,905,906,910,912,913,914,915,916,917,918,920,921,922,923,925,926,927,928,931,932,933,934,1003],query_explain:[5,919],querynam:[5,913,919,923,931,933],queue:[6,1002],queuestream:6,quickli:2,quot:[5,585,588,604,894,896],quotat:[5,585,894],quoteal:[5,604],r26:[2,298],r2adj:[2,365,366],r_i:[2,277],radian:[5,714,735,844,862,866],rais:[1,2,3,5,14,66,179,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,412,413,453,468,575,818],rand:5,randint:5,randn:5,random:[0,1,2,5,91,98,225,226,227,230,231,232,241,244,249,252,253,254,256,257,258,260,261,262,263,264,265,276,277,297,328,329,347,351,352,353,354,355,356,367,368,377,378,380,381,402,404,406,407,408,410,412,427,450,451,475,476,479,550,551,602,821,842,878],random_udf:[5,878],randomforest:3,randomforestclassifi:[2,225,249],randomforestclassificationmodel:[2,252],randomforestmodel:[3,475],randomforestregressionmodel:[2,368],randomforestregressor:[2,351,367],randomli:[1,2,5,91,247,248,298,377,378,380,381,542,634],randomrdd:3,randomsplit:[1,5],rang:[1,2,3,5,22,44,45,51,66,73,77,85,91,92,98,99,108,117,118,120,122,131,171,172,175,179,231,232,237,238,244,249,252,256,262,263,264,267,269,278,291,292,295,299,300,308,312,313,336,337,347,348,349,350,355,356,363,364,367,368,411,424,433,434,481,546,550,551,602,654,658,659,713,805,833,834,945],rangebetween:[5,654],rangeexchang:[5,546],rangefram:[5,654],rank:[2,3,5,271,347,348,359,360,371,416,451,452,494,597,736,814],ranke_path:[2,271],rankingevalu:2,rankingmetr:3,rare:[2,281,282],rate:[1,2,3,99,221,222,231,232,239,240,256,262,263,264,276,277,279,280,297,298,347,348,355,356,415,418,427,451,452,473],rather:[1,2,3,5,53,281,282,288,347,406,658,659,664,665],ratingcol:[2,347],ratio:[2,5,380,381,641],raw:[2,3,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,266,272,281,394,399],rawpredict:[2,226,230,233,237,244,245,247,252,266],rawpredictioncol:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,266],rcond:[3,446,448],rdd1:[1,61,68,91,109],rdd2:[1,68,77,91,96],rdd:[0,1,2,3,5,6,17,134,135,136,149,160,163,171,172,173,175,176,177,188,190,192,196,209,371,375,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,422,423,424,426,427,430,432,442,443,444,446,448,450,451,452,454,455,457,458,460,461,462,463,465,467,470,471,472,473,474,475,476,479,481,497,523,524,545,546,566,585,588,633,641,642,785,894,896,953,954,955,956,957,959,960,961,962,966,967,968,969,970,971,972,974,975,977,978,979,980,981,982,983,985,986,987,988,989,992,1002,1003,1009],rdd_a:[6,989],rdd_b:[6,989],rddbarrier:[1,32],re_path:[2,272],reach:[1,2,3,11,13,257,446,448],read:[1,2,5,6,32,155,157,167,168,169,170,176,188,192,205,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,383,390,491,533,585,586,588,589,590,591,592,593,594,595,612,633,646,666,894,898,899,903,997,1008,1013],readabl:[1,2,3,178,383,482],readi:[5,905],readlin:[1,152],readstream:[5,893,894,895,896,897,898,899,900,901,902,903],real:[2,3,5,233,234,283,287,308,370,418,470,471,473,475,641],reason:[5,546,759,813,871],recal:[2,3,221,222,238,239,240,270,414,415,416],recallat:[3,416],recallatk:[2,271],recallbylabel:[2,221,222,239,240,269,270],recallbythreshold:[2,221,222],receiv:[1,2,3,6,132,221,222,347,414,994,1004,1007,1013],receivererror:6,receiverstart:6,receiverstop:6,recent:[1,2,3,5,50,92,149,237,301,311,320,337,341,363,434,439,504,507,641,922,925],recentprogress:5,reciproc:[3,446,448],recogn:[3,6,441,1002],recommend:[0,1,5,35,171,330,347,348,451,452,453,585,590,591,610,611,622,658,659,664,665,759,871,894,898,899,905,908,909],recommendforallitem:[2,347,348],recommendforallus:[2,347,348],recommendforitemsubset:[2,347,348],recommendforusersubset:[2,347,348],recommendproduct:[3,452],recommendproductsforus:[3,452],recommendus:[3,452],recommendusersforproduct:[3,452],recomput:[1,2,35,324,371],record:[1,3,5,6,96,155,156,192,196,448,499,556,577,585,588,625,641,666,805,894,896,997],recordlength:[1,6,156,997],recov:5,recoverpartit:5,recreat:[6,1000,1001],recurs:[1,5,121,152,585,588,592,593,632,894,896,900,901,903],recursivefilelookup:[5,585,588,592,593,894,896,900,901,903],redistribut:[1,95],reduc:[1,2,6,36,93,94,125,161,347,982,983],reducebykei:[1,6,64,982],reducebykeyandwindow:[6,953],reducebykeyloc:1,reducebywindow:6,reducefunc:[6,982,983],reduct:[2,6,247,983],redund:[5,720],refer:[1,2,3,7,35,221,222,256,298,347,409,433,434,435,436,438,439,440,441,446,448,451],reflect:[5,924],refresh:5,refreshbypath:5,refresht:5,regener:[5,905],regex:[2,5,311,498,824,852],regexp:[5,825],regexp_extract:5,regexp_replac:5,regextoken:2,regextokenizerpath:[2,311],region:[5,6,590,591,610,611,759,871,898,899,908,909,1013],regionnam:[6,1013],regist:[1,5,166,544,633,643,736,813,823],registerdataframeast:5,registerfunct:5,registerjavafunct:5,registerjavaudaf:5,registertempt:5,registr:[5,652],regparam:[2,3,227,230,233,234,237,238,247,347,353,354,357,358,363,364,379,395,396,400,401,457,458,460,461,462,463],regress:[0,221,222,231,232,237,238,239,240,249,252,272,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,394,395,396,401,417,454,455,456,457,458,459,460,461,462,463,464,465,471,472,473,475,481],regressionevalu:2,regressionmetr:3,regtyp:[3,395,396,400,460,461],regular:[2,3,5,222,227,230,233,234,237,238,240,347,353,354,357,358,363,364,366,395,396,400,401,451,452,458,461,463,641,813,852],reimplement:[3,464],rel:[1,2,3,5,45,291,292,308,312,313,363,448,470,494,577,597,658,659,664,665,814],relat:[1,2,5,6,23,347,491,994],relationship:[2,357,358],relativeerror:[2,5,291,292,308,312,313,494,597],relativesd:[1,45],relaunch:[1,32],releas:[1,2,5,6,179,277,298,621,813,1003],relev:[2,3,5,287,312,323,416,640],reli:[5,813],reliabl:[1,5,6,69,76,536,998],remain:[2,241,244,347,348],rememb:6,remov:[1,2,3,5,35,76,127,254,256,308,312,315,317,425,514,573,631,676,683,751],remover2:[2,317],renam:[5,576,585,588,894,896],render:[5,759,871],rep:[5,825],repartit:[1,2,5,6,96,265,347,380,497,851],repartitionandsortwithinpartit:1,repartitionbyrang:5,repeat:[5,684],repeatedli:[2,311],replac:[1,2,3,5,98,291,292,371,470,505,506,520,550,551,575,583,602,679,812,825,875],replic:[1,61,76,196],report:[1,3,6,454,996],repres:[1,2,3,5,6,29,149,167,168,169,170,171,176,216,254,256,257,258,261,262,263,264,265,276,277,283,287,298,301,314,337,343,374,403,405,407,409,410,413,419,423,426,434,437,441,442,443,444,445,446,447,448,449,453,456,468,474,476,481,551,587,588,602,631,648,747,758,759,852,871,896,905,942,943,947,951,953,993],represent:[1,2,3,5,6,108,256,263,329,395,396,400,427,428,433,434,435,436,438,439,440,441,458,461,463,547,584,585,604,641,698,880,894,986],reprocess:[5,905],request:[2,5,376,494,497,597],requir:[1,2,3,5,35,45,282,309,310,319,442,443,446,467,471,473,550,563,585,606,620,622,629,813,894,905,913],rescal:[2,3,295,299,365,366,470],research:[3,427],reseri:[1,190],resettermin:[5,932],reshap:[2,3,337,403,405,407,434],residu:[2,358,359,360,364,365,366],residualdegreeoffreedom:[2,359,360],residualdegreeoffreedomnul:[2,359,360],residualstyp:[2,359,360],resili:[0,1,29],resolv:[1,5,193,518,531,570,571,572],resolvedrformula:[2,309],resourc:[0,1],resourceinform:4,respect:[3,5,6,455,888,993],respond:[1,179],respons:[2,5,359,360,905],restart:[1,5,32,920,926],restrict:[5,813],result:[1,2,3,5,6,30,31,37,38,39,41,44,46,51,53,54,57,63,64,66,75,93,94,96,97,108,118,119,120,123,175,179,220,221,222,226,232,233,237,239,240,245,248,252,253,255,256,259,267,277,287,298,303,304,318,352,356,359,360,365,366,368,370,373,402,411,416,422,425,442,448,455,466,494,497,511,525,527,535,537,545,546,562,568,585,588,592,593,597,601,620,622,631,648,658,666,707,708,750,754,755,759,762,764,777,805,808,813,837,838,852,871,887,889,894,896,900,901,903,964],resultvec:[2,283],retain:[1,5,6,52,82,925,982],retainedjob:1,retainedstag:1,retoken:[2,311],retriev:[2,3,5,258,371,416,587],returntyp:[5,813,878],reus:[1,178,179,180],revers:5,rf2:[2,252,368],rfc:[2,252],rfc_model:[2,252],rfc_path:[2,252],rformula:[2,310],rformulamodel:[2,309],rformulapath:[2,309],rfr:[2,368],rfr_model:[2,368],rfr_path:[2,368],rice:[3,454],richard:[3,454],ridg:[2,363],ridgeregressionmod:[3,462],ridgeregressionmodel:3,ridgeregressionwithsgd:[3,462],right:[1,2,3,5,6,57,66,97,225,226,231,232,249,252,351,352,355,356,367,368,446,448,449,458,461,463,508,534,556,782,831,832,840,841,859,941,985],right_out:[5,534],rightout:[5,534],rightouterjoin:[1,6],rint:5,rise:[3,470],risk:[2,3,5,365,366,417,620,622],ritz:[3,446,448],rlike:5,rmse:[2,272],rmtree:[3,394,398,399,405,407,409,411,427,452,455,457,460,462],rng:[3,450],rnlt:[5,875],robert:[3,454],robust:[2,312,363,364],robustscal:[2,313],robustscalermodel:[2,312],roc:[2,3,221,222,266,414],role:[6,1013],rollup:5,root:[1,2,3,5,195,272,315,365,366,417,446,448,541,703,813,853],rootmeansquarederror:[2,3,365,366,417],roughli:[1,20,212],round:[2,3,5,308,373,470,701,754,808],roundoff:[5,808],routin:[1,11,13],row1:[5,631,648],row2:[5,631,648],row3:[5,631,648],row:[2,3,5,231,232,233,237,245,247,253,257,258,260,262,265,276,277,278,297,298,301,303,308,309,310,311,314,318,319,320,323,324,325,326,330,332,333,335,347,348,355,356,370,371,373,375,442,443,444,445,446,447,448,458,461,463,470,492,493,499,502,508,509,512,513,514,516,518,521,522,523,526,527,530,531,534,535,539,543,550,553,554,556,557,561,563,564,565,566,567,570,571,572,575,576,577,582,585,600,618,620,623,625,626,627,628,629,630,633,641,642,644,648,654,658,659,664,665,666,667,670,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,698,701,707,708,710,711,712,713,717,718,719,720,721,722,725,726,727,728,729,730,731,732,736,740,744,745,747,748,750,751,754,755,756,757,758,759,760,761,764,765,766,769,771,772,773,774,776,777,778,779,780,781,782,783,784,788,790,801,804,805,806,808,809,810,811,813,814,816,817,819,821,822,823,824,825,826,827,829,831,833,834,835,836,837,838,839,840,841,842,846,848,849,850,851,852,857,858,859,867,868,869,870,871,875,877,878,880,881,886,887,888,889,890,903,905,906,910,913,951],row_numb:5,rowfram:[5,654],rowindic:[2,3,338,340,435,438],rowmatrix:[3,443,446],rowprint:[5,905],rowsbetween:[5,654,813],rowsperblock:[3,442,443,446],rpad:5,rsd:[5,672,673],rtrim:5,rule:[2,3,5,330,331,455,868,870],run:[1,2,3,5,6,10,14,21,158,175,177,179,184,191,205,207,247,265,276,277,297,298,324,332,377,380,401,402,431,451,465,510,526,532,548,563,624,631,638,653,914,953],runid:[5,920],runjob:1,runtim:[5,640,641,919],russian:[2,317],ryan:[3,454],ryantib:[3,454],sacrific:[1,76],safe:[1,2,5,76,213,215,226,230,232,233,237,244,245,247,252,253,257,260,262,276,279,281,289,291,295,297,299,303,305,308,309,312,315,318,323,324,328,330,347,349,352,354,356,357,361,363,368,377,380,916],sai:[5,736,823],said:[2,278,307,308],salari:[5,491],sale:[5,629],same:[1,2,3,5,6,11,13,20,131,135,136,137,152,153,167,168,169,170,173,212,213,214,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,386,402,429,442,455,470,494,547,575,584,597,606,616,631,632,674,756,757,808,813,833,834,867,869,905,906,920,953,990,997,1008,1009,1010],samelda:[2,262],samelocalmodel:[2,262],samemodel:[2,3,262,394,398,399,405,407,409,411,427,430,452,455,457,460,462],samemu:[3,405],samesigma:[3,405],sampl:[1,2,3,5,99,100,101,120,188,225,226,231,232,249,252,256,257,262,263,264,266,312,315,347,351,352,355,356,367,368,373,412,413,424,425,448,450,467,470,494,503,542,546,551,597,599,602,641,719,821,822,856,884],sample_fpgrowth:[2,330],sample_multiclass_classification_data:[2,237,247],samplebi:5,samplebykei:1,samplecol:[2,373],samplesizeperpartit:[5,546],samplestdev:1,samplevari:1,samplingratio:[5,585,588,641],sat:[5,810],satisfi:[1,6,49,118,963,982],save:[1,2,3,5,6,35,103,105,106,108,172,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,382,383,384,385,386,387,391,392,393,394,398,399,405,407,409,411,413,427,428,430,452,455,457,460,462,472,474,476,477,478,480,481,482,496,578,579,603,604,605,607,608,612,613,616,618,913,986,1013],saveabl:[3,480],saveashadoopdataset:1,saveashadoopfil:1,saveaslibsvmfil:[3,481],saveasnewapihadoopdataset:1,saveasnewapihadoopfil:1,saveaspicklefil:[1,172],saveassequencefil:1,saveast:[5,603,617],saveastextfil:[1,3,6,481],saveimpl:[2,386,387,393],savemetadata:[2,384,386],savemod:[5,609],sc2:149,scala:[1,3,5,53,118,446,448,470,477,478,495,540,573],scalabl:[2,3,265,410],scalar:[2,5,284,547,584,813],scalar_it:5,scale:[2,3,5,222,225,240,279,283,284,295,299,312,313,315,316,349,350,351,363,364,366,418,420,425,426,450,479,701,829,941],scaledoutput:[2,295,299],scaler:[2,295,299,312,315],scalerpath:[2,295,312],scalingvec:[2,284],scalingvector:[3,420],scan:[1,2,3,5,118,337,341,434,439,519,585,588,592,593,894,896,900,901,903],scenario:[1,2,32,347,348],schedul:[1,5,6,154,158,180,851,994],schema:[2,5,220,265,332,333,335,511,513,525,537,541,562,576,585,588,589,592,593,601,606,616,622,641,666,667,756,757,833,834,894,896,897,900,901,903,941,951],schema_of_csv:[5,756],schema_of_json:[5,757],scheme:[5,603,614,911],schenker:[5,525,601],scikit:[2,225,231,249,303,351,355,367],scipi:[2,3,337,341,343,434,439,441,456],scope:[2,256],score:[2,3,247,248,266,365,366,394,399,414,417],scoreandlabel:[2,3,266,269,270,271,272,414],scoreandlabelsandweight:[2,266,269,272],scoreandlabelswithoptweight:[3,414],sdf:[5,577,905,906,907,910,912,913,914,919,931,933],sdf_schema:[5,894,896,897,900,901,902],search:[0,1,2,5,77,276,277,298,379,631,859],second:[1,3,5,6,131,452,470,501,503,509,598,599,600,622,726,728,736,758,785,811,818,823,881,888,913,914,917,932,955,993,995,996,1003],secretkei:[6,1013],section:[5,519,666,667,813],secur:[6,1013],see:[1,2,3,5,6,10,21,29,134,135,136,156,159,165,178,179,180,193,196,205,256,263,264,293,308,309,332,375,383,385,427,454,458,461,463,465,485,490,491,526,562,581,596,619,624,631,654,750,777,813,893,904,915,916,920,930,953,1013],seed:[1,2,3,5,91,98,99,120,225,226,227,230,231,232,241,244,249,252,253,254,256,257,258,260,261,262,263,264,276,297,328,329,347,351,352,353,354,355,356,367,368,377,378,380,381,402,404,405,406,407,408,409,412,427,450,451,452,475,479,542,550,551,602,821,822],seen:[2,5,6,347,348,375,577,905,992],select:[2,3,5,230,244,253,257,260,276,278,279,280,297,314,318,327,328,330,333,347,370,375,377,378,379,380,381,418,490,491,493,498,504,505,506,507,508,534,544,551,554,562,569,575,577,602,632,633,642,648,666,667,670,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,698,701,705,710,711,712,720,721,725,726,727,728,729,730,731,732,740,744,745,747,748,751,754,755,756,757,758,759,760,761,764,765,766,769,771,772,773,774,778,780,781,782,783,784,785,788,790,792,793,795,796,797,798,801,804,805,806,808,809,810,812,813,816,817,819,824,825,826,827,829,831,833,834,835,836,837,838,839,840,841,842,846,848,849,850,851,852,857,858,859,867,868,869,870,871,875,877,878,880,881,886,887,888,889,890],selectedfeatur:[2,279,280],selectexpr:5,selector:[2,3,279,280,418,419],selectortyp:[2,3,279,280,418],self:[1,2,5,10,21,29,34,37,57,72,75,97,114,115,134,193,196,205,215,226,230,232,233,237,244,245,247,252,253,257,260,262,265,266,267,269,270,271,272,275,276,278,279,281,283,284,287,288,289,291,293,294,295,297,299,301,302,303,305,307,308,309,311,312,314,315,317,318,320,323,324,326,327,328,330,332,344,347,349,352,354,356,357,361,363,368,377,380,485,490,491,581,596,619,631,654,893,904,905,915,916,930,953],semant:[1,5,631],semi:[5,534],send:[1,2,93,94,149,347],sensit:[2,5,245,246,317,347,375,859],sent:[1,2,27,157,328],sentenc:[2,3,5,328,329,427,769],sep:[5,585,604,711,833,894],separ:[2,3,5,301,343,377,394,399,441,481,585,588,604,608,618,629,643,711,894,896,903],seqfunc:[1,31],seqop:[1,30,124],sequenc:[1,2,3,5,6,64,107,213,215,221,222,226,230,232,233,237,239,240,244,245,247,252,253,257,260,262,276,279,281,288,289,291,295,297,299,303,305,308,309,312,315,318,324,328,330,332,347,349,352,354,356,357,361,362,363,368,377,380,402,404,406,421,431,432,547,584,736,823,953],sequencecol:[2,332],sequencefil:[1,106,167,168,169,170],sequencefileoutputformat:[1,103,105],sequenti:[1,2,3,5,53,213,215,226,230,232,233,237,244,245,247,252,253,257,260,262,276,279,281,289,291,295,297,299,303,305,308,309,312,315,318,324,328,330,332,347,349,352,354,356,357,361,363,368,377,380,431,454,736,823,830],sequential_pattern_min:[2,332],sequncefil:[1,176],serd:[5,636],seri:[5,813],serial:[1,5,61,106,149,176,190,196,905],serializ:[2,5,384,386,905],servic:[6,1013],session:[2,5,6,382,384,386,387,391,393,590,591,610,611,635,643,758,759,871,881,898,899,908,909,925,1013],set:[1,2,3,5,6,13,15,35,41,76,88,89,137,142,143,144,145,146,147,149,152,156,165,173,175,177,178,179,180,181,182,208,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,377,378,379,380,381,382,384,386,387,388,391,393,394,399,401,404,406,408,412,413,416,418,421,423,425,427,429,431,446,448,449,458,461,463,465,467,475,479,493,494,496,540,553,554,556,570,571,572,585,588,590,591,592,593,597,604,608,610,611,612,613,615,618,619,631,634,635,637,638,640,666,679,708,734,741,750,758,762,777,795,808,836,881,894,896,898,899,900,901,903,905,906,908,909,913,914,917,923,932,982,998,1003],setaggregationdepth:[2,233,237,257,349,357,363],setal:1,setalpha:[2,347],setappnam:[1,137],setbandwidth:[3,467],setbeta:[2,269],setbinari:[2,3,281,282,288,421],setblocks:[2,244,347,348],setbootstrap:[2,252,368],setbucketlength:[2,276],setcachenodeid:[2,226,232,252,352,356,368],setcasesensit:[2,317],setcategoricalcol:[2,287],setcensorcol:[2,349],setcheckpointdir:[1,5,35,76,496],setcheckpointinterv:[2,226,232,252,262,347,352,356,368],setclassifi:[2,247],setcoldstartstrategi:[2,347,348],setcollectsubmodel:[2,377,380],setconf:5,setcurrentdatabas:5,setdecayfactor:[3,412],setdegre:[2,307],setdistancemeasur:[2,253,260,267],setdocconcentr:[2,262],setdroplast:[2,303,304],setdstcol:[2,265],setelasticnetparam:[2,237,363],setep:[2,269],setepsilon:[2,363],setestim:[2,377,380],setestimatorparammap:[2,377,380],setevalu:[2,377,380],setexecutorenv:1,setfactors:[2,230,354],setfamili:[2,237,357],setfdr:[2,3,279,418],setfeatureindex:[2,361,362],setfeaturescol:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,267,279,280,309,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368],setfeaturesubsetstrategi:[2,232,252,356,368],setfinalstoragelevel:[2,347],setfitintercept:[2,230,233,237,349,354,357,363],setfitlinear:[2,230,354],setforceindexlabel:[2,309],setformula:[2,309],setfpr:[2,3,279,418],setfw:[2,3,279,418],setgap:[2,311],sethalflif:[3,412],sethandleinvalid:[2,278,303,304,308,309,318,319,323,324,326],setifmiss:1,setimplicitpref:[2,347],setimpur:[2,226,232,252,352,356,368],setindic:[2,327],setinitialcent:[3,412],setinitialweight:[2,3,244,401,465],setinitmod:[2,260,265],setinitstd:[2,230,354],setinitstep:[2,260],setinputcol:[2,220,275,276,277,278,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,312,313,315,316,317,318,319,320,323,324,325,326,327,328,329],setintermediatestoragelevel:[2,347],setinvers:[2,283],setisoton:[2,361],setitemcol:[2,347,348],setitemscol:[2,330,331],setjobdescript:1,setjobgroup:[1,159],setk:[2,3,253,257,260,262,265,271,305,412],setkeeplastcheckpoint:[2,262],setlabel:[2,293],setlabelcol:[2,226,230,232,233,237,244,245,247,252,266,269,270,271,272,279,309,349,352,354,356,357,361,363,368],setlay:[2,244],setleafcol:[2,225,226,231,232,249,252,351,352,355,356,367,368],setlearningdecai:[2,262],setlearningoffset:[2,262],setlearningr:[3,427],setlink:[2,357],setlinkpow:[2,357],setlinkpredictioncol:[2,357,358],setlocal:[2,317],setlocalproperti:[1,165],setloglevel:1,setloss:[2,363],setlosstyp:[2,232,356],setlow:[2,312],setlowerboundsoncoeffici:[2,237],setlowerboundsonintercept:[2,237],setmast:[1,137],setmax:[2,299,300],setmaxbin:[2,226,232,252,352,356,368],setmaxcategori:[2,324],setmaxdepth:[2,226,232,252,352,356,368],setmaxdf:[2,281],setmaxit:[2,230,232,233,237,244,253,257,260,262,265,328,347,349,354,356,357,363],setmaxlocalprojdbs:[2,332],setmaxmemoryinmb:[2,226,232,252,352,356,368],setmaxpatternlength:[2,332],setmaxsentencelength:[2,328],setmetriclabel:[2,269,270],setmetricnam:[2,266,267,269,270,271,272],setmin:[2,299,300],setminconfid:[2,330,331],setmincount:[2,3,328,427],setmindf:[2,281],setmindivisibleclusters:[2,253],setmindocfreq:[2,289],setminibatchfract:[2,230,354],setmininfogain:[2,226,232,252,352,356,368],setmininstancespernod:[2,226,232,252,352,356,368],setminsupport:[2,330,332],setmintf:[2,281,282],setmintokenlength:[2,311],setminweightfractionpernod:[2,226,232,252,352,356,368],setmissingvalu:[2,291],setmodeltyp:[2,245],setn:[2,301],setnam:[1,2,327],setnonneg:[2,347],setnumbin:[2,266],setnumblock:[2,347],setnumbucket:[2,308],setnumbucketsarrai:[2,308],setnumfeatur:[2,287,288],setnumfold:[2,377],setnumhasht:[2,276,297],setnumitemblock:[2,347],setnumiter:[3,427],setnumpartit:[2,3,328,330,427],setnumtopfeatur:[2,3,279,418],setnumtre:[2,252,368],setnumuserblock:[2,347],setoffsetcol:[2,357],setoptim:[2,262],setoptimizedocconcentr:[2,262],setoutputcol:[2,220,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,311,312,313,315,316,317,318,319,320,323,324,325,327,328,329],setp:[2,302],setparallel:[2,247,377,380],setparam:[2,215,226,230,232,233,237,244,245,247,252,253,257,260,262,265,266,267,269,270,271,272,275,276,278,279,281,283,284,287,288,289,291,293,294,295,297,299,301,302,303,305,307,308,309,311,312,314,315,317,318,320,323,324,326,327,328,330,332,347,349,352,354,356,357,361,363,368,377,380],setpattern:[2,311],setpercentil:[2,3,279,418],setpredictioncol:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,257,258,260,261,267,269,270,271,272,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368],setprobabilitycol:[2,225,226,227,230,231,232,237,238,241,244,245,246,249,252,257,258,269],setquantileprob:[2,349,350],setquantilescol:[2,349,350],setrandomcent:[3,412],setrank:[2,347],setratingcol:[2,347],setrawpredictioncol:[2,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,266],setregparam:[2,230,233,237,347,354,357,363],setrelativeerror:[2,291,308,312],setsampl:[3,467],setscalingvec:[2,284],setse:[2,3,226,230,232,244,252,253,256,257,260,262,263,264,276,297,328,347,352,354,356,368,377,380,427],setselectortyp:[2,3,279,418],setsequencecol:[2,332],setsiz:[2,326],setsmooth:[2,245],setsolv:[2,230,244,354,357,363],setsparkhom:1,setsplit:[2,278],setsplitsarrai:[2,278],setsrccol:[2,265],setstag:[2,215],setstandard:[2,233,237,363],setstat:[2,314],setsteps:[2,230,232,244,328,354,356],setstopword:[2,317],setstrategi:[2,291],setstringindexerordertyp:[2,309],setstringordertyp:[2,318],setsubsamplingr:[2,232,252,262,356,368],setsystemproperti:1,setter:[1,3,137,426],setthreshold:[2,3,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,275,394,399],setthroughorigin:[2,272],settol:[2,230,233,237,244,257,260,349,354,357,363],settolowercas:[2,311],settopicconcentr:[2,262],settopicdistributioncol:[2,256,262,263,264],settrainratio:[2,380],setup:[6,1000,1001],setupfunc:[6,1000,1001],setupp:[2,312],setupperboundsoncoeffici:[2,237],setupperboundsonintercept:[2,237],setusercol:[2,347,348],setvalidationindicatorcol:[2,232,356],setvariancecol:[2,351,352],setvariancepow:[2,357],setvectors:[2,3,328,427],setvocabs:[2,281],setweightcol:[2,226,232,233,237,245,247,252,253,257,260,265,266,269,272,352,356,357,361,363,368],setwindows:[2,3,328,427],setwithcent:[2,312],setwithmean:[2,3,315,426],setwithsc:[2,312],setwithstd:[2,3,315,426],sever:[5,577],sgd:[3,396,400,458,461,463],sha1:5,sha2:5,sha:[5,837,838],shallow:[2,213,214,219,220,268,345,381],shape:[2,3,237,238,363,364,448,450],share:[1,3,5,7,20,149,212,442,643],shell:[1,90],shift:[2,5,295,759,839,840,841,871],shiftleft:5,shiftright:5,shiftrightunsign:5,ship:1,shortcut:[2,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,383,385,390,392],shorten:[5,604,608,612,613,618],shorthand:[5,492,523,524],shorttyp:5,should:[1,2,3,5,6,22,30,38,39,53,118,119,120,122,123,149,178,179,180,193,213,214,219,220,225,226,227,230,231,232,237,238,241,244,245,246,249,252,256,257,258,262,263,264,265,266,267,268,269,270,271,272,278,287,288,289,290,291,308,324,335,345,347,349,350,351,352,353,354,355,356,359,360,361,362,367,368,376,386,387,393,395,396,400,410,412,422,427,458,461,463,466,467,471,473,475,480,509,526,527,537,547,567,568,584,585,588,590,591,592,593,600,603,604,608,610,611,617,618,620,622,631,641,759,763,795,809,813,852,871,894,896,898,899,900,901,903,905,908,909,951,1003],shouldn:[3,470],show:[1,2,5,230,244,245,262,265,275,276,277,278,281,291,294,295,297,298,299,308,309,317,323,328,330,332,349,354,375,498,510,511,514,516,518,520,528,531,537,545,546,547,548,551,558,562,569,572,582,583,584,602,621,622,658,659,705,744,745,762,763,792,793,795,796,797,798,812,813,816,817,878],show_profil:1,shown:[5,634],shrink:[2,3,231,232,355,356,473],shuffl:[1,3,5,36,68,95,448,497,620,622,707,708,750,777],shut:[1,187],shutil:[3,394,398,399,405,407,409,411,427,452,455,457,460,462],si3:[2,226],si_model3:[2,226],si_model:[2,226,232,252],side:[1,2,3,5,176,196,360,365,366,373,458,461,463,508,534,813,878,941],sigma:[2,3,245,246,405,450,468],sigmoid:[2,244],sign:[5,840,938,944,945,948],signatur:[10,21,29,134,193,196,205,485,490,491,581,596,619,631,654,893,904,915,916,930,953],signifi:[5,905],signum:5,silent:[5,604,607,608,609,612,613,615,616],silhouett:[2,267],sim:[3,411,448],similar:[1,2,3,5,6,13,265,276,279,328,329,380,410,411,418,446,448,497,603,614,911,970],similarli:[1,2,57,93,94,287],simpl:[2,3,5,215,287,288,341,383,385,439,519,905,950],simplestr:[5,641,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],simpli:[2,3,5,343,441,520,547,583,584],simplic:[5,813],sin:[3,5,411],sinc:[1,2,3,5,196,245,275,278,287,288,299,308,317,323,324,386,443,470,546,585,666,667,757,894,932],sine:[5,693,844,845],singl:[1,2,3,5,6,41,64,66,149,155,167,168,169,170,173,176,192,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,370,371,373,377,378,380,381,394,399,402,448,454,470,474,476,494,527,533,585,588,597,604,620,644,710,711,751,894,896,903,905,938,943,951,959,962,980,983],single_col_model:[2,303],single_col_oh:[2,303],singleton:[1,166],singular:[3,446,448,449],singularvaluedecomposit:[3,446,448],sinh:5,sink:[5,910,913,924],sit:[5,782],site:5,size:[1,2,3,5,98,106,120,149,225,226,227,230,231,232,237,238,241,244,249,252,254,255,256,258,259,261,263,264,281,282,323,326,328,329,330,331,332,341,343,347,348,351,352,353,354,355,356,367,368,401,408,409,416,427,431,439,441,442,446,448,450,465,537,546,852],sizehint:[2,326],skew:[5,620,622],skinni:[3,448],skip:[1,2,3,5,76,137,278,308,309,310,318,319,323,324,325,326,427,585,594,604,761,780,894,902],sklearn:[2,255],sleep:[1,179],slen:[5,813,878],slice:[2,5,6,327,858],slicer:[2,327],slide:[5,6,659,961,970,982,983,992,1010],slidedur:[5,6,888,961,962,970,982,983,990,992],slow:[1,77],slower:[2,6,375,982],small:[1,2,3,5,38,39,118,119,120,123,155,192,225,226,231,232,249,252,351,352,355,356,363,367,368,427,470,527,568,700],smaller:[1,2,3,45,188,192,277,287,298,402,427,446,448],smallest:[3,448],smirnov:[2,3,373,470],smooth:[2,3,245,246,397],snappi:[5,604,608,612,613,618],sock_fil:[1,22],socket:[6,953,1004],sockettextstream:6,soft:[3,408],softlib:[3,454],softmax:[2,3,237,244,427],softpredict:[3,405],sole:[2,220],solv:[2,3,347,451,458,461,463],solver:[2,227,230,241,244,353,354,357,358,360,363,364,365,366],some:[1,2,3,5,53,139,179,196,213,214,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,409,442,448,450,481,494,528,575,577,594,597,633,635,813,902,905,910,913],someth:[1,154],somewhat:[1,53],sort:[1,2,3,5,34,37,41,46,47,48,51,54,57,62,63,64,65,66,72,73,75,77,78,93,94,95,96,97,106,108,110,111,114,115,123,172,190,192,265,281,318,319,330,332,343,347,371,409,411,430,432,441,452,455,470,481,493,504,505,506,507,526,531,534,539,544,546,558,569,617,620,625,631,651,658,659,685,689,690,691,737,738,739,849],sort_arrai:5,sort_columns_asc:[5,569],sortbi:[1,5],sortbykei:[1,77],sorted_bucketed_t:[5,617],sortwithinpartit:5,soundex:5,sourc:[1,2,3,4,5,6,7,8,10,11,13,14,16,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,155,156,157,158,159,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,186,187,188,190,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,485,490,491,492,493,494,495,496,497,498,499,501,502,503,504,505,506,507,508,509,510,511,512,513,514,516,518,519,520,521,522,523,524,525,526,527,528,530,531,532,533,534,535,536,540,541,542,544,545,546,547,548,550,551,553,554,556,557,558,561,562,563,564,565,566,567,569,570,571,572,573,575,576,577,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,623,625,626,627,628,629,630,631,632,633,641,642,643,644,648,649,651,654,656,657,658,659,662,663,664,665,666,667,670,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,698,700,701,705,710,711,712,713,717,718,719,720,721,723,724,725,726,727,728,729,730,731,732,734,740,741,744,745,747,748,750,751,754,755,756,757,758,759,760,761,762,763,764,765,766,769,770,771,772,773,774,776,777,778,779,780,781,782,784,785,788,790,792,793,795,796,797,798,801,804,805,806,808,809,810,811,812,813,816,817,819,821,822,824,825,826,827,829,831,833,834,835,836,837,838,839,840,841,842,846,848,849,850,851,852,857,858,859,867,868,869,870,871,875,877,878,880,881,886,887,888,889,890,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,924,928,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1006,1007,1008,1009,1010,1013],space:[1,2,3,5,45,66,276,287,297,301,305,306,307,320,424,427,494,597,781,791,832,876],spade:[5,667],span:[5,585,588,894,896],spanish:[2,317],spark:[1,2,3,5,6,7,29,32,76,102,103,104,105,106,122,132,133,134,137,147,149,152,154,178,179,180,182,185,188,191,192,221,222,226,230,232,237,244,245,247,252,253,257,260,262,265,266,267,269,270,271,272,275,276,278,279,281,283,284,287,288,289,291,294,295,297,299,301,302,303,305,307,308,309,311,312,314,315,317,318,320,323,324,326,327,328,330,333,347,349,352,354,356,357,361,363,365,366,368,370,371,373,377,380,382,384,386,387,391,393,402,480,481,482,491,498,504,505,506,507,518,531,532,537,544,546,550,567,568,569,572,577,585,586,587,588,589,590,591,592,593,594,595,607,610,611,612,613,615,621,622,629,631,633,634,635,638,640,641,644,648,651,653,666,667,670,675,676,677,678,679,680,681,682,683,684,685,686,687,688,701,705,707,708,710,711,712,713,718,719,720,725,726,727,728,729,730,731,732,740,744,745,748,751,754,755,756,757,758,759,760,761,764,765,766,769,770,771,772,773,774,778,780,781,782,784,788,790,792,793,795,796,797,798,801,804,806,808,809,810,812,813,816,817,819,824,825,826,827,829,831,833,834,835,836,837,839,840,841,842,846,848,849,850,852,858,859,867,868,869,870,871,875,877,878,880,881,886,888,889,890,893,894,895,896,897,898,899,900,901,902,903,905,908,909,913,920,923,925,931,933,934,953,993,994,1013],spark_cor:[5,812],spark_partition_id:5,spark_sql:[5,812],spark_us:[1,5,184,783],sparkconf:[1,5,149,166,635],sparkcontext:[0,1,2,3,5,6,7,20,22,35,42,67,76,103,105,193,194,195,212,225,226,231,232,249,252,256,262,263,264,282,319,347,351,352,355,356,367,368,382,384,386,387,391,393,405,409,450,496,633,640,642,643,649,658,659,993,1007],sparkexcept:[1,11,13],sparkfil:[1,152],sparkhom:[1,149],sparkjobinfo:1,sparksess:[0,2,5,382,384,386,387,391,393,491,506,507,544,893,912],sparkstageinfo:1,sparkui:[1,189],sparkus:1,sparkvers:[2,386],spars:[2,3,226,230,232,237,245,247,252,276,297,299,302,303,305,333,337,338,340,341,343,349,352,354,356,361,363,368,422,425,434,435,438,439,441,442,448,456,481],sparse1:[2,3,337,434],sparse_data:[3,394,398,399,407,471,473,475],sparsematrix:[2,3,237,336,338,433,435,442,481],sparsevector:[2,3,226,232,252,262,287,288,297,302,303,337,343,352,356,368,394,398,399,407,409,418,421,422,434,441,456,457,460,462,471,473,475,481],sparsiti:[2,295,324,325],spearman:[2,3,371,470],spearmancorr:[2,3,371,470],special:[1,2,5,278,308,309,310,318,319,324,325,384,386,658,659,664,665,726,813,878],specif:[1,2,3,4,5,196,245,347,446,448,470,485,491,562,813,824],specifi:[1,2,3,5,6,23,40,88,89,92,93,98,99,102,103,104,105,119,127,156,159,175,221,222,239,240,257,262,277,278,281,282,287,293,298,301,303,308,311,320,324,327,335,357,363,371,373,379,382,384,386,387,391,393,442,470,480,482,497,498,503,510,513,516,519,520,526,528,535,539,540,545,546,547,548,550,551,557,558,562,565,577,582,583,584,585,586,587,588,592,593,594,595,599,602,603,604,605,606,607,608,609,612,613,614,615,616,618,622,629,637,644,651,658,659,664,665,666,667,726,728,744,745,756,757,760,762,791,812,813,816,817,824,825,832,848,853,868,870,876,877,888,894,895,896,900,901,902,905,907,910,911,912,913,923,977,1003],spectral:[2,265],speed:[2,5,225,226,231,232,249,252,351,352,355,356,367,368,494,594,597,902],spip:[1,32],split:[1,2,3,5,91,156,176,225,226,231,232,249,252,278,308,311,320,328,330,351,352,355,356,367,368,377,380,381,402,421,427,471,473,475,481,519,542,587,813],split_expand:[5,813],splitindex:[1,80,81],splitsarrai:[2,278],spy:[5,520,583],sql:[0,1,2,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,375,377,378,380,381,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],sql_ctx:[5,491,915],sqlconf:[5,643],sqlcontext:[3,5,452,551,602,658,659,931,932,933],sqlqueri:[5,648],sqltran:[2,314],sqltransform:2,sqltransformerpath:[2,314],sqm:[5,931],sqrt:[2,3,5,231,232,249,252,355,356,357,358,367,368,450,475,768],squar:[2,3,5,254,255,267,272,279,315,337,341,343,347,355,356,359,360,363,364,365,366,370,403,407,413,417,418,419,434,439,441,446,448,451,452,457,458,460,461,462,463,466,470,853],squared_dist:[2,3,337,341,343,434,439,441],squarederror:[2,363,364],squaredeuclidean:[2,267],src:[2,5,265,812],srccol:[2,5,265,875],ssc:[6,953,1013],sss:[5,585,588,604,608,894,896],stabil:[2,324],stabl:[2,245,276],stack:[2,3,241,244,347,348,442],stackoverflowexcept:[5,575],stacktrac:929,stage:[1,2,10,11,13,14,16,19,32,134,135,136,211,215,216,326],stageid:1,stai:[5,497],stamp:[5,881],standalon:[5,638,813,878],standard:[1,2,3,5,100,113,227,230,233,234,237,238,315,316,353,354,360,363,364,365,366,373,375,422,425,426,450,518,531,570,571,588,641,822,855,856,896],standardscal:[2,3,316,426],standardscalarmodel:[3,425],standardscalermodel:[2,3,315],standardscalerpath:[2,315],start:[1,2,3,5,6,173,179,185,189,253,402,404,453,468,533,644,658,659,664,665,670,725,727,729,784,812,830,836,848,858,888,903,905,912,919,920,923,926,931,933,993,997,999,1000,1008,1013],start_job:[1,179],startpo:5,startswith:5,starttim:[1,5,888],stat:[0,1,5,162,183,370,371,373,374,375,376,450,454,466,467,468,469,470],statcount:[1,112],state:[1,5,6,45,514,577,813,991],statement:[2,5,314],statist:[2,3,5,231,245,249,257,299,312,315,355,359,360,365,366,367,370,373,375,376,425,448,466,469,511,519,559,562,596],statu:[1,5],statustrack:1,std:[2,3,5,315,316,375,425,426,450,621,622],stddev:[5,511,562],stddev_pop:5,stddev_samp:[5,854],stdev:[1,3,450],stdout:[1,183],steinbach:[2,3,253,402],step:[1,2,3,5,76,173,227,230,231,232,241,244,253,260,261,328,329,353,354,355,356,396,400,401,402,406,457,458,460,461,462,463,465,470,497,594,644,836,902],stepsiz:[2,3,227,230,231,232,241,244,328,329,353,354,355,356,401,465],still:[5,577,622],stkm:[3,413],stochast:[2,3,232,401,458,461,463,465],stop:[1,2,3,5,6,149,179,231,232,317,355,356,406,453,468,836,913,917,919,929,931,932,933,993,995,996,999,1000],stop_job:[1,179],stopgracefulli:[6,1007],stopsparkcontext:[6,1007],stopword:[2,317],stopwordremov:[2,317],stopwordsremov:2,stopwordsremoverpath:[2,317],storag:[1,2,3,5,6,33,61,76,89,196,332,337,431,434,442,495,540,560,578,579,893,904,905,954,978,1004,1013],storagelevel:[1,2,3,5,6,61,89,347,442,540,978,1004,1013],store:[2,3,5,6,248,256,264,277,298,312,340,345,348,382,383,385,405,409,425,438,443,444,446,448,471,473,475,481,536,585,588,846,893,896,904,998,1004,1013],str:[1,2,3,5,45,83,86,106,123,188,192,266,267,269,270,271,272,309,318,335,371,470,494,534,589,597,747,771,784,785,813,824,825,852,858,859,903,905],strata:[5,551,602],strategi:[2,247,291,292,347,348],stratifi:[1,5,99,551,602],stratum:[5,551,602],stream:[0,1,2,3,326,401,465,514,533,578,579,646],streaming_queri:[5,912],streamingcontext:[0,6,953,958,1013],streamingkmean:3,streamingkmeansmodel:[3,412],streaminglinearalgorithm:3,streaminglinearregressionwithsgd:3,streaminglisten:[6,994],streaminglogisticregressionwithsgd:3,streamingqueri:[5,533,650,912,929,930],streamingqueryexcept:[5,917,918,932],streamingquerymanag:[5,650],streamingqueryprogress:[5,922,925],streamingstart:6,streamlib:[1,45],streamnam:[6,1013],strength:[2,347],strictli:[2,3,278,448],stride:[5,587],string:[1,2,3,4,5,6,108,188,192,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,345,346,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,371,373,377,378,380,381,427,434,439,441,470,485,493,494,498,511,513,517,519,520,521,525,526,534,537,541,547,553,556,562,565,566,575,576,577,583,584,585,586,588,589,590,591,593,594,595,597,601,604,605,608,610,611,615,616,618,620,622,623,627,628,630,633,635,641,666,667,674,692,697,698,710,711,712,721,726,734,741,747,754,755,756,757,758,759,760,770,771,774,781,782,784,789,790,791,792,801,813,824,825,826,827,831,832,833,834,837,838,850,852,857,858,859,867,869,871,875,876,878,879,881,882,888,894,895,896,897,898,899,902,903,907,908,909,913,914,949,950,951,986],string_col:[5,813],string_column:[5,813],stringifi:[3,441],stringinddf:[2,318],stringindex:[2,226,232,252,293,303,309,310,319],stringindexermodel:[2,318],stringindexerordertyp:[2,309,310],stringindexerpath:[2,318],stringlengthint:5,stringlengthstr:5,stringnum:[2,287],stringordertyp:[2,318,319],stringtyp:[5,552,641,757,765,784,878,951],strlen:5,strongli:[1,5,35,905],struct1:[5,951],struct2:[5,951],struct:[2,5,335,588,641,688,796,813,833,834,867,869,888,896,951],struct_col:[5,813],struct_column:[5,813],structfield:[2,5,333,552,641,757,951],structtyp:[2,5,335,552,585,588,589,594,622,641,757,813,867,869,894,896,897,902,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952],structur:[2,5,263,376,751],stsassumerolearn:[6,1013],stsexternalid:[6,1013],stssessionnam:[6,1013],sturct:[5,813],style:[5,570,571,572,588,755,896],sub:[2,3,377,380,442],subarrai:[2,327],subclass:[2,213,214,219,220,268,345,386,387,393],submit:[1,6,180],submodel:[2,378,381],subnam:[5,587,607],subpackag:0,subprotocol:[5,587,607],subsamplingr:[2,231,232,249,252,256,262,263,264,355,356,367,368],subsequ:[1,5,12,152,153,206,917,932],subset:[1,2,3,5,98,99,120,309,327,451,475,514,515,516,520,547,550,582,583,584],subsetaccuraci:[2,270],substanti:[2,287],substr:[5,771,784,825,859],substring_index:5,subsystem:[5,536],subtract:[1,3,5,6,442,982,983],subtractbykei:1,successfulli:[5,905],suffici:[2,213,214,219,220,268,345],suffix:[6,986],suggest:[1,2,124,125,231,233,234,237,238,249,257,258,349,350,355,357,358,363,364,367],suit:[5,667],suitabl:[5,587],sum:[1,2,3,5,64,79,80,81,85,91,117,225,231,249,254,255,258,265,303,307,351,355,359,360,367,375,403,405,407,410,413,416,424,470,474,476,542,620,622,629,658,659,762,763,861,888],sum_func:[5,622],sum_udf:5,sumapprox:1,sumdistinct:5,summar:[2,376],summari:[2,3,5,238,240,253,254,257,258,260,261,299,315,358,364,366,375,376,388,425,448,469,470,494,511,597],summarybuild:[2,375],sun:[5,810],suppli:[2,3,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,420,442],support:[1,2,3,5,7,65,137,149,152,153,155,167,169,176,188,190,192,225,226,227,230,231,232,233,237,238,241,244,245,246,249,252,253,254,256,260,261,262,263,264,265,266,267,268,269,270,271,272,279,280,291,309,310,314,317,318,319,330,331,332,335,337,347,348,351,352,353,354,355,356,357,358,359,360,361,363,364,367,368,371,373,395,396,399,400,408,418,422,429,431,434,442,454,461,470,471,473,475,481,494,501,525,585,588,590,591,597,598,601,604,608,610,611,612,613,615,618,636,757,759,813,869,871,878,888,894,896,898,899,906,908,909,913,941],supportedfeaturesubsetstrategi:[2,3,231,232,249,252,355,356,367,368,475],supportedimpur:[2,225,226,231,232,249,252,351,352,355,356,367,368],supportedlosstyp:[2,231,232,355,356],suppos:[2,265],suppress:[1,179],sure:[6,1013],surrog:[2,292],surrogatedf:[2,291,292],survei:[2,276],surviv:[2,349],svd:[3,449],svd_model:[3,446,448],svec:[2,302],svm2:[2,233],svm:[2,3,233,234,399],svm_model:[2,233],svm_path:[2,233],svmmodel:3,svmwithsgd:[3,399],swedish:[2,317],sym:[3,427],symbol:[2,5,357,667],symmetr:[2,3,265,410],sync:[1,178,179,180],synchron:[5,924],synonym:[3,427,428],syntax:[2,5,314,569,585,588,590,591,592,593,894,896,900,901,903],sys:[5,658,664,665],system:[1,3,5,6,76,102,103,104,105,107,137,149,155,167,169,176,182,188,192,404,406,408,451,475,481,514,587,589,603,604,607,608,612,613,614,615,617,618,758,893,897,904,905,906,911,913,994,997,1008],tab:[5,588,896],tabl:[2,5,276,277,297,298,314,491,504,506,507,509,544,587,600,606,607,609,616,633,639,643],table1:[5,648,651],tablenam:[5,595,606,651],tag:[5,585,588,755,894,896],tail:5,take:[1,2,3,5,137,220,225,227,231,234,238,241,246,249,283,293,294,307,308,324,325,327,345,373,395,425,442,446,452,471,473,475,497,532,537,569,585,621,622,759,761,780,783,785,813,852,871,878,894,905],taken:[2,323,359,360],takeord:1,takesampl:1,tall:[3,448],tallskinnyqr:[3,448],tan:5,tangent:[5,694,862,863],tanh:5,tapia:[3,454],target:[1,2,3,5,179,291,292,308,312,313,337,434,494,497,545,546,597],task:[1,2,5,7,10,11,12,13,14,16,17,18,19,20,21,32,44,134,135,136,153,161,179,205,206,207,209,210,211,212,231,232,249,252,330,355,356,367,368,770,851,905],taskattemptid:1,taskcontext:[1,10],tbl:5,tcp:[6,953,1004],td3:[2,226],techniqu:[2,3,253,402],technometr:[3,454],temp_path:[2,3,226,232,233,237,244,245,247,252,253,257,260,262,265,266,267,269,270,271,272,275,276,278,279,281,283,284,287,288,289,291,294,295,297,299,301,302,303,305,307,308,309,311,312,314,315,317,318,320,323,324,326,327,328,347,349,352,356,357,361,363,368,430],tempdir:[1,152,188,190,192],tempfil:[1,2,3,5,108,377,380,394,398,399,405,407,409,411,427,452,455,457,460,462,481,604,605,608,609,612,613,614,615,894,896,897,900,901,903],tempfile2:[1,108],tempfile3:[1,108],temporari:[5,504,505,506,507,544,643],temporarili:[2,301,311,320],temptablealreadyexistsexcept:[5,504,507],ten:[5,785],term:[1,2,3,8,227,230,233,234,237,238,256,262,263,264,281,282,288,289,290,309,310,349,350,353,354,357,358,363,364,408,409,421,422,423,457,462,479],termin:[2,3,5,6,222,240,366,396,400,401,458,461,463,465,914,917,918,932,934,993],termindic:[2,262],terminolog:[2,3,262,409],termweight:[2,262],test0:[2,226,230,232,233,237,245,247,252,352,354,356,361,363,368],test1:[2,226,232,237,245,247,252,352,356,363,368],test2:[2,149,247],test:[1,2,3,5,22,71,137,149,152,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,370,373,377,378,380,381,405,409,418,448,466,470,924],test_support:[5,585,586,588,589,592,593,595,612],testdata:[2,318],testdf:[2,244],testfil:[1,152,188,190],testset:[3,452],text1:[2,317],text2:[2,317],text:[1,2,3,5,6,103,105,108,167,168,169,170,176,188,190,192,262,301,311,317,320,330,402,409,427,481,608,895,986,1008],text_sdf:[5,903],textfil:[1,5,190,192,585,588],textfilestream:6,textinputformat:[1,167,168,169,170],tfidf:[3,422],tha:[2,375],than:[1,2,3,5,6,30,31,45,53,132,188,192,225,226,231,232,241,244,245,249,252,253,257,275,277,281,282,287,288,298,301,308,328,329,330,331,332,347,348,351,352,355,356,367,368,394,399,402,406,416,423,427,431,442,446,448,452,455,470,494,497,509,514,516,525,527,556,577,582,585,588,597,600,601,658,659,664,665,751,776,779,805,808,810,836,852,878,894,896,982,983],that_queri:[5,913],thei:[1,2,3,5,91,237,238,287,308,375,415,442,519,536,542,590,591,610,611,641,679,759,871,898,899,908,909],them:[1,2,3,5,6,190,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,343,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,384,402,441,455,481,510,526,548,562,588,687,813,896,932,997,1002,1003,1008],theoret:[2,3,257,373,470],therefor:[3,5,455,536,575,585,813,905],theta:[2,3,5,245,246,256,262,263,264,398,408,411,695],thi:[1,2,3,5,6,7,8,11,12,13,14,16,17,19,20,23,27,30,31,32,33,34,35,38,39,40,42,43,47,48,50,51,52,53,55,56,58,66,67,68,69,71,73,76,77,78,79,80,81,82,83,84,86,87,89,91,92,93,94,95,97,98,99,100,101,103,105,106,107,108,109,110,111,113,116,118,119,120,121,122,123,124,125,126,129,131,132,133,134,137,138,152,153,165,167,168,169,170,175,176,178,179,180,181,182,189,190,191,206,207,209,211,212,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,337,341,343,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,375,376,377,378,379,380,381,383,384,385,386,387,388,390,392,393,394,395,397,398,399,401,403,405,406,407,409,410,411,413,416,418,422,428,430,431,433,434,435,436,438,439,440,441,442,443,446,448,452,454,455,456,457,458,459,460,461,462,463,465,470,472,474,475,476,478,481,482,494,496,497,502,504,505,506,507,511,512,513,516,518,519,523,524,525,527,530,531,533,534,536,540,542,544,546,550,552,554,561,562,567,568,570,571,572,575,576,577,582,585,587,588,592,593,597,601,604,607,608,609,612,613,615,616,618,620,621,622,624,631,635,637,640,650,653,658,659,664,665,736,759,761,776,779,780,785,805,811,813,823,851,871,893,894,896,900,901,903,904,905,906,912,914,915,917,920,921,922,923,924,925,926,928,931,932,933,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,954,955,956,958,959,960,961,962,964,965,966,967,968,970,971,972,974,975,976,978,979,980,982,983,985,986,988,989,990,991,992,1003,1005,1013],thin:5,third:[5,736,811,823],this_queri:[5,913,931,933],those:[1,2,3,5,11,53,179,245,256,448],though:[5,585,894],thread:[1,2,5,6,149,165,178,179,180,213,215,226,230,232,233,237,244,245,247,252,253,257,260,262,276,279,281,289,291,295,297,299,303,305,308,309,312,315,318,324,328,330,347,349,352,354,356,357,361,363,368,377,380,642,916,993],three:[1,5,6,41,736,813,823,852,989],thresh:[5,516,582],threshold:[2,3,221,222,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,275,277,278,279,281,282,298,324,325,328,329,355,356,394,399,406,418,448],through:[1,2,3,5,22,52,76,82,131,149,193,194,195,225,272,295,351,357,478,585,588,631,639,640,894,896],throughorigin:[2,272],thrown:[2,5,238,254,258,261,275,278,308,317,358,364,388,641,917,932],thu:[1,2,3,5,30,31,279,287,295,418,577,594,810,902],tibshirani:[2,3,231,249,355,367,454],tie:[5,736,823],tied:[5,504,505,506,507,544],ties:[5,736,823],time:[1,2,3,5,6,12,54,89,98,137,179,185,206,281,282,328,329,330,331,332,347,348,349,404,406,408,427,431,451,475,540,575,577,590,591,610,611,633,684,758,759,808,826,852,871,878,881,888,898,899,908,909,910,913,914,920,953,955,988,989,992,993,995,996,1002,1003],time_df:[5,758,881],timecolumn:[5,888],timeout:[1,5,6,11,13,44,85,117,917,932,995,996],timestamp:[2,5,386,577,585,587,588,590,591,604,608,610,611,724,726,728,758,759,870,871,881,888,894,896,898,899,908,909,952],timestampformat:[5,585,588,604,608,894,896],timestamptyp:[5,724,813,870,888],timeunit:[3,412,413],timezon:[5,590,591,610,611,758,759,871,881,898,899,908,909],tinyint:[5,641],tip:[6,1013],tmp2:[1,111],tmp:[1,110,111],tmpfile:[1,106,172],tmptabl:[5,595],to_arrow_typ:[5,813],to_avro:[5,666],to_csv:5,to_dat:5,to_json:5,to_list:[1,41],to_profil:1,to_replac:[5,547,584],to_str:5,to_timestamp:5,to_upp:[5,813,878],to_utc_timestamp:5,toarrai:[2,3,257,336,337,339,340,341,342,374,415,433,434,436,438,439,440,448,468],tobas:[5,712],toblockmatrix:[3,443,446],toboolean:[2,346],tocoordinatematrix:[3,442,446],todebugstr:[1,2,3,225,226,231,232,249,351,352,355,367,471,472,474,475,476],todegre:[5,735],todens:[2,3,340,438],todf:[2,5,233,237,245,247,265,332,375,514,633,805,888],todo:[2,324],tofloat:[2,346],togeth:[1,2,3,5,32,134,135,136,179,253,402,416,442,537,622,710,711],toggl:[2,281,282],toimag:[2,335],toindexedrowmatrix:[3,442,443],toint:[2,346],tointern:[5,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],tointernald:[5,950],tojson:5,token:[2,3,5,256,262,281,282,311,328,329,409,427,585,894],tokenizerpath:[2,320],tol:[2,227,230,233,234,237,238,241,244,257,258,260,261,349,350,353,354,357,358,363,364],toler:[1,2,3,6,76,108,227,230,233,234,237,238,241,244,257,258,260,261,349,350,353,354,357,358,363,364,395,998],tolist:[2,3,346,448],tolistfloat:[2,346],tolistint:[2,346],tolistlistfloat:[2,346],toliststr:[2,346],toloc:[2,256,262],tolocaliter:[1,5],tolocalmatrix:[3,442],tolowercas:[2,311],tom:[2,5,298,508,520,534,547,583,584],tomatrix:[2,346],tondarrai:[2,335],too:[2,5,225,226,231,232,249,252,308,351,352,355,356,367,368,514,587,607,620,622],tool:[1,2,10,375],top:[1,2,3,5,103,105,256,263,264,279,305,330,348,418,452,641],topanda:[5,641],topic:[2,3,256,262,263,264,408,409],topicconcentr:[2,3,256,262,263,264,408],topicdistribut:[2,262],topicdistributioncol:[2,256,262,263,264],topics_expect:[3,409],topicsmatrix:[2,3,256,262,263,264,409],toplevelrecord:[5,666],toradian:[5,820],torowmatrix:[3,443,446],tospars:[2,3,336,433],tostr:[1,2,176,346],total:[1,2,3,5,98,221,222,225,226,231,232,238,239,240,244,249,252,253,259,351,352,355,356,367,368,402,407,413,415,422,470,474,476,550,941],totaliter:[2,222,240,366],totalnumnod:[2,3,231,232,249,355,367,473,474,475,476],tovector:[2,346],tpr:[2,221,222],tr96640:[3,454],trace:[1,2,181,240,366],traceback:[1,2,3,5,50,92,149,237,301,311,320,337,341,363,434,439,504,507,641],track:[1,2,5,80,81,136,378,577],trade:[3,448],trail:[5,585,604,781,894],train:[2,3,221,222,225,226,227,231,232,233,234,237,238,239,240,241,246,247,248,249,252,254,255,256,258,259,261,262,263,264,305,312,315,328,347,348,350,351,352,353,355,356,358,360,362,363,364,366,367,368,377,380,381,388,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,425,427,429,430,431,432,451,452,454,455,457,458,460,461,462,463,465,471,473,474,475,476],trainclassifi:[3,471,473,475],trainer:[2,244],trainimplicit:[3,451,452],trainingcost:[2,253,255,260],trainingloglikelihood:[2,256],trainingsummari:[2,238,358,364],trainon:[3,401,412,465],trainratio:[2,380,381],trainregressor:[3,471,473,475],trainvalidationsplit:2,trainvalidationsplitmodel:[2,380],trait:[2,3,383,385,469],transact:[3,5,429,905],transaction:[5,905,906],transfer:[5,813],transform:[2,3,5,6,214,215,216,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,377,378,379,380,381,384,386,412,418,419,420,421,422,423,424,425,426,427,428,448,450,472,474,476,482,953,993],transformfunc:[6,1009],transformschema:[2,220],transformwith:6,translat:[1,5,118,629,769],transpos:[3,442,443],treat:[2,3,5,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,257,258,260,261,265,266,269,272,278,287,291,297,303,325,351,352,355,356,357,358,361,362,363,364,367,368,370,418,446,448,455,470,551,602],tree:[0,1,2,5,124,125,225,226,231,232,249,252,351,352,355,356,367,368,471,472,473,474,475,476,541],treeaggreg:[1,2,233,234,237,238,257,258,349,350,357,358,363,364],treeboost:[2,232],treeensemblemodel:[3,473,475],treereduc:1,treeweight:[2,231,232,249,252,355,356,367,368],tri:[2,5,231,232,355,356,585],triangular:[3,437,448],trick:[2,3,287,288,421],trigger:[1,5,132,133,514,906,913],trim:[5,791,832],trim_horizon:[6,1013],trosset:[3,454],truepositiver:[3,415],truepositiveratebylabel:[2,221,222,239,240,269],trunc:5,truncat:[1,2,3,5,76,265,278,281,330,332,375,410,416,496,536,556,728,792,877],trust:[6,1013],truth:[3,416],tue:[5,810],tumbl:[5,888],tune:[0,377,378,379,380,381],tup:[5,658,659],tupl:[1,2,3,5,37,65,66,72,73,74,128,213,215,226,230,232,233,237,244,245,247,252,253,257,260,262,276,279,281,289,291,295,297,299,303,305,308,309,312,315,318,324,328,330,343,347,349,352,354,356,357,361,363,368,374,377,380,408,410,441,443,445,446,447,451,453,454,466,468,494,525,597,601,622,631,641,813,905],turkish:[2,317],turn:[1,2,5,41,375,566,585,632,894],tvalu:[2,360,365,366],tvs:[2,380],tvsmodel:[2,380],tvsmodelread:[2,380],tweedi:[2,357,358],two:[1,2,3,5,6,20,30,31,41,66,131,212,221,222,258,267,270,271,277,287,288,298,329,331,335,337,343,347,348,360,363,365,366,373,434,441,442,448,451,455,470,501,519,598,622,629,632,751,782,795,805,852,905,988,989],twobthreec:[5,852],txt:[1,2,5,152,188,190,192,237,247,330],type:[0,1,2,3,4,6,7,10,21,29,30,31,41,103,105,107,134,151,193,196,205,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,341,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,367,368,370,373,377,378,380,381,383,384,385,386,395,396,400,402,404,406,418,439,441,446,448,461,466,481,485,490,491,517,520,521,537,547,552,581,583,584,585,587,588,589,594,596,604,608,618,619,622,631,641,644,654,658,666,667,674,757,765,784,813,858,867,868,869,870,878,888,893,894,896,897,902,904,915,916,930,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,1010,1013],typeconvert:[2,344],typeerror:[2,3,237,301,311,320,363,470],typenam:[5,641,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],typic:[2,287,347],u0000:[5,604],u612:[5,850],udf:[5,620,621,622,643,813],udfregistr:[5,652,813],uhrbach:[5,850],uid:[2,213,214,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,386],uiweburl:1,unarytransform:2,unbase64:5,unbias:[2,5,315,856,884],unbound:[5,654,658,659,664,665],unboundedfollow:[5,654,658,659,664,665],unboundedpreced:[5,654,658,659,664,665],uncach:5,uncachet:5,uncensor:[2,349,350],unchang:[2,325],uncompress:[5,613],undefin:[2,3,5,215,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,335,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,455,666],undefinedimagetyp:[2,335],under:[1,2,3,5,177,221,222,237,238,318,319,412,414,481,585],underflow:[5,768],underli:[2,3,5,263,314,337,378,381,382,384,386,387,391,393,434,442,590,591,594,605,610,611,639,640,647,649,898,899,902,907,908,909],understand:[1,32],unhex:5,unicod:[1,5,6,188,192,641],unifi:[6,990,1010],uniform:[3,450,470],uniformli:[5,821],uniformrdd:[3,450],uniformvectorrdd:[3,450],union:[1,5,6,545,571,572,686,792],unional:5,unionbynam:5,uniqu:[1,2,3,5,6,20,47,67,133,154,212,324,348,389,408,443,547,584,805,905,912,913,920,923,926,1013],unit:[1,2,3,5,137,179,277,302,315,316,424,425,426,728,877],unitari:[2,283],univari:[2,3,361,454],unix:[5,758,759,871,881],unix_tim:[5,758,881],unix_timestamp:[5,6,987],unknown:[2,3,5,225,227,231,234,238,241,246,249,324,347,348,350,351,353,355,358,362,364,367,443,446,448,520,583],unless:[2,5,317,744,745,808,816,817],unlik:[5,745,817],unlimit:[5,149,585,894],unmatch:[5,887],unnam:[5,631],unnecessari:[5,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952],unord:[5,793,797,798],unpars:[5,756,757],unpersist:[1,3,5,22,414],unpredict:[3,442],unquot:[5,588,896],unseen:[2,318,319,324,325],unset:[2,5,237,238,758,881],unsign:[5,841],unspecifi:[3,481],unsupport:[5,867,869],until:[1,2,3,5,11,13,23,27,127,179,222,240,253,257,366,402,442,924,932],updat:[1,2,3,5,6,7,347,395,401,412,413,446,448,465,577,910,913,922,925,951,991,1013],updatefunc:[6,991],updatestatebykei:6,upon:[2,232,324],upper:[2,3,5,237,238,256,263,264,279,280,299,300,308,312,313,437,448,659,769,805,813,878],upperbound:[5,587],upperboundsoncoeffici:[2,237,238],upperboundsonintercept:[2,237,238],upstream:[1,5,15,208,497],uri:[1,3,152,153,155,167,169,176,188,192,481],url:[1,5,6,146,149,189,587,607,638,1013],usabl:[1,9],usag:[1,2,3,5,275,278,324,471,473,475,568,641],use:[1,2,3,5,6,22,40,76,81,118,137,149,152,161,179,196,205,231,232,247,249,252,256,260,261,265,277,279,287,288,298,301,311,320,324,325,332,337,343,347,355,356,367,368,371,376,377,380,382,384,386,387,391,393,395,396,400,401,410,428,429,434,441,450,451,458,461,463,465,470,491,514,544,570,571,572,575,577,590,591,604,608,610,611,612,613,618,621,622,633,635,641,658,659,664,665,672,673,700,756,757,759,813,865,866,871,898,899,905,908,909,945,1004,1013],use_unicod:[1,5,188,192,566],used:[1,2,3,5,6,23,27,31,38,39,45,66,76,83,86,89,106,107,118,119,120,123,137,149,151,176,196,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,363,364,367,368,373,377,378,379,380,381,394,395,396,397,399,400,401,408,412,413,414,416,422,423,424,425,426,427,429,431,450,451,455,458,461,463,465,470,471,472,473,474,475,476,480,481,482,496,506,507,527,536,540,544,545,546,547,568,577,584,585,587,588,590,591,604,608,610,611,615,616,618,631,633,634,641,644,645,646,654,658,726,755,813,878,893,894,896,898,899,903,904,905,906,908,909,913,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,956,967,971,972,985,993,1000,1001,1013],usedisk:[1,196],useful:[1,2,3,5,76,179,262,281,282,288,347,348,481,496,536,622,813],usememori:[1,196],useoffheap:[1,196],user:[1,2,3,4,5,7,14,22,41,76,102,103,104,105,137,160,161,181,184,193,207,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,341,343,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,375,376,377,378,380,381,382,384,386,387,391,393,439,441,451,452,453,485,577,585,587,588,607,620,621,622,636,639,640,658,659,664,665,667,813,878,894,896,915,923,932],user_product:[3,452],user_rec:[2,347],user_subset:[2,347],user_subset_rec:[2,347],usercol:[2,347,348],userfactor:[2,347,348],userfeatur:[3,452],userid:[3,451],users_for_product:[3,452],uses:[1,2,3,5,6,95,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,401,418,426,448,465,546,585,588,604,608,612,613,618,894,896,1013],using:[1,2,3,5,6,7,30,31,41,53,54,64,66,76,88,92,93,94,95,99,102,103,104,105,107,108,151,172,190,213,214,215,219,220,225,226,230,232,233,237,244,245,247,252,253,256,257,260,262,263,264,265,267,268,276,279,281,287,288,289,291,292,295,297,299,302,303,305,307,308,309,311,312,315,318,323,324,328,330,343,345,347,349,351,352,354,356,357,361,363,365,366,368,370,371,375,377,380,384,394,395,396,399,400,402,404,406,410,418,421,424,425,430,441,454,458,461,463,470,474,476,477,480,481,482,491,505,510,521,526,533,534,536,537,544,548,577,585,588,622,631,635,641,658,659,664,665,679,701,711,734,736,741,813,823,829,868,870,881,889,894,896,905,906,953,977,982,983,986,993,1000,1004,1013],usual:[2,365,366],utc:[5,590,591,610,611,758,759,871,888,898,899,908,909],utc_tim:[5,871],utf8:[6,1004],utf8_decod:[6,1013],utf:[1,5,6,108,188,192,585,588,604,608,618,734,741,894,896,903,1008],util:[0,5,382,383,384,385,386,387,388,389,390,391,392,393,455,477,478,479,480,481,482,654],val:[5,888],valid:[1,2,3,5,6,181,220,231,232,267,333,347,348,355,356,357,363,364,377,378,380,381,395,396,400,442,458,461,463,585,637,888,894,1000,1013],validatedata:[3,395,396,400,457,458,460,461,462,463],validateinputtyp:[2,220],validationind:[2,232,356],validationindicatorcol:[2,231,232,355,356],validationmetr:[2,380,381],validationtol:[2,231,232,355,356],vals1:[5,688],vals2:[5,688],valu:[1,2,3,5,6,7,8,18,22,24,30,31,37,39,45,47,52,53,54,64,66,76,77,82,89,90,93,94,102,103,104,105,107,111,114,115,131,137,139,140,141,142,143,144,145,146,147,148,151,155,157,167,168,169,170,173,176,178,179,180,182,192,210,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,336,337,338,340,341,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,373,375,376,377,378,379,380,381,383,385,394,395,396,397,399,400,401,402,405,406,416,417,418,421,426,429,433,434,435,438,439,441,442,443,446,447,448,449,451,453,455,457,460,461,462,464,465,468,470,471,473,474,475,476,481,494,501,503,509,516,520,537,538,546,547,556,577,582,583,584,585,587,588,590,591,592,593,597,598,599,600,604,607,608,610,611,612,613,618,620,622,623,626,627,628,629,631,632,633,635,640,641,644,658,659,664,665,666,667,668,675,676,679,680,681,682,688,690,691,692,696,698,701,703,704,720,721,722,726,738,739,740,743,744,745,746,748,750,752,754,755,756,757,759,761,765,775,776,777,779,780,783,786,787,791,795,798,800,801,802,803,810,811,813,816,817,818,825,828,829,832,838,839,840,841,843,845,847,852,853,860,861,862,863,867,869,871,878,883,884,887,893,894,896,898,899,900,901,903,904,905,908,909,935,941,945,946,960,965,976,982,983,991,1013],value12:[5,760,774],value1:[1,3,5,481,721,760,774],value2:[1,3,5,481,721,760,774],valueclass:[1,103,105,167,168,169,170,176],valuecontainsnul:[5,946],valueconvert:[1,102,103,104,105,167,168,169,170,176],valueerror:[1,5,50,92,149,453,468],values1:[2,275,278],values2:[2,275,278],valuetyp:[5,946],var_pop:5,var_samp:[5,885],vari:[1,3,66,401,465],variabl:[1,2,3,5,7,21,22,23,99,144,149,157,225,227,230,307,351,353,354,422,427,457,460,462,631],varianc:[1,2,3,5,101,112,225,231,232,246,272,306,315,351,352,355,356,357,358,365,366,367,368,373,375,417,425,426,448,469,470,471,475,479,883,884],variancecol:[2,351,352],variancepow:[2,357,358],variant:[2,5,260,261,554,813,889],variat:[2,5,365,366,494,597],variou:[1,2,5,6,137,375,491,993],vec:[2,3,283,333,427,441],vecassembl:[2,323,326],vecassembler2:[2,323],vector:[1,2,3,5,221,222,225,226,227,230,231,232,233,237,238,239,240,244,245,247,249,252,253,256,257,258,260,262,263,264,265,266,267,275,276,277,279,281,282,283,284,287,288,289,290,294,295,296,297,298,299,302,303,305,306,307,312,315,323,324,325,326,327,328,329,333,337,341,346,347,349,351,352,353,354,355,356,357,361,362,363,365,366,367,368,370,371,374,375,376,377,380,397,398,399,400,401,402,404,405,406,408,409,410,419,420,421,422,423,424,425,426,427,428,434,439,445,446,448,449,450,456,457,459,460,462,465,468,470,472,479,481,813],vector_to_arrai:2,vectorassembl:[2,326],vectorassemblerpath:[2,323],vectorindex:[2,325],vectorindexermodel:[2,324],vectorindexerpath:[2,324],vectors:[2,3,328,329,427],vectorsizehint:[2,323],vectorsizehintpath:[2,326],vectorslic:2,vectorslicerpath:[2,327],vectortransform:3,vectorudt:[2,370],veri:[1,2,3,5,265,324,410,494,563,597],verifi:[5,641],verifyschema:[5,641],verlag:[3,454],version:[1,2,3,4,5,10,11,13,16,21,23,32,40,44,127,134,135,136,148,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,333,335,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437,438,439,441,442,443,446,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,471,472,473,474,475,476,477,478,479,480,481,482,485,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,550,551,552,553,554,556,557,558,559,560,561,562,563,564,566,567,568,569,570,571,572,573,574,575,576,577,578,579,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,654,656,657,658,659,662,663,664,665,666,667,668,669,670,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,725,726,727,728,729,730,731,732,734,735,736,737,738,739,740,741,743,744,745,746,747,748,750,751,752,754,755,756,757,758,759,760,761,762,763,764,765,766,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,795,796,797,798,800,801,802,803,804,805,806,808,809,810,811,812,813,814,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,865,866,867,868,869,870,871,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,916,917,918,919,920,921,922,923,924,925,926,927,928,930,931,932,933,934],vertex:[2,3,265,410],vertic:[2,5,265,556],very_expensive_initi:[5,813],via:[1,2,5,99,176,262,303,324,575,587,607,666,813],view:[5,504,505,506,507,643],viewnam:5,violat:[2,3,361,454],vocabs:[2,3,256,262,263,264,281,282,409],vocabulari:[2,3,256,262,263,264,281,282,328,329,408,409,427],wai:[1,2,5,173,227,230,287,330,353,354,905],wait:[1,5,6,13,577,917,919,932,934,993,995,996,1007],want:[2,3,5,6,307,481,622,913,982],warin:[3,416],warn:[1,2,3,5,181,231,249,256,263,264,324,355,367,377,380,409,416,631],watermark:[5,514,577],weak:1,web:[1,5,149,179,634],wed:[5,810],week:[5,728,731,810,886,888],weekofyear:5,weibul:[2,349],weighcol:[2,253,260],weight:[1,2,3,5,91,221,222,225,226,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,263,264,265,266,269,272,284,351,352,355,356,357,358,361,362,363,364,365,366,367,368,375,376,394,395,396,399,400,401,405,409,412,413,414,415,417,420,454,457,458,459,460,461,462,463,465,479,542],weightag:[3,412],weightcol:[2,221,222,225,226,231,232,233,234,237,238,245,246,247,248,249,252,253,254,257,258,260,261,265,266,269,272,351,352,355,356,357,358,361,362,363,364,365,366,367,368,375,376],weightedfalsepositiver:[2,3,221,222,239,240,269,415],weightedfmeasur:[2,3,221,222,239,240,269,415],weightedprecis:[2,3,221,222,239,240,269,415],weightedrecal:[2,3,221,222,239,240,269,415],weightedtruepositiver:[2,3,221,222,239,240,269,415],well:[1,2,3,37,137,225,226,227,230,231,232,237,238,241,244,245,246,249,252,257,258,269,443,446],were:[2,5,294,736,823,910,913,922],what:[1,137],whatev:[5,497],when:[1,2,3,5,6,40,70,98,108,132,160,161,178,179,180,185,215,231,232,247,249,252,256,263,264,275,277,278,279,287,298,301,303,308,309,310,317,318,319,355,356,363,364,365,366,367,368,377,380,401,416,418,425,442,465,470,481,519,533,546,547,577,584,585,587,588,604,607,608,609,612,613,615,616,618,622,640,641,654,658,701,726,736,750,756,757,777,813,823,829,858,859,875,894,896,905,906,915,920,941,1000,1013],where:[1,2,3,4,5,6,32,34,66,72,133,135,147,149,155,179,192,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,398,405,408,409,413,422,446,448,452,481,485,496,521,536,585,587,604,631,633,888,894,932,991,998],wherea:[2,5,232,621,641],whether:[1,2,3,5,23,27,69,71,90,127,137,196,213,214,215,216,219,220,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,345,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,388,395,396,400,426,446,448,454,455,458,461,463,496,536,585,588,592,593,604,608,637,762,894,896,900,901,917,921,932,935,946,950,951],which:[1,2,3,5,6,41,54,58,66,76,95,100,101,111,133,134,137,156,168,170,177,178,179,180,188,191,192,205,213,214,215,216,219,220,221,222,225,226,227,230,231,232,233,234,237,238,239,240,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,377,378,380,381,395,396,397,400,404,405,406,408,410,412,413,417,422,423,426,427,441,443,446,448,454,455,458,461,463,470,477,479,480,481,482,494,496,511,525,536,542,575,577,585,588,597,601,622,631,634,639,640,641,653,688,707,708,750,759,765,777,778,810,813,838,852,869,871,888,894,896,905,907,914,951,953,959,960,961,962,968,970,974,975,977,980,982,983,988,989,992,993,1005,1009],white:[1,2,111,320],whitespac:[5,585,604,894],who:[1,76,184],whole:[5,585,588,813,894,896],wholetext:[5,903],wholetextfil:1,whose:[1,2,3,5,111,269,270,277,279,298,386,398,418,427,446,448,449,903],width:[2,5,6,335,790,831,961,970,982,983,992],wiki:[2,245,287,332],wikipedia:[2,3,221,222,245,265,283,287,297,307,332,365,366,454],window:[2,3,5,6,328,329,427,577,664,665,722,736,776,779,811,813,814,823,830,953,961,962,970,982,983],windowdur:[5,6,888,961,962,970,982,983,992],windows:[2,3,328,329,427],windowspec:[5,656,657,658,659],wise:[2,3,5,265,279,280,284,298,375,410,418,448,470,509,600],wish:[1,6,76,1003],withcent:[2,312,313],withcolumn:[5,658,659,783,813,821,822],withcolumnrenam:5,within:[1,2,3,5,6,20,31,32,44,62,67,85,96,117,132,212,241,244,267,308,347,348,406,423,426,448,472,474,476,659,722,736,805,814,823,830,917,932,997,1008],withmean:[2,3,315,316,425,426],without:[1,2,3,5,6,52,82,98,231,232,326,330,355,356,470,492,519,532,551,602,629,677,678,686,736,759,768,871,965,976],withreplac:[1,5,98,99,120,550],withscal:[2,312,313],withstd:[2,3,315,316,425,426],withwatermark:[5,514],won:[1,133],word2vec:[2,3,329,428],word2vecmodel:[2,3,328,427],word2vecpath:[2,328],word:[2,3,5,256,262,263,264,281,282,284,288,301,311,317,320,328,329,408,409,427,428,633,769,905],words1:[2,317],words2:[2,317],work:[1,2,3,5,118,178,179,180,343,359,360,441,519,581,710,813],workaround:[5,813,878],worker:[1,2,6,7,14,147,149,207,330,1013],workshop:[3,402],world:[1,188,190],would:[1,2,3,4,5,66,137,253,294,303,375,402,485,585,659,736,805,823,894,905],wrap:[1,5,134,135,136,641,813,915],wrapper:[2,3,5,225,226,227,230,231,232,233,234,237,238,241,244,245,246,249,252,253,254,256,257,258,260,261,262,263,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,332,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,445,447],writabl:[1,2,103,105,107,167,168,169,170,176,385],write:[1,2,3,5,137,152,188,190,192,215,216,225,226,227,230,231,232,233,234,237,238,241,244,245,246,247,248,249,252,253,254,256,257,258,260,261,262,264,265,266,267,269,270,271,272,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,330,331,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,367,368,377,378,380,381,385,386,392,481,603,604,605,608,609,610,611,612,613,614,615,617,618,904,905,906,908,909],writer:[5,905,906,907,910,912,914],writestream:[5,904,905,906,907,910,912,913,914,919,923,931,933],written:[1,5,6,76,107,604,910,913,997],wrong:[2,326],wrong_kei:[5,631],wrriten:[6,1008],www:[3,5,410,454,631],x00:[5,666,667],x02:[5,667],x04:[5,666],x0cspade:[5,667],x_t:[3,413],xmean:[3,479],xml:5,xor:5,xrang:[1,171],xvarianc:[3,479],xxhash64:5,xxhash:[5,889],xxx:[5,585,588,604,608,894,896],yarn:[1,154],year:[5,589,593,595,603,614,617,629,726,728,732,877],yes:[5,637],yet:[1,2,5,89,265,332,540],yield:[1,5,79,80,81,537,813],you:[1,2,3,5,6,11,13,64,76,95,137,149,151,178,179,180,192,254,256,481,497,514,585,590,591,610,611,635,736,823,894,898,899,905,908,909,913,982],your:[1,5,6,66,149,497,587,607,878,905,1013],yyi:[5,726],yyyi:[5,585,588,604,608,726,728,758,868,870,877,881,894,896],zero:[1,2,3,5,30,31,53,256,262,263,264,283,287,288,297,299,303,337,341,343,375,413,416,421,424,426,434,439,441,442,446,448,470,481,494,509,551,588,597,600,602,682,740,771,781,784,858,896],zerovalu:[1,30,31,53,54,124],zip:[1,3,5,73,77,132,133,149,150,153,405,688,713,718,719],zipwithindex:[1,133],zipwithuniqueid:1,zlib:[5,612],zone:[5,590,591,610,611,758,759,871,898,899,908,909],zstd:[5,613]},titles:["Welcome to Spark Python API Docs!","pyspark package","pyspark.ml package","pyspark.mllib package","pyspark.resource module","pyspark.sql module","pyspark.streaming module","pyspark.Accumulator","pyspark.Accumulator.add","pyspark.Accumulator.value","pyspark.BarrierTaskContext","pyspark.BarrierTaskContext.allGather","pyspark.BarrierTaskContext.attemptNumber","pyspark.BarrierTaskContext.barrier","pyspark.BarrierTaskContext.get","pyspark.BarrierTaskContext.getLocalProperty","pyspark.BarrierTaskContext.getTaskInfos","pyspark.BarrierTaskContext.partitionId","pyspark.BarrierTaskContext.resources","pyspark.BarrierTaskContext.stageId","pyspark.BarrierTaskContext.taskAttemptId","pyspark.BarrierTaskInfo","pyspark.Broadcast","pyspark.Broadcast.destroy","pyspark.Broadcast.dump","pyspark.Broadcast.load","pyspark.Broadcast.load_from_path","pyspark.Broadcast.unpersist","pyspark.Broadcast.value","pyspark.RDD","pyspark.RDD.aggregate","pyspark.RDD.aggregateByKey","pyspark.RDD.barrier","pyspark.RDD.cache","pyspark.RDD.cartesian","pyspark.RDD.checkpoint","pyspark.RDD.coalesce","pyspark.RDD.cogroup","pyspark.RDD.collect","pyspark.RDD.collectAsMap","pyspark.RDD.collectWithJobGroup","pyspark.RDD.combineByKey","pyspark.RDD.context","pyspark.RDD.count","pyspark.RDD.countApprox","pyspark.RDD.countApproxDistinct","pyspark.RDD.countByKey","pyspark.RDD.countByValue","pyspark.RDD.distinct","pyspark.RDD.filter","pyspark.RDD.first","pyspark.RDD.flatMap","pyspark.RDD.flatMapValues","pyspark.RDD.fold","pyspark.RDD.foldByKey","pyspark.RDD.foreach","pyspark.RDD.foreachPartition","pyspark.RDD.fullOuterJoin","pyspark.RDD.getCheckpointFile","pyspark.RDD.getNumPartitions","pyspark.RDD.getResourceProfile","pyspark.RDD.getStorageLevel","pyspark.RDD.glom","pyspark.RDD.groupBy","pyspark.RDD.groupByKey","pyspark.RDD.groupWith","pyspark.RDD.histogram","pyspark.RDD.id","pyspark.RDD.intersection","pyspark.RDD.isCheckpointed","pyspark.RDD.isEmpty","pyspark.RDD.isLocallyCheckpointed","pyspark.RDD.join","pyspark.RDD.keyBy","pyspark.RDD.keys","pyspark.RDD.leftOuterJoin","pyspark.RDD.localCheckpoint","pyspark.RDD.lookup","pyspark.RDD.map","pyspark.RDD.mapPartitions","pyspark.RDD.mapPartitionsWithIndex","pyspark.RDD.mapPartitionsWithSplit","pyspark.RDD.mapValues","pyspark.RDD.max","pyspark.RDD.mean","pyspark.RDD.meanApprox","pyspark.RDD.min","pyspark.RDD.name","pyspark.RDD.partitionBy","pyspark.RDD.persist","pyspark.RDD.pipe","pyspark.RDD.randomSplit","pyspark.RDD.reduce","pyspark.RDD.reduceByKey","pyspark.RDD.reduceByKeyLocally","pyspark.RDD.repartition","pyspark.RDD.repartitionAndSortWithinPartitions","pyspark.RDD.rightOuterJoin","pyspark.RDD.sample","pyspark.RDD.sampleByKey","pyspark.RDD.sampleStdev","pyspark.RDD.sampleVariance","pyspark.RDD.saveAsHadoopDataset","pyspark.RDD.saveAsHadoopFile","pyspark.RDD.saveAsNewAPIHadoopDataset","pyspark.RDD.saveAsNewAPIHadoopFile","pyspark.RDD.saveAsPickleFile","pyspark.RDD.saveAsSequenceFile","pyspark.RDD.saveAsTextFile","pyspark.RDD.setName","pyspark.RDD.sortBy","pyspark.RDD.sortByKey","pyspark.RDD.stats","pyspark.RDD.stdev","pyspark.RDD.subtract","pyspark.RDD.subtractByKey","pyspark.RDD.sum","pyspark.RDD.sumApprox","pyspark.RDD.take","pyspark.RDD.takeOrdered","pyspark.RDD.takeSample","pyspark.RDD.toDebugString","pyspark.RDD.toLocalIterator","pyspark.RDD.top","pyspark.RDD.treeAggregate","pyspark.RDD.treeReduce","pyspark.RDD.union","pyspark.RDD.unpersist","pyspark.RDD.values","pyspark.RDD.variance","pyspark.RDD.withResources","pyspark.RDD.zip","pyspark.RDD.zipWithIndex","pyspark.RDD.zipWithUniqueId","pyspark.RDDBarrier","pyspark.RDDBarrier.mapPartitions","pyspark.RDDBarrier.mapPartitionsWithIndex","pyspark.SparkConf","pyspark.SparkConf.contains","pyspark.SparkConf.get","pyspark.SparkConf.getAll","pyspark.SparkConf.set","pyspark.SparkConf.setAll","pyspark.SparkConf.setAppName","pyspark.SparkConf.setExecutorEnv","pyspark.SparkConf.setIfMissing","pyspark.SparkConf.setMaster","pyspark.SparkConf.setSparkHome","pyspark.SparkConf.toDebugString","pyspark.SparkContext","pyspark.SparkContext.PACKAGE_EXTENSIONS","pyspark.SparkContext.accumulator","pyspark.SparkContext.addFile","pyspark.SparkContext.addPyFile","pyspark.SparkContext.applicationId","pyspark.SparkContext.binaryFiles","pyspark.SparkContext.binaryRecords","pyspark.SparkContext.broadcast","pyspark.SparkContext.cancelAllJobs","pyspark.SparkContext.cancelJobGroup","pyspark.SparkContext.defaultMinPartitions","pyspark.SparkContext.defaultParallelism","pyspark.SparkContext.dump_profiles","pyspark.SparkContext.emptyRDD","pyspark.SparkContext.getConf","pyspark.SparkContext.getLocalProperty","pyspark.SparkContext.getOrCreate","pyspark.SparkContext.hadoopFile","pyspark.SparkContext.hadoopRDD","pyspark.SparkContext.newAPIHadoopFile","pyspark.SparkContext.newAPIHadoopRDD","pyspark.SparkContext.parallelize","pyspark.SparkContext.pickleFile","pyspark.SparkContext.range","pyspark.SparkContext.resources","pyspark.SparkContext.runJob","pyspark.SparkContext.sequenceFile","pyspark.SparkContext.setCheckpointDir","pyspark.SparkContext.setJobDescription","pyspark.SparkContext.setJobGroup","pyspark.SparkContext.setLocalProperty","pyspark.SparkContext.setLogLevel","pyspark.SparkContext.setSystemProperty","pyspark.SparkContext.show_profiles","pyspark.SparkContext.sparkUser","pyspark.SparkContext.startTime","pyspark.SparkContext.statusTracker","pyspark.SparkContext.stop","pyspark.SparkContext.textFile","pyspark.SparkContext.uiWebUrl","pyspark.SparkContext.union","pyspark.SparkContext.version","pyspark.SparkContext.wholeTextFiles","pyspark.SparkFiles","pyspark.SparkFiles.get","pyspark.SparkFiles.getRootDirectory","pyspark.StorageLevel","pyspark.StorageLevel.DISK_ONLY","pyspark.StorageLevel.DISK_ONLY_2","pyspark.StorageLevel.DISK_ONLY_3","pyspark.StorageLevel.MEMORY_AND_DISK","pyspark.StorageLevel.MEMORY_AND_DISK_2","pyspark.StorageLevel.MEMORY_ONLY","pyspark.StorageLevel.MEMORY_ONLY_2","pyspark.StorageLevel.OFF_HEAP","pyspark.TaskContext","pyspark.TaskContext.attemptNumber","pyspark.TaskContext.get","pyspark.TaskContext.getLocalProperty","pyspark.TaskContext.partitionId","pyspark.TaskContext.resources","pyspark.TaskContext.stageId","pyspark.TaskContext.taskAttemptId","Estimator","Model","Pipeline","PipelineModel","PredictionModel","Predictor","Transformer","UnaryTransformer","BinaryLogisticRegressionSummary","BinaryLogisticRegressionTrainingSummary","BinaryRandomForestClassificationSummary","BinaryRandomForestClassificationTrainingSummary","DecisionTreeClassificationModel","DecisionTreeClassifier","FMClassificationModel","FMClassificationSummary","FMClassificationTrainingSummary","FMClassifier","GBTClassificationModel","GBTClassifier","LinearSVC","LinearSVCModel","LinearSVCSummary","LinearSVCTrainingSummary","LogisticRegression","LogisticRegressionModel","LogisticRegressionSummary","LogisticRegressionTrainingSummary","MultilayerPerceptronClassificationModel","MultilayerPerceptronClassificationSummary","MultilayerPerceptronClassificationTrainingSummary","MultilayerPerceptronClassifier","NaiveBayes","NaiveBayesModel","OneVsRest","OneVsRestModel","RandomForestClassificationModel","RandomForestClassificationSummary","RandomForestClassificationTrainingSummary","RandomForestClassifier","BisectingKMeans","BisectingKMeansModel","BisectingKMeansSummary","DistributedLDAModel","GaussianMixture","GaussianMixtureModel","GaussianMixtureSummary","KMeans","KMeansModel","LDA","LDAModel","LocalLDAModel","PowerIterationClustering","BinaryClassificationEvaluator","ClusteringEvaluator","Evaluator","MulticlassClassificationEvaluator","MultilabelClassificationEvaluator","RankingEvaluator","RegressionEvaluator","ANOVASelector","ANOVASelectorModel","Binarizer","BucketedRandomProjectionLSH","BucketedRandomProjectionLSHModel","Bucketizer","ChiSqSelector","ChiSqSelectorModel","CountVectorizer","CountVectorizerModel","DCT","ElementwiseProduct","FValueSelector","FValueSelectorModel","FeatureHasher","HashingTF","IDF","IDFModel","Imputer","ImputerModel","IndexToString","Interaction","MaxAbsScaler","MaxAbsScalerModel","MinHashLSH","MinHashLSHModel","MinMaxScaler","MinMaxScalerModel","NGram","Normalizer","OneHotEncoder","OneHotEncoderModel","PCA","PCAModel","PolynomialExpansion","QuantileDiscretizer","RFormula","RFormulaModel","RegexTokenizer","RobustScaler","RobustScalerModel","SQLTransformer","StandardScaler","StandardScalerModel","StopWordsRemover","StringIndexer","StringIndexerModel","Tokenizer","VarianceThresholdSelector","VarianceThresholdSelectorModel","VectorAssembler","VectorIndexer","VectorIndexerModel","VectorSizeHint","VectorSlicer","Word2Vec","Word2VecModel","FPGrowth","FPGrowthModel","PrefixSpan","pyspark.ml.functions.vector_to_array","ImageSchema","_ImageSchema","DenseMatrix","DenseVector","Matrices","Matrix","SparseMatrix","SparseVector","Vector","Vectors","Param","Params","TypeConverters","ALS","ALSModel","AFTSurvivalRegression","AFTSurvivalRegressionModel","DecisionTreeRegressionModel","DecisionTreeRegressor","FMRegressionModel","FMRegressor","GBTRegressionModel","GBTRegressor","GeneralizedLinearRegression","GeneralizedLinearRegressionModel","GeneralizedLinearRegressionSummary","GeneralizedLinearRegressionTrainingSummary","IsotonicRegression","IsotonicRegressionModel","LinearRegression","LinearRegressionModel","LinearRegressionSummary","LinearRegressionTrainingSummary","RandomForestRegressionModel","RandomForestRegressor","ANOVATest","ChiSquareTest","Correlation","FValueTest","KolmogorovSmirnovTest","MultivariateGaussian","Summarizer","SummaryBuilder","CrossValidator","CrossValidatorModel","ParamGridBuilder","TrainValidationSplit","TrainValidationSplitModel","BaseReadWrite","DefaultParamsReadable","DefaultParamsReader","DefaultParamsWritable","DefaultParamsWriter","GeneralMLWriter","HasTrainingSummary","Identifiable","MLReadable","MLReader","MLWritable","MLWriter","LogisticRegressionModel","LogisticRegressionWithLBFGS","LogisticRegressionWithSGD","NaiveBayes","NaiveBayesModel","SVMModel","SVMWithSGD","StreamingLogisticRegressionWithSGD","BisectingKMeans","BisectingKMeansModel","GaussianMixture","GaussianMixtureModel","KMeans","KMeansModel","LDA","LDAModel","PowerIterationClustering","PowerIterationClusteringModel","StreamingKMeans","StreamingKMeansModel","BinaryClassificationMetrics","MulticlassMetrics","RankingMetrics","RegressionMetrics","ChiSqSelector","ChiSqSelectorModel","ElementwiseProduct","HashingTF","IDF","IDFModel","Normalizer","StandardScaler","StandardScalerModel","Word2Vec","Word2VecModel","FPGrowth","FPGrowthModel","PrefixSpan","PrefixSpanModel","DenseMatrix","DenseVector","Matrices","Matrix","QRDecomposition","SparseMatrix","SparseVector","Vector","Vectors","BlockMatrix","CoordinateMatrix","DistributedMatrix","IndexedRow","IndexedRowMatrix","MatrixEntry","RowMatrix","SingularValueDecomposition","RandomRDDs","ALS","MatrixFactorizationModel","Rating","IsotonicRegression","IsotonicRegressionModel","LabeledPoint","LassoModel","LassoWithSGD","LinearModel","LinearRegressionModel","LinearRegressionWithSGD","RidgeRegressionModel","RidgeRegressionWithSGD","StreamingLinearAlgorithm","StreamingLinearRegressionWithSGD","ChiSqTestResult","KernelDensity","MultivariateGaussian","MultivariateStatisticalSummary","Statistics","DecisionTree","DecisionTreeModel","GradientBoostedTrees","GradientBoostedTreesModel","RandomForest","RandomForestModel","JavaLoader","JavaSaveable","LinearDataGenerator","Loader","MLUtils","Saveable","pyspark.resource.ExecutorResourceRequest","pyspark.resource.ExecutorResourceRequests","pyspark.resource.ResourceInformation","pyspark.resource.ResourceProfile","pyspark.resource.ResourceProfileBuilder","pyspark.resource.TaskResourceRequest","pyspark.resource.TaskResourceRequests","pyspark.sql.Column","pyspark.sql.DataFrame","pyspark.sql.DataFrame.agg","pyspark.sql.DataFrame.alias","pyspark.sql.DataFrame.approxQuantile","pyspark.sql.DataFrame.cache","pyspark.sql.DataFrame.checkpoint","pyspark.sql.DataFrame.coalesce","pyspark.sql.DataFrame.colRegex","pyspark.sql.DataFrame.collect","pyspark.sql.DataFrame.columns","pyspark.sql.DataFrame.corr","pyspark.sql.DataFrame.count","pyspark.sql.DataFrame.cov","pyspark.sql.DataFrame.createGlobalTempView","pyspark.sql.DataFrame.createOrReplaceGlobalTempView","pyspark.sql.DataFrame.createOrReplaceTempView","pyspark.sql.DataFrame.createTempView","pyspark.sql.DataFrame.crossJoin","pyspark.sql.DataFrame.crosstab","pyspark.sql.DataFrame.cube","pyspark.sql.DataFrame.describe","pyspark.sql.DataFrame.distinct","pyspark.sql.DataFrame.drop","pyspark.sql.DataFrame.dropDuplicates","pyspark.sql.DataFrame.drop_duplicates","pyspark.sql.DataFrame.dropna","pyspark.sql.DataFrame.dtypes","pyspark.sql.DataFrame.exceptAll","pyspark.sql.DataFrame.explain","pyspark.sql.DataFrame.fillna","pyspark.sql.DataFrame.filter","pyspark.sql.DataFrame.first","pyspark.sql.DataFrame.foreach","pyspark.sql.DataFrame.foreachPartition","pyspark.sql.DataFrame.freqItems","pyspark.sql.DataFrame.groupBy","pyspark.sql.DataFrame.head","pyspark.sql.DataFrame.hint","pyspark.sql.DataFrame.inputFiles","pyspark.sql.DataFrame.intersect","pyspark.sql.DataFrame.intersectAll","pyspark.sql.DataFrame.isLocal","pyspark.sql.DataFrame.isStreaming","pyspark.sql.DataFrame.join","pyspark.sql.DataFrame.limit","pyspark.sql.DataFrame.localCheckpoint","pyspark.sql.DataFrame.mapInPandas","pyspark.sql.DataFrame.na","pyspark.sql.DataFrame.orderBy","pyspark.sql.DataFrame.persist","pyspark.sql.DataFrame.printSchema","pyspark.sql.DataFrame.randomSplit","pyspark.sql.DataFrame.rdd","pyspark.sql.DataFrame.registerTempTable","pyspark.sql.DataFrame.repartition","pyspark.sql.DataFrame.repartitionByRange","pyspark.sql.DataFrame.replace","pyspark.sql.DataFrame.rollup","pyspark.sql.DataFrame.sameSemantics","pyspark.sql.DataFrame.sample","pyspark.sql.DataFrame.sampleBy","pyspark.sql.DataFrame.schema","pyspark.sql.DataFrame.select","pyspark.sql.DataFrame.selectExpr","pyspark.sql.DataFrame.semanticHash","pyspark.sql.DataFrame.show","pyspark.sql.DataFrame.sort","pyspark.sql.DataFrame.sortWithinPartitions","pyspark.sql.DataFrame.stat","pyspark.sql.DataFrame.storageLevel","pyspark.sql.DataFrame.subtract","pyspark.sql.DataFrame.summary","pyspark.sql.DataFrame.tail","pyspark.sql.DataFrame.take","pyspark.sql.DataFrame.toDF","pyspark.sql.DataFrame.toJSON","pyspark.sql.DataFrame.toLocalIterator","pyspark.sql.DataFrame.toPandas","pyspark.sql.DataFrame.transform","pyspark.sql.DataFrame.union","pyspark.sql.DataFrame.unionAll","pyspark.sql.DataFrame.unionByName","pyspark.sql.DataFrame.unpersist","pyspark.sql.DataFrame.where","pyspark.sql.DataFrame.withColumn","pyspark.sql.DataFrame.withColumnRenamed","pyspark.sql.DataFrame.withWatermark","pyspark.sql.DataFrame.write","pyspark.sql.DataFrame.writeStream","pyspark.sql.DataFrame.writeTo","pyspark.sql.DataFrameNaFunctions","pyspark.sql.DataFrameNaFunctions.drop","pyspark.sql.DataFrameNaFunctions.fill","pyspark.sql.DataFrameNaFunctions.replace","pyspark.sql.DataFrameReader.csv","pyspark.sql.DataFrameReader.format","pyspark.sql.DataFrameReader.jdbc","pyspark.sql.DataFrameReader.json","pyspark.sql.DataFrameReader.load","pyspark.sql.DataFrameReader.option","pyspark.sql.DataFrameReader.options","pyspark.sql.DataFrameReader.orc","pyspark.sql.DataFrameReader.parquet","pyspark.sql.DataFrameReader.schema","pyspark.sql.DataFrameReader.table","pyspark.sql.DataFrameStatFunctions","pyspark.sql.DataFrameStatFunctions.approxQuantile","pyspark.sql.DataFrameStatFunctions.corr","pyspark.sql.DataFrameStatFunctions.cov","pyspark.sql.DataFrameStatFunctions.crosstab","pyspark.sql.DataFrameStatFunctions.freqItems","pyspark.sql.DataFrameStatFunctions.sampleBy","pyspark.sql.DataFrameWriter.bucketBy","pyspark.sql.DataFrameWriter.csv","pyspark.sql.DataFrameWriter.format","pyspark.sql.DataFrameWriter.insertInto","pyspark.sql.DataFrameWriter.jdbc","pyspark.sql.DataFrameWriter.json","pyspark.sql.DataFrameWriter.mode","pyspark.sql.DataFrameWriter.option","pyspark.sql.DataFrameWriter.options","pyspark.sql.DataFrameWriter.orc","pyspark.sql.DataFrameWriter.parquet","pyspark.sql.DataFrameWriter.partitionBy","pyspark.sql.DataFrameWriter.save","pyspark.sql.DataFrameWriter.saveAsTable","pyspark.sql.DataFrameWriter.sortBy","pyspark.sql.DataFrameWriter.text","pyspark.sql.GroupedData","pyspark.sql.GroupedData.agg","pyspark.sql.GroupedData.apply","pyspark.sql.GroupedData.applyInPandas","pyspark.sql.GroupedData.avg","pyspark.sql.GroupedData.cogroup","pyspark.sql.GroupedData.count","pyspark.sql.GroupedData.max","pyspark.sql.GroupedData.mean","pyspark.sql.GroupedData.min","pyspark.sql.GroupedData.pivot","pyspark.sql.GroupedData.sum","pyspark.sql.Row","pyspark.sql.Row.asDict","pyspark.sql.SparkSession","pyspark.sql.SparkSession.builder.appName","pyspark.sql.SparkSession.builder.config","pyspark.sql.SparkSession.builder.enableHiveSupport","pyspark.sql.SparkSession.builder.getOrCreate","pyspark.sql.SparkSession.builder.master","pyspark.sql.SparkSession.catalog","pyspark.sql.SparkSession.conf","pyspark.sql.SparkSession.createDataFrame","pyspark.sql.SparkSession.getActiveSession","pyspark.sql.SparkSession.newSession","pyspark.sql.SparkSession.range","pyspark.sql.SparkSession.read","pyspark.sql.SparkSession.readStream","pyspark.sql.SparkSession.sparkContext","pyspark.sql.SparkSession.sql","pyspark.sql.SparkSession.stop","pyspark.sql.SparkSession.streams","pyspark.sql.SparkSession.table","pyspark.sql.SparkSession.udf","pyspark.sql.SparkSession.version","pyspark.sql.Window","pyspark.sql.Window.currentRow","pyspark.sql.Window.orderBy","pyspark.sql.Window.partitionBy","pyspark.sql.Window.rangeBetween","pyspark.sql.Window.rowsBetween","pyspark.sql.Window.unboundedFollowing","pyspark.sql.Window.unboundedPreceding","pyspark.sql.WindowSpec.orderBy","pyspark.sql.WindowSpec.partitionBy","pyspark.sql.WindowSpec.rangeBetween","pyspark.sql.WindowSpec.rowsBetween","pyspark.sql.avro.functions.from_avro","pyspark.sql.avro.functions.to_avro","pyspark.sql.functions.abs","pyspark.sql.functions.acos","pyspark.sql.functions.add_months","pyspark.sql.functions.aggregate","pyspark.sql.functions.approxCountDistinct","pyspark.sql.functions.approx_count_distinct","pyspark.sql.functions.array","pyspark.sql.functions.array_contains","pyspark.sql.functions.array_distinct","pyspark.sql.functions.array_except","pyspark.sql.functions.array_intersect","pyspark.sql.functions.array_join","pyspark.sql.functions.array_max","pyspark.sql.functions.array_min","pyspark.sql.functions.array_position","pyspark.sql.functions.array_remove","pyspark.sql.functions.array_repeat","pyspark.sql.functions.array_sort","pyspark.sql.functions.array_union","pyspark.sql.functions.arrays_overlap","pyspark.sql.functions.arrays_zip","pyspark.sql.functions.asc","pyspark.sql.functions.asc_nulls_first","pyspark.sql.functions.asc_nulls_last","pyspark.sql.functions.ascii","pyspark.sql.functions.asin","pyspark.sql.functions.atan","pyspark.sql.functions.atan2","pyspark.sql.functions.avg","pyspark.sql.functions.base64","pyspark.sql.functions.bin","pyspark.sql.functions.bitwiseNOT","pyspark.sql.functions.broadcast","pyspark.sql.functions.bround","pyspark.sql.functions.bucket","pyspark.sql.functions.cbrt","pyspark.sql.functions.ceil","pyspark.sql.functions.coalesce","pyspark.sql.functions.col","pyspark.sql.functions.collect_list","pyspark.sql.functions.collect_set","pyspark.sql.functions.column","pyspark.sql.functions.concat","pyspark.sql.functions.concat_ws","pyspark.sql.functions.conv","pyspark.sql.functions.corr","pyspark.sql.functions.cos","pyspark.sql.functions.cosh","pyspark.sql.functions.count","pyspark.sql.functions.countDistinct","pyspark.sql.functions.covar_pop","pyspark.sql.functions.covar_samp","pyspark.sql.functions.crc32","pyspark.sql.functions.create_map","pyspark.sql.functions.cume_dist","pyspark.sql.functions.current_date","pyspark.sql.functions.current_timestamp","pyspark.sql.functions.date_add","pyspark.sql.functions.date_format","pyspark.sql.functions.date_sub","pyspark.sql.functions.date_trunc","pyspark.sql.functions.datediff","pyspark.sql.functions.dayofmonth","pyspark.sql.functions.dayofweek","pyspark.sql.functions.dayofyear","pyspark.sql.functions.days","pyspark.sql.functions.decode","pyspark.sql.functions.degrees","pyspark.sql.functions.dense_rank","pyspark.sql.functions.desc","pyspark.sql.functions.desc_nulls_first","pyspark.sql.functions.desc_nulls_last","pyspark.sql.functions.element_at","pyspark.sql.functions.encode","pyspark.sql.functions.exists","pyspark.sql.functions.exp","pyspark.sql.functions.explode","pyspark.sql.functions.explode_outer","pyspark.sql.functions.expm1","pyspark.sql.functions.expr","pyspark.sql.functions.factorial","pyspark.sql.functions.filter","pyspark.sql.functions.first","pyspark.sql.functions.flatten","pyspark.sql.functions.floor","pyspark.sql.functions.forall","pyspark.sql.functions.format_number","pyspark.sql.functions.format_string","pyspark.sql.functions.from_csv","pyspark.sql.functions.from_json","pyspark.sql.functions.from_unixtime","pyspark.sql.functions.from_utc_timestamp","pyspark.sql.functions.get_json_object","pyspark.sql.functions.greatest","pyspark.sql.functions.grouping","pyspark.sql.functions.grouping_id","pyspark.sql.functions.hash","pyspark.sql.functions.hex","pyspark.sql.functions.hour","pyspark.sql.functions.hours","pyspark.sql.functions.hypot","pyspark.sql.functions.initcap","pyspark.sql.functions.input_file_name","pyspark.sql.functions.instr","pyspark.sql.functions.isnan","pyspark.sql.functions.isnull","pyspark.sql.functions.json_tuple","pyspark.sql.functions.kurtosis","pyspark.sql.functions.lag","pyspark.sql.functions.last","pyspark.sql.functions.last_day","pyspark.sql.functions.lead","pyspark.sql.functions.least","pyspark.sql.functions.length","pyspark.sql.functions.levenshtein","pyspark.sql.functions.lit","pyspark.sql.functions.locate","pyspark.sql.functions.log","pyspark.sql.functions.log10","pyspark.sql.functions.log1p","pyspark.sql.functions.log2","pyspark.sql.functions.lower","pyspark.sql.functions.lpad","pyspark.sql.functions.ltrim","pyspark.sql.functions.map_concat","pyspark.sql.functions.map_entries","pyspark.sql.functions.map_filter","pyspark.sql.functions.map_from_arrays","pyspark.sql.functions.map_from_entries","pyspark.sql.functions.map_keys","pyspark.sql.functions.map_values","pyspark.sql.functions.map_zip_with","pyspark.sql.functions.max","pyspark.sql.functions.md5","pyspark.sql.functions.mean","pyspark.sql.functions.min","pyspark.sql.functions.minute","pyspark.sql.functions.monotonically_increasing_id","pyspark.sql.functions.month","pyspark.sql.functions.months","pyspark.sql.functions.months_between","pyspark.sql.functions.nanvl","pyspark.sql.functions.next_day","pyspark.sql.functions.ntile","pyspark.sql.functions.overlay","pyspark.sql.functions.pandas_udf","pyspark.sql.functions.percent_rank","pyspark.sql.functions.percentile_approx","pyspark.sql.functions.posexplode","pyspark.sql.functions.posexplode_outer","pyspark.sql.functions.pow","pyspark.sql.functions.quarter","pyspark.sql.functions.radians","pyspark.sql.functions.rand","pyspark.sql.functions.randn","pyspark.sql.functions.rank","pyspark.sql.functions.regexp_extract","pyspark.sql.functions.regexp_replace","pyspark.sql.functions.repeat","pyspark.sql.functions.reverse","pyspark.sql.functions.rint","pyspark.sql.functions.round","pyspark.sql.functions.row_number","pyspark.sql.functions.rpad","pyspark.sql.functions.rtrim","pyspark.sql.functions.schema_of_csv","pyspark.sql.functions.schema_of_json","pyspark.sql.functions.second","pyspark.sql.functions.sequence","pyspark.sql.functions.sha1","pyspark.sql.functions.sha2","pyspark.sql.functions.shiftLeft","pyspark.sql.functions.shiftRight","pyspark.sql.functions.shiftRightUnsigned","pyspark.sql.functions.shuffle","pyspark.sql.functions.signum","pyspark.sql.functions.sin","pyspark.sql.functions.sinh","pyspark.sql.functions.size","pyspark.sql.functions.skewness","pyspark.sql.functions.slice","pyspark.sql.functions.sort_array","pyspark.sql.functions.soundex","pyspark.sql.functions.spark_partition_id","pyspark.sql.functions.split","pyspark.sql.functions.sqrt","pyspark.sql.functions.stddev","pyspark.sql.functions.stddev_pop","pyspark.sql.functions.stddev_samp","pyspark.sql.functions.struct","pyspark.sql.functions.substring","pyspark.sql.functions.substring_index","pyspark.sql.functions.sum","pyspark.sql.functions.sumDistinct","pyspark.sql.functions.tan","pyspark.sql.functions.tanh","pyspark.sql.functions.timestamp_seconds","pyspark.sql.functions.toDegrees","pyspark.sql.functions.toRadians","pyspark.sql.functions.to_csv","pyspark.sql.functions.to_date","pyspark.sql.functions.to_json","pyspark.sql.functions.to_timestamp","pyspark.sql.functions.to_utc_timestamp","pyspark.sql.functions.transform","pyspark.sql.functions.transform_keys","pyspark.sql.functions.transform_values","pyspark.sql.functions.translate","pyspark.sql.functions.trim","pyspark.sql.functions.trunc","pyspark.sql.functions.udf","pyspark.sql.functions.unbase64","pyspark.sql.functions.unhex","pyspark.sql.functions.unix_timestamp","pyspark.sql.functions.upper","pyspark.sql.functions.var_pop","pyspark.sql.functions.var_samp","pyspark.sql.functions.variance","pyspark.sql.functions.weekofyear","pyspark.sql.functions.when","pyspark.sql.functions.window","pyspark.sql.functions.xxhash64","pyspark.sql.functions.year","pyspark.sql.functions.years","pyspark.sql.functions.zip_with","pyspark.sql.streaming.DataStreamReader","pyspark.sql.streaming.DataStreamReader.csv","pyspark.sql.streaming.DataStreamReader.format","pyspark.sql.streaming.DataStreamReader.json","pyspark.sql.streaming.DataStreamReader.load","pyspark.sql.streaming.DataStreamReader.option","pyspark.sql.streaming.DataStreamReader.options","pyspark.sql.streaming.DataStreamReader.orc","pyspark.sql.streaming.DataStreamReader.parquet","pyspark.sql.streaming.DataStreamReader.schema","pyspark.sql.streaming.DataStreamReader.text","pyspark.sql.streaming.DataStreamWriter","pyspark.sql.streaming.DataStreamWriter.foreach","pyspark.sql.streaming.DataStreamWriter.foreachBatch","pyspark.sql.streaming.DataStreamWriter.format","pyspark.sql.streaming.DataStreamWriter.option","pyspark.sql.streaming.DataStreamWriter.options","pyspark.sql.streaming.DataStreamWriter.outputMode","pyspark.sql.streaming.DataStreamWriter.partitionBy","pyspark.sql.streaming.DataStreamWriter.queryName","pyspark.sql.streaming.DataStreamWriter.start","pyspark.sql.streaming.DataStreamWriter.trigger","pyspark.sql.streaming.ForeachBatchFunction","pyspark.sql.streaming.StreamingQuery","pyspark.sql.streaming.StreamingQuery.awaitTermination","pyspark.sql.streaming.StreamingQuery.exception","pyspark.sql.streaming.StreamingQuery.explain","pyspark.sql.streaming.StreamingQuery.id","pyspark.sql.streaming.StreamingQuery.isActive","pyspark.sql.streaming.StreamingQuery.lastProgress","pyspark.sql.streaming.StreamingQuery.name","pyspark.sql.streaming.StreamingQuery.processAllAvailable","pyspark.sql.streaming.StreamingQuery.recentProgress","pyspark.sql.streaming.StreamingQuery.runId","pyspark.sql.streaming.StreamingQuery.status","pyspark.sql.streaming.StreamingQuery.stop","pyspark.sql.streaming.StreamingQueryException","pyspark.sql.streaming.StreamingQueryManager","pyspark.sql.streaming.StreamingQueryManager.active","pyspark.sql.streaming.StreamingQueryManager.awaitAnyTermination","pyspark.sql.streaming.StreamingQueryManager.get","pyspark.sql.streaming.StreamingQueryManager.resetTerminated","ArrayType","BinaryType","BooleanType","ByteType","DataType","DateType","DecimalType","DoubleType","FloatType","IntegerType","LongType","MapType","NullType","ShortType","StringType","StructField","StructType","TimestampType","pyspark.streaming.DStream","pyspark.streaming.DStream.cache","pyspark.streaming.DStream.checkpoint","pyspark.streaming.DStream.cogroup","pyspark.streaming.DStream.combineByKey","pyspark.streaming.DStream.context","pyspark.streaming.DStream.count","pyspark.streaming.DStream.countByValue","pyspark.streaming.DStream.countByValueAndWindow","pyspark.streaming.DStream.countByWindow","pyspark.streaming.DStream.filter","pyspark.streaming.DStream.flatMap","pyspark.streaming.DStream.flatMapValues","pyspark.streaming.DStream.foreachRDD","pyspark.streaming.DStream.fullOuterJoin","pyspark.streaming.DStream.glom","pyspark.streaming.DStream.groupByKey","pyspark.streaming.DStream.groupByKeyAndWindow","pyspark.streaming.DStream.join","pyspark.streaming.DStream.leftOuterJoin","pyspark.streaming.DStream.map","pyspark.streaming.DStream.mapPartitions","pyspark.streaming.DStream.mapPartitionsWithIndex","pyspark.streaming.DStream.mapValues","pyspark.streaming.DStream.partitionBy","pyspark.streaming.DStream.persist","pyspark.streaming.DStream.pprint","pyspark.streaming.DStream.reduce","pyspark.streaming.DStream.reduceByKey","pyspark.streaming.DStream.reduceByKeyAndWindow","pyspark.streaming.DStream.reduceByWindow","pyspark.streaming.DStream.repartition","pyspark.streaming.DStream.rightOuterJoin","pyspark.streaming.DStream.saveAsTextFiles","pyspark.streaming.DStream.slice","pyspark.streaming.DStream.transform","pyspark.streaming.DStream.transformWith","pyspark.streaming.DStream.union","pyspark.streaming.DStream.updateStateByKey","pyspark.streaming.DStream.window","pyspark.streaming.StreamingContext","pyspark.streaming.StreamingContext.addStreamingListener","pyspark.streaming.StreamingContext.awaitTermination","pyspark.streaming.StreamingContext.awaitTerminationOrTimeout","pyspark.streaming.StreamingContext.binaryRecordsStream","pyspark.streaming.StreamingContext.checkpoint","pyspark.streaming.StreamingContext.getActive","pyspark.streaming.StreamingContext.getActiveOrCreate","pyspark.streaming.StreamingContext.getOrCreate","pyspark.streaming.StreamingContext.queueStream","pyspark.streaming.StreamingContext.remember","pyspark.streaming.StreamingContext.socketTextStream","pyspark.streaming.StreamingContext.sparkContext","pyspark.streaming.StreamingContext.start","pyspark.streaming.StreamingContext.stop","pyspark.streaming.StreamingContext.textFileStream","pyspark.streaming.StreamingContext.transform","pyspark.streaming.StreamingContext.union","pyspark.streaming.kinesis.InitialPositionInStream.LATEST","pyspark.streaming.kinesis.InitialPositionInStream.TRIM_HORIZON","pyspark.streaming.kinesis.KinesisUtils.createStream"],titleterms:{"class":0,"function":[2,5,333,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892],ALS:[347,451],_imageschema:335,abs:668,accumul:[7,8,9,151],aco:669,activ:931,add:8,add_month:670,addfil:152,addpyfil:153,addstreaminglisten:994,aftsurvivalregress:349,aftsurvivalregressionmodel:350,agg:[492,620],aggreg:[30,671],aggregatebykei:31,alia:493,allgath:11,alsmodel:348,anovaselector:273,anovaselectormodel:274,anovatest:369,api:[0,2],appli:621,applicationid:154,applyinpanda:622,appnam:634,approx_count_distinct:673,approxcountdistinct:672,approxquantil:[494,597],arrai:674,array_contain:675,array_distinct:676,array_except:677,array_intersect:678,array_join:679,array_max:680,array_min:681,array_posit:682,array_remov:683,array_repeat:684,array_sort:685,array_union:686,arrays_overlap:687,arrays_zip:688,arraytyp:935,asc:689,asc_nulls_first:690,asc_nulls_last:691,ascii:692,asdict:632,asin:693,atan2:695,atan:694,attemptnumb:[12,206],avg:[623,696],avro:[5,666,667],awaitanytermin:932,awaittermin:[917,995],awaitterminationortimeout:996,barrier:[13,32],barriertaskcontext:[10,11,12,13,14,15,16,17,18,19,20],barriertaskinfo:21,base64:697,basereadwrit:382,bin:698,binar:275,binaryclassificationevalu:266,binaryclassificationmetr:414,binaryfil:155,binarylogisticregressionsummari:221,binarylogisticregressiontrainingsummari:222,binaryrandomforestclassificationsummari:223,binaryrandomforestclassificationtrainingsummari:224,binaryrecord:156,binaryrecordsstream:997,binarytyp:936,bisectingkmean:[253,402],bisectingkmeansmodel:[254,403],bisectingkmeanssummari:255,bitwisenot:699,blockmatrix:442,booleantyp:937,broadcast:[22,23,24,25,26,27,28,157,700],bround:701,bucket:[278,702],bucketbi:603,bucketedrandomprojectionlsh:276,bucketedrandomprojectionlshmodel:277,builder:[634,635,636,637,638],bytetyp:938,cach:[33,495,954],cancelalljob:158,canceljobgroup:159,cartesian:34,catalog:639,cbrt:703,ceil:704,checkpoint:[35,496,955,998],chisqselector:[279,418],chisqselectormodel:[280,419],chisqtestresult:466,chisquaretest:370,classif:[2,3],cluster:[2,3],clusteringevalu:267,coalesc:[36,497,705],cogroup:[37,624,956],col:706,collect:[38,499],collect_list:707,collect_set:708,collectasmap:39,collectwithjobgroup:40,colregex:498,column:[490,500,709],combinebykei:[41,957],concat:710,concat_w:711,conf:640,config:635,contain:138,content:[1,4,5,6],context:[42,958],conv:712,coordinatematrix:443,core:0,corr:[501,598,713],correl:371,cos:714,cosh:715,count:[43,502,625,716,959],countapprox:44,countapproxdistinct:45,countbykei:46,countbyvalu:[47,960],countbyvalueandwindow:961,countbywindow:962,countdistinct:717,countvector:281,countvectorizermodel:282,cov:[503,599],covar_pop:718,covar_samp:719,crc32:720,create_map:721,createdatafram:641,createglobaltempview:504,createorreplaceglobaltempview:505,createorreplacetempview:506,createstream:1013,createtempview:507,crossjoin:508,crosstab:[509,600],crossvalid:377,crossvalidatormodel:378,csv:[585,604,894],cube:510,cume_dist:722,current_d:723,current_timestamp:724,currentrow:655,dai:733,datafram:[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580],dataframenafunct:[581,582,583,584],dataframeread:[585,586,587,588,589,590,591,592,593,594,595],dataframestatfunct:[596,597,598,599,600,601,602],dataframewrit:[603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618],datastreamread:[893,894,895,896,897,898,899,900,901,902,903],datastreamwrit:[904,905,906,907,908,909,910,911,912,913,914],datatyp:939,date_add:725,date_format:726,date_sub:727,date_trunc:728,datediff:729,datetyp:940,dayofmonth:730,dayofweek:731,dayofyear:732,dct:283,decimaltyp:941,decisiontre:471,decisiontreeclassifi:226,decisiontreeclassificationmodel:225,decisiontreemodel:472,decisiontreeregressionmodel:351,decisiontreeregressor:352,decod:734,defaultminpartit:160,defaultparallel:161,defaultparamsread:[383,384],defaultparamswrit:[385,386],degre:735,dense_rank:736,densematrix:[336,433],densevector:[337,434],desc:737,desc_nulls_first:738,desc_nulls_last:739,describ:511,destroi:23,disk_onli:197,disk_only_2:198,disk_only_3:199,distinct:[48,512],distribut:3,distributedldamodel:256,distributedmatrix:444,doc:0,doubletyp:942,drop:[513,582],drop_dupl:515,dropdupl:514,dropna:516,dstream:[953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992],dtype:517,dump:24,dump_profil:162,element_at:740,elementwiseproduct:[284,420],emptyrdd:163,enablehivesupport:636,encod:741,estim:213,evalu:[2,3,268],except:918,exceptal:518,executorresourcerequest:[483,484],exist:742,exp:743,explain:[519,919],explod:744,explode_out:745,expm1:746,expr:747,factori:748,featur:[2,3],featurehash:287,fill:583,fillna:520,filter:[49,521,749,963],first:[50,522,750],flatmap:[51,964],flatmapvalu:[52,965],flatten:751,floattyp:943,floor:752,fmclassifi:230,fmclassificationmodel:227,fmclassificationsummari:228,fmclassificationtrainingsummari:229,fmregressionmodel:353,fmregressor:354,fold:53,foldbykei:54,foral:753,foreach:[55,523,905],foreachbatch:906,foreachbatchfunct:915,foreachpartit:[56,524],foreachrdd:966,format:[586,605,895,907],format_numb:754,format_str:755,fpgrowth:[330,429],fpgrowthmodel:[331,430],fpm:[2,3],freqitem:[525,601],from_avro:666,from_csv:756,from_json:757,from_unixtim:758,from_utc_timestamp:759,fullouterjoin:[57,967],fvalueselector:285,fvalueselectormodel:286,fvaluetest:372,gaussianmixtur:[257,404],gaussianmixturemodel:[258,405],gaussianmixturesummari:259,gbtclassifi:232,gbtclassificationmodel:231,gbtregressionmodel:355,gbtregressor:356,generalizedlinearregress:357,generalizedlinearregressionmodel:358,generalizedlinearregressionsummari:359,generalizedlinearregressiontrainingsummari:360,generalmlwrit:387,get:[14,139,194,207,933],get_json_object:760,getact:999,getactiveorcr:1000,getactivesess:642,getal:140,getcheckpointfil:58,getconf:164,getlocalproperti:[15,165,208],getnumpartit:59,getorcr:[166,637,1001],getresourceprofil:60,getrootdirectori:195,getstoragelevel:61,gettaskinfo:16,glom:[62,968],gradientboostedtre:473,gradientboostedtreesmodel:474,greatest:761,group:762,groupbi:[63,526],groupbykei:[64,969],groupbykeyandwindow:970,groupeddata:[619,620,621,622,623,624,625,626,627,628,629,630],grouping_id:763,groupwith:65,hadoopfil:167,hadooprdd:168,hash:764,hashingtf:[288,421],hastrainingsummari:388,head:527,hex:765,hint:528,histogram:66,hour:[766,767],hypot:768,identifi:389,idf:[289,422],idfmodel:[290,423],imag:2,imageschema:334,imput:291,imputermodel:292,indexedrow:445,indexedrowmatrix:446,indextostr:293,indic:0,initcap:769,initialpositioninstream:[1011,1012],input_file_nam:770,inputfil:529,insertinto:606,instr:771,integertyp:944,interact:294,intersect:[68,530],intersectal:531,isact:921,ischeckpoint:69,isempti:70,isloc:532,islocallycheckpoint:71,isnan:772,isnul:773,isotonicregress:[361,454],isotonicregressionmodel:[362,455],isstream:533,javaload:477,javasav:478,jdbc:[587,607],join:[72,534,971],json:[588,608,896],json_tupl:774,kei:74,kerneldens:467,keybi:73,kinesi:[6,1011,1012,1013],kinesisutil:1013,kmean:[260,406],kmeansmodel:[261,407],kolmogorovsmirnovtest:373,kurtosi:775,labeledpoint:456,lag:776,lassomodel:457,lassowithsgd:458,last:777,last_dai:778,lastprogress:922,latest:1011,lda:[262,408],ldamodel:[263,409],lead:779,least:780,leftouterjoin:[75,972],length:781,levenshtein:782,limit:535,linalg:[2,3],lineardatagener:479,linearmodel:459,linearregress:363,linearregressionmodel:[364,460],linearregressionsummari:365,linearregressiontrainingsummari:366,linearregressionwithsgd:461,linearsvc:233,linearsvcmodel:234,linearsvcsummari:235,linearsvctrainingsummari:236,lit:783,load:[25,589,897],load_from_path:26,loader:480,localcheckpoint:[76,536],localldamodel:264,locat:784,log10:786,log1p:787,log2:788,log:785,logisticregress:237,logisticregressionmodel:[238,394],logisticregressionsummari:239,logisticregressiontrainingsummari:240,logisticregressionwithlbfg:395,logisticregressionwithsgd:396,longtyp:945,lookup:77,lower:789,lpad:790,ltrim:791,map:[78,973],map_concat:792,map_entri:793,map_filt:794,map_from_arrai:795,map_from_entri:796,map_kei:797,map_valu:798,map_zip_with:799,mapinpanda:537,mappartit:[79,135,974],mappartitionswithindex:[80,136,975],mappartitionswithsplit:81,maptyp:946,mapvalu:[82,976],master:638,matric:[338,435],matrix:[339,436],matrixentri:447,matrixfactorizationmodel:452,max:[83,626,800],maxabsscal:295,maxabsscalermodel:296,md5:801,mean:[84,627,802],meanapprox:85,memory_and_disk:200,memory_and_disk_2:201,memory_onli:202,memory_only_2:203,min:[86,628,803],minhashlsh:297,minhashlshmodel:298,minmaxscal:299,minmaxscalermodel:300,minut:804,mllib:3,mlreadabl:390,mlreader:391,mlutil:481,mlwritabl:392,mlwriter:393,mode:609,model:214,modul:[2,3,4,5,6],monotonically_increasing_id:805,month:[806,807],months_between:808,multiclassclassificationevalu:269,multiclassmetr:415,multilabelclassificationevalu:270,multilayerperceptronclassifi:244,multilayerperceptronclassificationmodel:241,multilayerperceptronclassificationsummari:242,multilayerperceptronclassificationtrainingsummari:243,multivariategaussian:[374,468],multivariatestatisticalsummari:469,naivebay:[245,397],naivebayesmodel:[246,398],name:[87,923],nanvl:809,newapihadoopfil:169,newapihadooprdd:170,newsess:643,next_dai:810,ngram:301,normal:[302,424],ntile:811,nulltyp:947,off_heap:204,onehotencod:303,onehotencodermodel:304,onevsrest:247,onevsrestmodel:248,option:[590,591,610,611,898,899,908,909],orc:[592,612,900],orderbi:[539,656,662],outputmod:910,overlai:812,packag:[1,2,3],package_extens:150,pandas_udf:813,parallel:171,param:[2,344,345],paramgridbuild:379,parquet:[593,613,901],partitionbi:[88,614,657,663,911,977],partitionid:[17,209],pca:305,pcamodel:306,percent_rank:814,percentile_approx:815,persist:[89,540,978],picklefil:172,pipe:90,pipelin:[2,215],pipelinemodel:216,pivot:629,polynomialexpans:307,posexplod:816,posexplode_out:817,pow:818,poweriterationclust:[265,410],poweriterationclusteringmodel:411,pprint:979,predictionmodel:217,predictor:218,prefixspan:[332,431],prefixspanmodel:432,printschema:541,processallavail:924,pyspark:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,333,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013],python:0,qrdecomposit:437,quantilediscret:308,quarter:819,querynam:912,queuestream:1002,radian:820,rand:821,randn:822,random:3,randomforest:475,randomforestclassifi:252,randomforestclassificationmodel:249,randomforestclassificationsummari:250,randomforestclassificationtrainingsummari:251,randomforestmodel:476,randomforestregressionmodel:367,randomforestregressor:368,randomrdd:450,randomsplit:[91,542],rang:[173,644],rangebetween:[658,664],rank:823,rankingevalu:271,rankingmetr:416,rate:453,rdd:[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,543],rddbarrier:[134,135,136],read:645,readstream:646,recentprogress:925,recommend:[2,3],reduc:[92,980],reducebykei:[93,981],reducebykeyandwindow:982,reducebykeyloc:94,reducebywindow:983,regexp_extract:824,regexp_replac:825,regextoken:311,registertempt:544,regress:[2,3],regressionevalu:272,regressionmetr:417,rememb:1003,repartit:[95,545,984],repartitionandsortwithinpartit:96,repartitionbyrang:546,repeat:826,replac:[547,584],resettermin:934,resourc:[4,18,174,210,483,484,485,486,487,488,489],resourceinform:485,resourceprofil:486,resourceprofilebuild:487,revers:827,rformula:309,rformulamodel:310,ridgeregressionmodel:462,ridgeregressionwithsgd:463,rightouterjoin:[97,985],rint:828,robustscal:312,robustscalermodel:313,rollup:548,round:829,row:[631,632],row_numb:830,rowmatrix:448,rowsbetween:[659,665],rpad:831,rtrim:832,runid:926,runjob:175,samesemant:549,sampl:[98,550],samplebi:[551,602],samplebykei:99,samplestdev:100,samplevari:101,save:615,saveabl:482,saveashadoopdataset:102,saveashadoopfil:103,saveasnewapihadoopdataset:104,saveasnewapihadoopfil:105,saveaspicklefil:106,saveassequencefil:107,saveast:616,saveastextfil:[108,986],schema:[552,594,902],schema_of_csv:833,schema_of_json:834,second:835,select:553,selectexpr:554,semantichash:555,sequenc:836,sequencefil:176,set:141,setal:142,setappnam:143,setcheckpointdir:177,setexecutorenv:144,setifmiss:145,setjobdescript:178,setjobgroup:179,setlocalproperti:180,setloglevel:181,setmast:146,setnam:109,setsparkhom:147,setsystemproperti:182,sha1:837,sha2:838,shiftleft:839,shiftright:840,shiftrightunsign:841,shorttyp:948,show:556,show_profil:183,shuffl:842,signum:843,sin:844,singularvaluedecomposit:449,sinh:845,size:846,skew:847,slice:[848,987],sockettextstream:1004,sort:557,sort_arrai:849,sortbi:[110,617],sortbykei:111,sortwithinpartit:558,soundex:850,spark:0,spark_partition_id:851,sparkconf:[137,138,139,140,141,142,143,144,145,146,147,148],sparkcontext:[149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,647,1005],sparkfil:[193,194,195],sparksess:[633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653],sparkus:184,sparsematrix:[340,438],sparsevector:[341,439],split:852,sql:[5,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934],sqltransform:314,sqrt:853,stageid:[19,211],standardscal:[315,425],standardscalermodel:[316,426],start:[913,1006],starttim:185,stat:[2,3,112,559],statist:470,statu:927,statustrack:186,stddev:854,stddev_pop:855,stddev_samp:856,stdev:113,stop:[187,649,928,1007],stopwordsremov:317,storagelevel:[196,197,198,199,200,201,202,203,204,560],stream:[5,6,650,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013],streamingcontext:[993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010],streamingkmean:412,streamingkmeansmodel:413,streaminglinearalgorithm:464,streaminglinearregressionwithsgd:465,streaminglogisticregressionwithsgd:401,streamingqueri:[916,917,918,919,920,921,922,923,924,925,926,927,928],streamingqueryexcept:929,streamingquerymanag:[930,931,932,933,934],stringindex:318,stringindexermodel:319,stringtyp:949,struct:857,structfield:950,structtyp:951,subpackag:1,substr:858,substring_index:859,subtract:[114,561],subtractbykei:115,sum:[116,630,860],sumapprox:117,sumdistinct:861,summar:375,summari:562,summarybuild:376,svmmodel:399,svmwithsgd:400,tabl:[0,595,651],tail:563,take:[118,564],takeord:119,takesampl:120,tan:862,tanh:863,taskattemptid:[20,212],taskcontext:[205,206,207,208,209,210,211,212],taskresourcerequest:[488,489],text:[618,903],textfil:188,textfilestream:1008,timestamp_second:864,timestamptyp:952,to_avro:667,to_csv:867,to_dat:868,to_json:869,to_timestamp:870,to_utc_timestamp:871,todebugstr:[121,148],todegre:865,todf:565,tojson:566,token:320,tolocaliter:[122,567],top:123,topanda:568,toradian:866,trainvalidationsplit:380,trainvalidationsplitmodel:381,transform:[219,569,872,988,1009],transform_kei:873,transform_valu:874,transformwith:989,translat:875,tree:3,treeaggreg:124,treereduc:125,trigger:914,trim:876,trim_horizon:1012,trunc:877,tune:2,type:5,typeconvert:346,udf:[652,878],uiweburl:189,unarytransform:220,unbase64:879,unboundedfollow:660,unboundedpreced:661,unhex:880,union:[126,190,570,990,1010],unional:571,unionbynam:572,unix_timestamp:881,unpersist:[27,127,573],updatestatebykei:991,upper:882,util:[2,3],valu:[9,28,128],var_pop:883,var_samp:884,varianc:[129,885],variancethresholdselector:321,variancethresholdselectormodel:322,vector:[342,343,440,441],vector_to_arrai:333,vectorassembl:323,vectorindex:324,vectorindexermodel:325,vectorsizehint:326,vectorslic:327,version:[191,653],weekofyear:886,welcom:0,when:887,where:574,wholetextfil:192,window:[654,655,656,657,658,659,660,661,888,992],windowspec:[662,663,664,665],withcolumn:575,withcolumnrenam:576,withresourc:130,withwatermark:577,word2vec:[328,427],word2vecmodel:[329,428],write:578,writestream:579,writeto:580,xxhash64:889,year:[890,891],zip:131,zip_with:892,zipwithindex:132,zipwithuniqueid:133}})